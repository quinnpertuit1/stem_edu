"","type","title","description","skills"
"1","software_development","Python for Everybody Specialization","About This SpecializationThis Specialization builds on the success of the Python for Everybody course and will introduce fundamental programming concepts including data structures, networked application program interfaces, and databases, using the Python programming language. In the Capstone Project, you’ll use the technologies learned throughout the Specialization to design and create your own applications for data retrieval, processing, and visualization.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","This course aims to teach everyone the basics of programming computers using Python. We cover the basics of how one constructs a program from a series of simple instructions in Python.  The course has no pre-requisites and avoids all but the simplest mathematics. Anyone with moderate computer experience should be able to master the materials in this course. This course will cover Chapters 1-5 of the textbook “Python for Informatics”.   This course is equivalent to the first half of the 11-week ""Programming for Everybody (Python)"" course.  Once a student completes this course, they will be ready to take more advanced programming courses. This course covers Python 3.%This course will introduce the core data structures of the Python programming language. We will move past the basics of procedural programming and explore how we can use the Python built-in data structures such as lists, dictionaries, and tuples to perform increasingly complex data analysis. This course will cover Chapters 6-10 of the textbook “Python for Informatics”.  This course is equivalent to the second half of the 11-week ""Programming for Everybody (Python)"" course. This course covers Python 3.%This course will show how one can treat the Internet as a source of data.  We will scrape, parse, and read web data as well as access data using web APIs.  We will work with HTML, XML, and JSON data formats in Python.  This course will cover Chapters 11-13 of the textbook “Python for Informatics”. To succeed in this course, you should be familiar with the material covered in Chapters 1-10 of the textbook and the first two courses in this specialization.  These topics include variables and expressions, conditional execution (loops, branching, and try/except), functions, Python data structures (strings, lists, dictionaries, and tuples), and manipulating files.  This course covers Python 3.%This course will introduce students to the basics of the Structured Query Language (SQL) as well as basic database design for storing data as part of a multi-step data gathering, analysis, and processing effort.  The course will use SQLite3 as its database.  We will also build web crawlers and multi-step data gathering and visualization processes.  We will use the D3.js library to do basic data visualization.  This course will cover Chapters 14-15 of the book “Python for Informatics”. To succeed in this course, you should be familiar with the material covered in Chapters 1-13 of the textbook and the first three courses in this specialization. This course covers Python 3.%In the capstone, students will build a series of applications to retrieve, process and visualize data using Python.   The projects will involve all the elements of the specialization.  In the first part of the capstone, students will do some visualizations to become familiar with the technologies in use and then will pursue their own project to visualize some other data that they have or can find.  Chapters 15 and 16 from the book “Python for Informatics” will serve as the backbone for the capstone. This course covers Python 3."
"2","software_development","Java Programming and Software Engineering Fundamentals Specialization","About This SpecializationTake your first step towards a career in software development with this introduction to Java—one of the most in-demand programming languages and the foundation of the Android operating system. Designed for beginners, this Specialization will teach you core programming concepts and equip you to write programs to solve complex problems. In addition, you will gain the foundational skills a software engineer needs to solve real-world problems, from designing algorithms to testing and debugging your programs.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.Projects OverviewCentered around projects, this Specialization will help you create a portfolio of work to demonstrate your new programming skills. In the capstone you will create a recommender engine similar to those used by Netflix or Amazon. Additional projects in your portfolio will include:an interactive webpage that applies filters to images, an analysis of CSV data files, an encryption program, and a predictive text generator.","Learn foundational programming concepts (e.g., functions, for loops, conditional statements) and how to solve problems like a programmer. In addition, learn basic web development as you build web pages using HTML, CSS, JavaScript. By the end of the course, will create a web page where others can upload their images and apply image filters that you create.

After completing this course, you will be able to:
1. Think critically about how to solve a problem using programming;
2. Write JavaScript programs using functions, for loops, and conditional statements;
3. Use HTML to construct a web page with paragraphs, divs, images, links, and lists;
4. Add styles to a web page with CSS IDs and classes; and
5. Make a web page interactive with JavaScript commands like alert, onClick, onChange, adding input features like an image canvas, button, and slider.%Learn to code in Java and improve your programming and problem-solving skills. You will learn to design algorithms as well as develop and debug programs. Using custom open-source classes, you will write programs that access and transform images, websites, and other types of data. At the end of the course you will build a program that determines the popularity of different baby names in the US over time by analyzing comma separated value (CSV) files. 

After completing this course you will be able to:
1. Edit, compile, and run a Java program;
2. Use conditionals and loops in a Java program;
3. Use Java API documentation in writing programs. 
4. Debug a Java program using the scientific method;
5. Write a Java method to solve a specific problem;
6. Develop a set of test cases as part of developing a program;
7. Create a class with multiple methods that work together to solve a problem; and
8. Use divide-and-conquer design techniques for a program that uses multiple methods.%Build on the software engineering skills you learned in “Java Programming: Solving Problems with Software” by learning new data structures. Use these data structures to build more complex programs that use Java’s object-oriented features. At the end of the course you will write an encryption program and a program to break your encryption algorithm.

After completing this course, you will be able to:
1. Read and write data from/to files;
2. Solve problems involving data files;
3. Perform quantitative analyses of data (e.g., finding maximums, minimums, averages); 
4. Store and manipulate data in an array or ArrayList;
5. Combine multiple classes to solve larger problems;
6. Use iterables and collections (including maps) in Java.%Solve real world problems with Java using multiple classes. Learn how to create programming solutions that scale using Java interfaces. Recognize that software engineering is more than writing code - it also involves logical thinking and design. By the end of this course you will have written a program that analyzes and sorts earthquake data, and developed a predictive text generator.

After completing this course, you will be able to:
1. Use sorting appropriately in solving problems;
2. Develop classes that implement the Comparable interface;
3. Use timing data to analyze empirical performance;
4. Break problems into multiple classes, each with their own methods;
5. Determine if a class from the Java API can be used in solving a particular problem;
6. Implement programming solutions using multiple approaches and recognize tradeoffs;
7. Use object-oriented concepts including interfaces and abstract classes when developing programs;
8. Appropriately hide implementation decisions so they are not visible in public methods; and
9. Recognize the limitations of algorithms and Java programs in solving problems.
10. Recognize standard Java classes and idioms including exception-handling, static methods, java.net, and java.io packages.%Ever wonder how Netflix decides what movies to recommend for you? Or how Amazon recommends books? We can get a feel for how it works by building a simplified recommender of our own!

In this capstone, you will show off your problem solving and Java programming skills by creating recommender systems. You will work with data for movies, including ratings, but the principles involved can easily be adapted to books, restaurants, and more. You will write a program to answer questions about the data, including which items should be recommended to a user based on their ratings of several movies. Given input files on users ratings and movie titles, you will be able to:

1. Read in and parse data into lists and maps;
2. Calculate average ratings;
3. Calculate how similar a given rater is to another user based on ratings; and
4. Recommend movies to a given user based on ratings. 
5. Display recommended movies for a given user on a webpage."
"3","software_development","Data Structures and Algorithms Specialization","About This SpecializationThis specialization is a mix of theory and practice: you will learn algorithmic techniques for solving various computational problems and will implement about 100 algorithmic coding problems in a programming language of your choice. No other online course in Algorithms even comes close to offering you a wealth of programming challenges that you may face at your next job interview. To prepare you, we invested over 3000 hours into designing our challenges as an alternative to multiple choice questions that you usually find in MOOCs. Sorry, we do not believe in multiple choice questions when it comes to learning algorithms...or anything else in computer science! For each algorithm you develop and implement, we designed multiple tests to check its correctness and running time — you will have to debug your programs without even knowing what these tests are! It may sound difficult, but we believe it is the only way to truly understand how the algorithms work and to master the art of programming. The specialization contains two real-world projects: Big Networks and Genome Assembly. You will analyze both road networks and social networks and will learn how to compute the shortest route between New York and San Francisco (1000 times faster than the standard shortest path algorithms!) Afterwards, you will learn how to assemble genomes from millions of short fragments of DNA and how assembly algorithms fuel recent developments in personalized medicine.Created by:Industry Partners:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","The course covers basic algorithmic techniques and ideas for computational problems arising frequently in practical applications: sorting and searching, divide and conquer, greedy algorithms, dynamic programming. We will learn a lot of theory: how to sort data and how it helps for searching; how to break a large problem into pieces and solve them recursively; when it makes sense to proceed greedily; how dynamic programming is used in genomic studies. You will practice solving computational problems, designing new algorithms, and implementing solutions efficiently (so that they run in less than a second).%A good algorithm usually comes together with a set of good data structures that allow the algorithm to manipulate the data efficiently. In this course, we consider the common data structures that are used in various computational problems. You will learn how these data structures are implemented in different programming languages and will practice implementing them in our programming assignments. This will help you to understand what is going on inside a particular built-in implementation of a data structure and what to expect from it. You will also learn typical use cases for these data structures.

A few examples of questions that we are going to cover in this class are the following:
1. What is a good strategy of resizing a dynamic array?
2. How priority queues are implemented in C++, Java, and Python?
3. How to implement a hash table so that the amortized running time of all operations is O(1) on average?
4. What are good strategies to keep a binary tree balanced? 

You will also learn how services like Dropbox manage to upload some large files instantly and to save a lot of storage space!%If you have ever used a navigation service to find optimal route and estimate time to destination, you've used algorithms on graphs. Graphs arise in various real-world situations as there are road networks, computer networks and, most recently, social networks! If you're looking for the fastest time to get to work, cheapest way to connect set of computers into a network or efficient algorithm to automatically find communities and opinion leaders in Facebook, you're going to work with graphs and algorithms on graphs.

In this course, you will first learn what a graph is and what are some of the most important properties. Then you'll learn several ways to traverse graphs and how you can do useful things while traversing the graph in some order. We will then talk about shortest paths algorithms — from the basic ones to those which open door for 1000000 times faster algorithms used in Google Maps and other navigational services. You will use these algorithms if you choose to work on our Fast Shortest Routes industrial capstone project. We will finish with minimum spanning trees which are used to plan road, telephone and computer networks and also find applications in clustering and approximate algorithms.%World and internet is full of textual information. We search for information using textual queries, we read websites, books, e-mails. All those are strings from the point of view of computer science. To make sense of all that information and make search efficient, search engines use many string algorithms. Moreover, the emerging field of personalized medicine uses many search algorithms to find disease-causing mutations in the human genome.%You've learned the basic algorithms now and are ready to step into the area of more complex problems and algorithms to solve them. Advanced algorithms build upon basic ones and use new ideas. We will start with networks flows which are used in more typical applications such as optimal matchings, finding disjoint paths and flight scheduling as well as more surprising ones like image segmentation in computer vision. We then proceed to linear programming with applications in optimizing budget allocation, portfolio optimization, finding the cheapest diet satisfying all requirements and many others. Next we discuss inherently hard problems for which no exact good solutions are known (and not likely to be found) and how to solve them in practice. We finish with a soft introduction to streaming algorithms that are heavily used in Big Data processing. Such algorithms are usually designed to be able to process huge datasets without being able even to store a dataset.%In Spring 2011, thousands of people in Germany were hospitalized with a deadly disease that started as food poisoning with bloody diarrhea and often led to kidney failure. It was the beginning of the deadliest outbreak in recent history, caused by a mysterious bacterial strain that we will refer to as E. coli X. Soon, German officials linked the outbreak to a restaurant in Lübeck, where nearly 20% of the patrons had developed bloody diarrhea in a single week. At this point, biologists knew that they were facing a previously unknown pathogen and that traditional methods would not suffice – computational biologists would be needed to assemble and analyze the genome of the newly emerged pathogen.

To investigate the evolutionary origin and pathogenic potential of the outbreak strain, researchers started a crowdsourced research program. They released bacterial DNA sequencing data from one of a patient, which elicited a burst of analyses carried out by computational biologists on four continents. They even used GitHub for the project: https://github.com/ehec-outbreak-crowdsourced/BGI-data-analysis/wiki

The 2011 German outbreak represented an early example of epidemiologists collaborating with computational biologists to stop an outbreak. In this Genome Assembly Programming Challenge, you will follow in the footsteps of the bioinformaticians investigating the outbreak by developing a program to assemble the genome of the E. coli X from millions of overlapping substrings of the E.coli X genome."
"4","software_development","Algorithms Specialization","About This SpecializationAlgorithms are the heart of computer science, and the subject has countless practical applications as well as intellectual depth. This specialization is an introduction to algorithms for learners with at least a little programming experience. The specialization is rigorous but emphasizes the big picture and conceptual understanding over low-level implementation and mathematical details. After completing this specialization, you will be well-positioned to ace your technical interviews and speak fluently about algorithms with other programmers and computer scientists.

About the instructor: Tim Roughgarden has been a professor in the Computer Science Department at Stanford University since 2004. He has taught and published extensively on the subject of algorithms and their applications.Created by:4 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.Projects OverviewLearners will practice and master the fundamentals of algorithms through several types of assessments.  Every week, there is a multiple choice quiz to test your understanding of the most important concepts.  There are also weekly programming assignments, where you implement one of the algorithms covered in lecture in a programming language of your choosing.  Each course concludes with a multiple-choice final exam.","The primary topics in this part of the specialization are: asymptotic (""Big-oh"") notation, sorting and searching, divide and conquer (master method, integer and matrix multiplication, closest pair), and randomized algorithms (QuickSort, contraction algorithm for min cuts).%The primary topics in this part of the specialization are: data structures (heaps, balanced search trees, hash tables, bloom filters), graph primitives (applications of breadth-first and depth-first search, connectivity, shortest paths), and their applications (ranging from deduplication to social network analysis).%The primary topics in this part of the specialization are: greedy algorithms (scheduling, minimum spanning trees, clustering, Huffman codes) and dynamic programming (knapsack, sequence alignment, optimal search trees).%The primary topics in this part of the specialization are: shortest paths (Bellman-Ford, Floyd-Warshall, Johnson), NP-completeness and what it means for the algorithm designer, and strategies for coping with computationally intractable problems (analysis of heuristics, local search)."
"5","software_development","Applied Data Science with Python Specialization","About This SpecializationThe 5 courses in this University of Michigan specialization introduce learners to data science through the python programming language. This skills-based specialization is intended for learners who have basic a python or programming background, and want to apply statistical, machine learning, information visualization, text analysis, and social network analysis techniques through popular python toolkits such as pandas, matplotlib, scikit-learn, nltk, and networkx to gain insight into their data.

Introduction to Data Science in Python (course 1), Applied Plotting, Charting & Data Representation in Python (course 2), and Applied Machine Learning in Python (course 3) should be taken in order and prior to any other course in the specialization. After completing those, courses 4 and 5 can be taken in any order. All 5 are required to earn a certificate.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","This course will introduce the learner to the basics of the python programming environment, including how to download and install python, expected fundamental python programming techniques, and how to find help with python programming questions. The course will also introduce data manipulation and cleaning techniques using the popular python pandas data science library and introduce the abstraction of the DataFrame as the central data structure for data analysis. The course will end with a statistics primer, showing how various statistical measures can be applied to pandas DataFrames. By the end of the course, students will be able to take tabular data, clean it,  manipulate it, and run basic inferential statistical analyses.

This course should be taken before any of the other Applied Data Science with Python courses:  Applied Plotting, Charting & Data Representation in Python, Applied Machine Learning in Python, Applied Text Mining in Python, Applied Social Network Analysis in Python.%This course will introduce the learner to information visualization basics, with a focus on reporting and charting using the matplotlib library. The course will start with a design and information literacy perspective, touching on what makes a good and bad visualization, and what statistical measures translate into in terms of visualizations. The second week will focus on the technology used to make visualizations in python, matplotlib, and introduce users to best practices when creating basic charts and how to realize design decisions in the framework. The third week will describe the gamut of functionality available in matplotlib, and demonstrate a variety of basic statistical charts helping learners to identify when a particular method is good for a particular problem. The course will end with a discussion of other forms of structuring and visualizing data. 

This course should be taken after Introduction to Data Science in Python and before the remainder of the Applied Data Science with Python courses: Applied Machine Learning in Python, Applied Text Mining in Python, and Applied Social Network Analysis in Python.%This course will introduce the learner to applied machine learning, focusing more on the techniques and methods than on the statistics behind these methods. The course will start with a discussion of how machine learning is different than descriptive statistics, and introduce the scikit learn toolkit. The issue of dimensionality of data will be discussed, and the task of clustering data, as well as evaluating those clusters, will be tackled. Supervised approaches for creating predictive models will be described, and learners will be able to apply the scikit learn predictive modelling methods while understanding process issues related to data generalizability (e.g. cross validation, overfitting). The course will end with a look at more advanced techniques, such as building ensembles, and practical limitations of predictive models. By the end of this course, students will be able to identify the difference between a supervised (classification) and unsupervised (clustering) technique, identify which technique they need to apply for a particular dataset and need, engineer features to meet that need, and write python code to carry out an analysis.

This course should be taken after Introduction to Data Science in Python and Applied Plotting, Charting & Data Representation in Python and before Applied Text Mining in Python and Applied Social Analysis in Python.%This course will introduce the learner to text mining and text manipulation basics. The course begins with an understanding of how text is handled by python, the structure of text both to the machine and to humans, and an overview of the nltk framework for manipulating text. The second week focuses on common manipulation needs, including regular expressions (searching for text), cleaning text, and preparing text for use by machine learning processes. The third week will apply basic natural language processing methods to text, and demonstrate how text classification is accomplished. The final week will explore more advanced methods for detecting the topics in documents and grouping them by similarity (topic modelling). 

This course should be taken after: Introduction to Data Science in Python, Applied Plotting, Charting & Data Representation in Python, and Applied Machine Learning in Python.%This course will introduce the learner to network modelling through the networkx toolset. Used to model knowledge graphs and physical and virtual networks, the lens will be social network analysis. The course begins with an understanding of what network modelling is (graph theory) and motivations for why we might model phenomena as networks. The second week introduces the networkx library and discusses how to build and visualize networks. The third week will describe metrics as they relate to the networks and demonstrate how these metrics can be applied to graph structures. The final week will explore the social networking analysis workflow, from problem identification through to generation of insight.

This course should be taken after: Introduction to Data Science in Python, Applied Plotting, Charting & Data Representation in Python, and Applied Machine Learning in Python."
"6","software_development","Software Product Management Specialization","About This SpecializationIn this Software Product Management Specialization, you will master Agile software management practices to lead a team of developers and interact with clients. In the final Capstone Project, you will practice and apply management techniques to realistic scenarios that you will face as a Software Product Manager. You will have the opportunity to share your experiences and learn from the insights of others as part of a Software Product ManagementCreated by:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","This course highlights the importance and role of software product management. It also provides an overview of the specialization, as well as its goals, structure, and expectations. The course explains the value of process, requirements, planning, and monitoring in producing better software. 
 
Upon successful completion of this course, you will be able to:

 - Relate software product management to better software products
 - Recognize the role of a software product manager
 - Reflect on how Agile principles will improve your own projects%This course delves into a variety of processes to structure software development. It also covers the foundations of core Agile practices, such as Extreme Programming and Scrum.

Upon successful completion of this course, you will be able to:

- Distinguish between different process models for organizing software production.
- Gauge the applicability of process models for a software development project.
- Apply the fundamentals of Agile software development and management practices.%This course covers practical techniques to elicit and express software requirements from client interactions.  

Upon successful completion of this course, you will be able to:

 - Create clear requirements to drive effective software development
 - Visualize client needs using low-fidelity prototypes
 - Maximize the effectiveness of client interactions
 - Adapt to changing product requirements%This course covers the techniques required to break down and map requirements into plans that will ultimately drive software production.

Upon successful completion of this course, you will be able to:

 - Create effective plans for software development
 - Map user requirements to developer tasks
 - Assess and plan for project risks
 - Apply velocity-driven planning techniques
 - Generate work estimates for software products%This course covers techniques for monitoring your projects in order to align client needs, project plans, and software production. It focuses on metrics and reviews to track and improve project progress and software quality.
 
Upon successful completion of this course, you will be able to:

 - Apply techniques to measure and visualize project progress
 - Integrate Agile review practices to increase project visibility
 - Reflect on lessons learned in software projects through retrospective exercises
 - Improve project and process quality through ongoing measurement%In this six-week capstone course, you will gain practical management experience in a safe, simulated software production setting. You will apply Agile practices and techniques to conquer industry-inspired challenges. Interacting with a realistic client, you will discern what they want and express what they truly need in software requirements to drive software production. Upon completing the capstone, you will be prepared to advance your career as a confident software product management professional."
"7","software_development","Fundamentals of Computing Specialization","About This SpecializationThis Specialization covers much of the material that first-year Computer Science students take at Rice University. Students learn sophisticated programming skills in Python from the ground up and apply these skills in building more than 20 fun projects. The Specialization concludes with a Capstone exam that allows the students to demonstrate the range of knowledge that they have acquired in the Specialization.Created by:7 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","This two-part course is designed to help students with very little or no computing background learn the basics of building simple interactive applications. Our language of choice, Python, is an easy-to learn, high-level computer language that is used in many of the computational courses offered on Coursera. To make learning Python easy, we have developed a new browser-based programming environment that makes developing interactive applications in Python simple. These applications will involve windows whose contents are graphical and respond to buttons, the keyboard and the mouse.

In part 1 of this course, we will introduce the basic elements of programming (such as expressions, conditionals, and functions) and then use these elements to create simple interactive applications such as a digital stopwatch.  Part 1 of this class will culminate in building a version of the classic arcade game ""Pong"".%This two-part course is designed to help students with very little or no computing background learn the basics of building simple interactive applications. Our language of choice, Python, is an easy-to learn, high-level computer language that is used in many of the computational courses offered on Coursera. To make learning Python easy, we have developed a new browser-based programming environment that makes developing interactive applications in Python simple. These applications will involve windows whose contents are graphical and respond to buttons, the keyboard and the mouse.

In part 2 of this course, we will introduce more elements of programming (such as list, dictionaries, and loops) and then use these elements to create games such as Blackjack.  Part 1 of this class will culminate in building a version of the classic arcade game ""Asteroids"".  Upon completing this course, you will be able to write small, but interesting Python programs.  The next course in the specialization will begin to introduce a more principled approach to writing programs and solving computational problems that will allow you to write larger and more complex programs.%This two-part course builds upon the programming skills that you learned in our Introduction to Interactive Programming in Python course.  We will augment those skills with both important programming practices and critical mathematical problem solving skills.  These skills underlie larger scale computational problem solving and programming. The main focus of the class will be programming weekly mini-projects in Python that build upon the mathematical and programming principles that are taught in the class. To keep the class fun and engaging, many of the projects will involve working with strategy-based games.

In part 1 of this course, the programming aspect of the class will focus on coding standards and testing.  The mathematical portion of the class will focus on probability, combinatorics, and counting with an eye towards practical applications of these concepts in Computer Science.  

Recommended Background - Students should be comfortable writing small (100+ line) programs in Python using constructs such as lists, dictionaries and classes and also have a high-school math background that includes algebra and pre-calculus.%This two-part course introduces the basic mathematical and programming principles that underlie much of Computer Science. Understanding these principles is crucial to the process of creating efficient and well-structured solutions for computational problems.  To get hands-on experience working with these concepts, we will use the Python programming language. The main focus of the class will be weekly mini-projects that build upon the mathematical and programming principles that are taught in the class. To keep the class fun and engaging, many of the projects will involve working with strategy-based games.

In part 2 of this course,  the programming portion of the class will focus on concepts such as recursion, assertions, and invariants. The mathematical portion of the class will focus on searching, sorting, and recursive data structures.  Upon completing this course, you will have a solid foundation in the principles of computation and programming.  This will prepare you for the next course in the specialization, which will begin to introduce a structured approach to developing and analyzing algorithms.  Developing such algorithmic thinking skills will be critical to writing large scale software and solving real world computational problems.%Experienced Computer Scientists analyze and solve computational problems at a level of abstraction that is beyond that of any particular programming language.  This two-part course builds on the principles that you learned in our Principles of Computing course and is designed to train students in the mathematical concepts and process of ""Algorithmic Thinking"", allowing them to build simpler, more efficient solutions to real-world computational problems.

In part 1 of this course, we will study the notion of algorithmic efficiency and consider its application to several problems from graph theory.  As the central part of the course, students will implement several important graph algorithms in Python and then use these algorithms to analyze two large real-world data sets.  The main focus of these tasks is to understand interaction between the algorithms and the structure of the data sets being analyzed by these algorithms.

Recommended Background - Students should be comfortable writing intermediate size  (300+ line) programs in Python and have a basic understanding of searching, sorting, and recursion. Students should also have a solid math background that includes algebra, pre-calculus and a familiarity with the math concepts covered in ""Principles of Computing"".%Experienced Computer Scientists analyze and solve computational problems at a level of abstraction that is beyond that of any particular programming language.  This two-part class is designed to train students in the mathematical concepts and process of ""Algorithmic Thinking"", allowing them to build simpler, more efficient solutions to computational problems.

In part 2 of this course, we will study advanced algorithmic techniques such as divide-and-conquer and dynamic programming.  As the central part of the course, students will implement several algorithms in Python that incorporate these techniques and then use these algorithms to analyze two large real-world data sets.  The main focus of these tasks is to understand interaction between the algorithms and the structure of the data sets being analyzed by these algorithms.

Once students have completed this class, they will have both the mathematical and programming skills to analyze, design, and program solutions to a wide range of computational problems.  While this class will use Python as its vehicle of choice to practice Algorithmic Thinking, the concepts that you will learn in this class transcend any particular programming language.%While most specializations on Coursera conclude with a project-based course, students in the ""Fundamentals of Computing"" specialization have completed more than 20+ projects during the first six courses of the specialization. Given that much of the material in these courses is reused from session to session, our goal in this capstone class is to provide a conclusion to the specialization that allows each student an opportunity to demonstrate their individual mastery of the material in the specialization.

With this objective in mind, the focus in this Capstone class will be an exam whose questions are updated periodically. This approach is designed to help insure that each student is solving the exam problems on his/her own without outside help. For students that have done their own work, we do not anticipate that the exam will be particularly hard. However, those students who have relied too heavily on outside help in previous classes may have a difficult time. We believe that this approach will increase the value of the Certificate for this specialization."
"8","software_development","Object Oriented Java Programming: Data Structures and Beyond Specialization","About This SpecializationThis Specialization covers intermediate topics in software development. You’ll learn object-oriented programming principles that will allow you to use Java to its full potential, and you’ll implement data structures and algorithms for organizing large amounts of data in a way that is both efficient and easy to work with. You’ll also practice critically evaluating your own code, and you’ll build technical communication skills that will help you prepare for job interviews and collaborative work as a software engineer. In the final Capstone Project, you’ll apply your skills to analyze data collected from a real-world (social) network. Google has contributed real-world projects and the involvement of its engineers as guest lecturers to these courses. A small, select group of top learners who complete the Specialization will be offered practice interviews with Google recruiters. Invitation to a practice interview does not guarantee an actual interview or employment.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","Welcome to our course on Object Oriented Programming in Java using data visualization. People come to this course with many different goals -- and we are really excited to work with all of you! Some of you want to be professional software developers, others want to improve your programming skills to implement that cool personal project that you’ve been thinking about, while others of you might not yet know why you’re here and are trying to figure out what this course is all about.

This is an intermediate Java course. We recommend this course to learners who have previous experience in software development or a background in computer science.  Our goal is that by the end of this course each and every one of you feels empowered to create a Java program that’s more advanced than any you have created in the past and that is personally interesting to you. In achieving this goal you will also learn the fundamentals of Object Oriented Programming, how to leverage the power of existing libraries, how to build graphical user interfaces, and how to use some core algorithms for searching and sorting data. And this course is project-based, so we’ll dive right into the project immediately!

We are excited to be offering a unique course structure, designed to support learners of different backgrounds in succeeding at their own pace. The first module explains how this will work and if this course is right for you. We also recommend taking a few minutes to explore the course site. A good place to start is the navigation bar on the left. Click Course Content to see what material we’ll cover each week, as well preview the assignments you’ll need to complete to pass the course. Click Discussions to see forums where you can discuss the course material with fellow students taking the class. Be sure to introduce yourself to everyone in the Meet and Greet forum.

This course should take about 6 weeks to complete. You can check out the recommended course schedule below to see a quick overview of the lessons and assignments you’ll complete each week.

We’re excited you’re here learning with us. Let’s get started!%How do Java programs deal with vast quantities of data? Many of the data structures and algorithms that work with introductory toy examples break when applications process real, large data sets.  Efficiency is critical, but how do we achieve it, and how do we even measure it?

This is an intermediate Java course. We recommend this course to learners who have previous experience in software development or a background in computer science, and in particular, we recommend that you have taken the first course in this specialization (which also requires some previous experience with Java).  

In this course, you will use and analyze data structures that are used in industry-level applications, such as linked lists, trees, and hashtables.  You will explain how these data structures make programs more efficient and flexible.  You will apply asymptotic Big-O analysis to describe the performance of algorithms and evaluate which strategy to use for efficient data retrieval, addition of new data, deletion of elements, and/or memory usage.

The program you will build throughout this course allows its user to manage, manipulate and reason about large sets of textual data.  This is an intermediate Java course, and we will build on your prior knowledge.  This course is designed around  the same video series as in our first course in this specialization, including explanations of core content, learner videos, student and engineer testimonials, and support videos -- to better allow you to choose your own path through the course!%How does Google Maps plan the best route for getting around town given current traffic conditions?  How does an internet router forward packets of network traffic to minimize delay?  How does an aid group allocate resources to its affiliated local partners?

To solve such problems, we first represent the key pieces of data in a complex data structure. In this course, you’ll learn about data structures, like graphs, that are fundamental for working with structured real world data.  You will develop, implement, and analyze algorithms for working with this data to solve real world problems.   In addition, as the programs you develop in this course become more complex, we’ll examine what makes for good code and class hierarchy design so that you can not only write correct code, but also share it with other people and maintain it in the future.

The backbone project in this course will be a route planning application.  You will apply the concepts from each Module directly to building an application that allows an autonomous agent (or a human driver!) to navigate its environment.  And as usual we have our different video series to help tie the content back to its importance in the real world and to provide tiered levels of support to meet your personal needs.%You’ve hit a major milestone as a computer scientist and are becoming a capable programmer. You now know how to solve problems, write algorithms, and analyze solutions; and you have a wealth of tools (like data structures) at your disposal.  You may now be ready for an internship or (possibly) an entry-level software engineering job.  But can you land the internship/job?  It depends in part on how well you can solve new technical problems and communicate during interviews.  How can you get better at this?  Practice!  

With the support of Google’s recruiting and engineering teams we’ve provided tips, examples, and practice opportunities in this course that may help you with a number of tech companies.  We’ll assist you to organize into teams to practice.  Lastly, we’ll give you basic job search advice, and tips for succeeding once you’re on the job.%In this capstone project we’ll combine  all of the skills from all four specialization courses to do something really fun: analyze social networks!  

The opportunities for learning are practically endless in a social network.  Who are the “influential” members of the network?  What are the sub-communities in the network?   Who is connected to whom, and by how many links?   These are just some of the questions you can explore in this project.

We will provide you with a real-world data set and some infrastructure for getting started, as well as some warm up tasks and basic project requirements, but then it’ll be up to you where you want to take the project.  If you’re running short on ideas, we’ll have several suggested directions that can help get your creativity and imagination going.  Finally, to integrate the skills you acquired in course 4 (and to show off your project!) you will be asked to create a video showcase of your final product."
"9","software_development","An Introduction to Programming the Internet of Things (IOT) Specialization","About This SpecializationDesign, create, and deploy a fun IoT device using Arduino and Raspberry Pi platforms.

This Specialization covers embedded systems, the Raspberry Pi Platform, and the Arduino environment for building devices that can control the physical world. In the final Capstone Project, you’ll apply the skills you learned by designing, building, and testing a microcontroller-based embedded system, producing a unique final project suitable for showcasing to future employers. Please note that this specialization does not offer discussion forums.Created by:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","The explosive growth of the “Internet of Things” is changing our world and the rapid drop in price for typical IoT components is allowing people to innovate new designs and products at home. In this first class in the specialization you will learn the importance of IoT in society, the current components of typical IoT devices and trends for the future. IoT design considerations, constraints and interfacing between the physical world and your device will also be covered. You will also learn how to make design trade-offs between hardware and software. We'll also cover key components of networking to ensure that students understand how to connect their device to the Internet. Please note that this course does not include discussion forums.

Upon completing this course, you will be able to:
1.       Define the term “Internet of Things”
2.       State the technological trends which have led to IoT
3.       Describe the impact of IoT on society
4.       Define what an embedded system is in terms of its interface
5.       Enumerate and describe the components of an embedded system
6.       Describe the interactions of embedded systems with the physical world
7.       Name the core hardware components most commonly used in IoT devices
8.       Describe the interaction between software and hardware in an IoT device
9.       Describe the role of an operating system to support software in an IoT device
10.     Explain the use of networking and basic networking hardware
11.     Describe the structure of the Internet
12.     Describe the meaning of a “network protocol”
13.     Explain MANETs and their relation to IoT%The Arduino is an open-source computer hardware/software platform for building digital devices and interactive objects that can sense and control the physical world around them. In this class you will learn how the Arduino platform works in terms of the physical board and libraries and the IDE (integrated development environment). You will also learn about shields, which are smaller boards that plug into the main Arduino board to perform other functions such as sensing light, heat, GPS tracking, or providing a user interface display. The course will also cover programming the Arduino using C code and accessing the pins on the board via the software to control external devices. Please note that this course does not include discussion forums.

Upon completing this course, you will be able to:
1.       Outline the composition of the Arduino development board
2.       Describe what it means to program the board's firmware
3.       Read board schematics
4.       Install Arduino IDE
5.       Describe what ""shields"" are and how they are used
6.       Specify the role of libraries in the use of shields
7.       Compile and run a program
8.       Name C Variables and Types
9.       Name common C operators
10.     Use conditionals and loops
11.     Explain functions, their definition and invocation
12.     Explain the implications of global variables
13.     Undertake the Arduino build process
14.     Describe the role of the tools behind the IDE
15.     Describe how to invoke functions in classes
16.     Explain the structure of an Arduino sketch
17.     Access the pins of the Arduino
18.     Differentiate between digital and analog pin
19.     Debug embedded software
20.     Explain the importance of controllability and observability in the debugging process
21.     Describe common debugging architectures for embedded systems
22.     Explain how the UART Serial communication protocol works
23.     Describe how the Arduino Serial library performs serial communication%Arduino senses the environment by receiving inputs from add-on devices such as sensors, and can control the world around it by adjusting lights, motors, and other actuators. In this class you will learn how and when to use the different types of sensors and how to connect them to the Arduino. Since the external world uses continuous or analog signals and the hardware is digital you will learn how these signals are converted back-and-forth and how this must be considered as you program your device. You'll also learn about the use of Arduino-specific shields and the shields software libraries to interface with the real world. Please note that this course does not include discussion forums.%The Raspberry Pi is a small, affordable single-board computer that you will use to design and develop fun and practical IoT devices while learning programming and computer hardware. In addition, you will learn how to set up up the Raspberry Pi environment, get a Linux operating system running, and write and execute some basic Python code on the Raspberry Pi. You will also learn how to use Python-based IDE (integrated development environments) for the Raspberry Pi and how to trace and debug Python code on the device. Please note that this course does not include discussion forums.%The Raspberry Pi uses a variety of input/output devices based on protocols such as HDMI, USB, and Ethernet to communicate with the outside world. In this class you will learn how to use these protocols with other external devices (sensors, motors, GPS, orientation, LCD screens etc.) to get your IoT device to interact with the real world. Most physical devices use analog signals;  however computer hardware is digital so in this class you will learn how these signals are converted back-and-forth and how this must be considered as you program your device. The basic design of a sensor-actuator system will also be covered. You will also learn how to build more sophisticated hardware systems using Raspberry Pi expansion boards to create fun and exciting IoT devices. Please note that this course does not include discussion forums.%In this Capstone course, you will design a microcontroller-based embedded system. As an option, you can also build and test a system. The focus of your project will be to design the system so that it can be built on a low-cost budget for a real-world application. To complete this project you'll need to use all the skills you've learned in the course (programming microcontrollers, system design, interfacing, etc.). The project will include some core requirements, but leave room for your creativity in how you approach the project. In the end, you will produce a unique final project, suitable for showcasing to future potential employers.  

Note that for the three required assignments you do NOT need to purchase software and hardware to complete this course. There is an optional fourth assignment for students who wish to build and demonstrate their system using an Arduino or Raspberry Pi. Please also note that this course does not include discussion forums.

Upon completing this course, you will be able to:
1.       Write a requirements specification document
2.       Create a system-level design
3.       Explore design options
4.       Create a test plan"
"10","software_development","Functional Programming in Scala Specialization","About This SpecializationDiscover how to write elegant code that works the first time it is run.

This Specialization provides a hands-on introduction to functional programming using the widespread programming language, Scala. It begins from the basic building blocks of the functional paradigm, first showing how to use these blocks to solve small problems, before building up to combining these concepts to architect larger functional programs. You'll see how the functional paradigm facilitates parallel and distributed programming, and through a series of hands on examples and programming assignments, you'll learn how to analyze data sets small to large; from parallel programming on multicore architectures, to distributed programming on a cluster using Apache Spark. A final capstone project will allow you to apply the skills you learned by building a large data-intensive application using real-world data.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","Functional programming is becoming increasingly widespread in industry. This trend is driven by the adoption of Scala as the main programming language for many applications. Scala fuses functional and object-oriented programming in a practical package. It interoperates seamlessly with both Java and Javascript. Scala is the implementation language of many important frameworks, including Apache Spark, Kafka, and Akka. It provides the core infrastructure for sites such as Twitter, Tumblr and also Coursera.

In this course you will discover the elements of the functional programming style and learn how to apply them usefully in your daily programming tasks. You will also develop a solid foundation for reasoning about functional programs, by touching upon proofs of invariants and the tracing of execution symbolically.

The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series programming projects as homework assignments.

Learning Outcomes. By the end of this course you will be able to:

 - understand the principles of functional programming,
 - write purely functional programs, using recursion,
   pattern matching, and higher-order functions,
 - combine functional programming with objects and classes,
 - design immutable data structures,
 - reason about properties of functions,
 - understand generic types for functional programs

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line.%In this course you will learn how to apply the functional programming style in the design of larger applications. You'll get to know important new functional programming concepts, from lazy evaluation to structuring your libraries using monads. We'll work on larger and more involved examples, from state space exploration to random testing to discrete circuit simulators. You’ll also learn some best practices on how to write good Scala code in the real world.

Several parts of this course deal with the question how functional programming interacts with mutable state. We will explore the consequences of combining functions and state. We will also look at purely functional alternatives to mutable state, using infinite data structures or functional reactive programming.

Learning Outcomes. By the end of this course you will be able to:

 - recognize and apply design principles of functional programs,
 - design functional libraries and their APIs,
 - competently combine functions and state in one program,
 - understand reasoning techniques for programs that combine 
   functions and state,
 - write simple functional reactive applications.

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Functional Programming Principles in Scala: https://www.coursera.org/learn/progfun1.%With every smartphone and computer now boasting multiple processors, the use of functional ideas to facilitate parallel programming is becoming increasingly widespread. In this course, you'll learn the fundamentals of parallel programming, from task parallelism to data parallelism. In particular, you'll see how many familiar ideas from functional programming map perfectly to to the data parallel paradigm. We'll start the nuts and bolts how to effectively parallelize familiar collections operations, and we'll build up to parallel collections, a production-ready data parallel collections library available in the Scala standard library. Throughout, we'll apply these concepts through several hands-on examples that analyze real-world data, such as popular algorithms like k-means clustering.

Learning Outcomes. By the end of this course you will be able to:

- reason about task and data parallel programs,
- express common algorithms in a functional style and solve them in parallel,
- competently microbenchmark parallel code,
- write programs that effectively use parallel collections to achieve performance

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Functional Program Design in Scala: https://www.coursera.org/learn/progfun2.%Manipulating big data distributed over a cluster using functional concepts is rampant in industry, and is arguably one of the first widespread industrial uses of functional ideas. This is evidenced by the popularity of MapReduce and Hadoop, and most recently Apache Spark, a fast, in-memory distributed collections framework written in Scala. In this course, we'll see how the data parallel paradigm can be extended to the distributed case, using Spark throughout. We'll cover Spark's programming model in detail, being careful to understand how and when it differs from familiar programming models, like shared-memory parallel collections or sequential Scala collections. Through hands-on examples in Spark and Scala, we'll learn when important issues related to distribution like latency and network communication should be considered and how they can be addressed effectively for improved performance.

Learning Outcomes. By the end of this course you will be able to:

- read data from persistent storage and load it into Apache Spark,
- manipulate data with Spark and Scala,
- express algorithms for data analysis in a functional style, 
- recognize how to avoid shuffles and recomputation in Spark,

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Parallel Programming: https://www.coursera.org/learn/parprog1.%In the final capstone project you will apply the skills you learned by building a large data-intensive application using real-world data.

You will implement a complete application processing several gigabytes of data. This application will show interactive visualizations of the evolution of temperatures over time all over the world.

The development of such an application will involve:
 — transforming data provided by weather stations into meaningful information like, for instance, the average temperature of each point of the globe over the last ten years ;
 — then, making images from this information by using spatial and linear interpolation techniques ;
 — finally, implementing how the user interface will react to users’ actions."
"11","software_development","Agile Development Specialization","About This SpecializationIn this Specialization, you'll gain an understanding and appreciation of the principles and practice of agile management. You'll learn to coordinate all aspects of the agile development process, including running design sprints, managing teams, and fostering a culture of experimentation. In the final Capstone Project, you'll apply what you've learned to guide a real-world software development project to successful completion.

UVA DardenCreated by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","Despite everyone's good intentions, hard work and solid ideas, too many projects end up creating unneeded, unusable, and unsellable products. But it doesn't have to be this way. Agile and design thinking offer a different--and effective--approach to product development, one that results in valuable solutions to meaningful problems. In this course, you’ll learn how to determine what's valuable to a user early in the process--to frontload value--by focusing your team on testable narratives about the user and creating a strong shared perspective. 

We’ll show you how to:
- Explain key concepts and practices from the agile product development methodology
- Create a strong shared perspective and drive to value using personas and problem scenarios
- Diagnose what software to develop and why using a set of agile user stories and prototypes
- Facilitate narrative collaboration with user stories and prototypes 
- Allow for early testing and validation by analyzing and deciding on story backlogs

As a  Project Management Institute (PMI®) Registered Education Provider, the University of Virginia Darden School of Business has been approved by PMI to issue 25 professional development units (PDUs) for this course, which focuses on core competencies recognized by PMI. (Provider #2122) 

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.%Typically, clients and managers don't want to pay for design (or strategy) -- they want ‘results’! Too often, this leads to solutions that just don’t make sense and aren’t valuable to anyone. 
 
Design sprints allow you to meet client's desire for quick, specific outcomes while making time to do things right. In this course, you’ll learn how to plan and run situation-appropriate sprints to avoid waste and deliver value sooner. 
 
We'll show you how to: 
- Plan, sell, and conduct design sprints that deliver valuable, actionable insights
- Go out and learn who your customer really is and what’s important to them
- Test your value propositions before you invest in building solutions
- Test your user interface design to make sure it’s really usable
- Focus and drive to actionable conclusions on questions of approach and architecture

As a  Project Management Institute (PMI®) Registered Education Provider, the University of Virginia Darden School of Business has been approved by PMI to issue 25 professional development units (PDUs) for this course, which focuses on core competencies recognized by PMI. (Provider #2122) 

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.

Prerequisites: Getting Started: Agile Meets Design Thinking or familiarity with agile and design thinking methodologies.%Traditional development processes often lead to team frustration and poor results. Agile offers a different approach to managing the complexity of software development. This course focuses on the day-to-day jobs of running a software development program and how leading agile methodologies (Scrum, XP, kanban) can help you do them better. 

From transitioning a team to agile to running sprints to managing stakeholders, this course gives you the skills you need to manage an agile team in your specific operating environment. 

We'll show you how to: 
- Think through and focus on the most important aspects of your projects and sprints
- Facilitate your team’s initial and ongoing adoption of the specific agile practices that work for you
- Anchor your outcomes and success criteria in durable ideas about what makes for valuable products
- Support your team's transition from traditional approaches to agile 
- Create an agile-friendly environment across functional disciplines
- Identify and manage outside stakeholder needs 

As a  Project Management Institute (PMI®) Registered Education Provider, the University of Virginia Darden School of Business has been approved by PMI to issue 20 professional development units (PDUs) for this course, which focuses on core competencies recognized by PMI. (Provider #2122) 

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.%To deliver agile outcomes, you have to do more than implement an agile process; you have to create a culture of experimentation. It's this commitment to experimenting that's at the heart of today’s most successful implementations of agile. This course shows you how to integrate the practice of experimentation across concept testing, usability testing, functional testing, and continuous deployment. 

Basically, we’ll show you how to use experiments to answer these three big questions: 
     Should we build it? (And then: Did it matter?)
     Is it usable?
     Did it break?

We'll show you how to: 
- Translate your product’s strategic direction into a user-centric charter with lots of small, testable ideas
- Test user motivation to make sure you’re building something that matters
- Design and conduct usability testing (even without working software)
- Use narrative collaboration to focus your testing 
- Integrate functional testing into a more continuous release flow

As a  Project Management Institute (PMI®) Registered Education Provider, the University of Virginia Darden School of Business has been approved by PMI to issue 20 professional development units (PDUs) for this course, which focuses on core competencies recognized by PMI. (Provider #2122) 

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.%This project-centered course provides a guided opportunity for you to practice your agile development skills. Using the venture design process that frames the four courses in this Specialization, you will apply agile processes to a project of your choice or to a provided venture concept. From persona, problem scenario, and user story development to designing user testing and product launch, you’ll practice leading an agile project. You’ll finish the course with a portfolio-building design brief that demonstrates your learning and specialized skills in agile product development.

To get the most out of this course, we suggest you first complete the other four courses in the Agile Development Specialization (Getting Started: Agile Meets Design Thinking; Running Product Design Sprints, Managing an Agile Team, Testing with Agile). 

By the end of this course, you'll be able to:
--Formulate foundational positioning statements
--Create, refine and test actionable personas
--Conduct user interviews and analyze the results
--Determine a 'happy path' to quickly test user stories
--Run motivation and usability testing and evaluate the results

As a  Project Management Institute (PMI®) Registered Education Provider, the University of Virginia Darden School of Business has been approved by PMI to issue 40 professional development units (PDUs) for this course, which focuses on core competencies recognized by PMI. (Provider #2122) 

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org."
"12","software_development","Mastering Software Development in R Specialization","About This SpecializationThis Specialization covers R software development for building data science tools. As the field of data science evolves, it has become clear that software development skills are essential for producing useful data science results and products. You will obtain rigorous training in the R language, including the skills for handling complex data, building R packages and developing custom data visualizations. You will learn modern software development practices to build tools that are highly reusable, modular, and suitable for use in a team-based environment or a community of developers.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.Projects OverviewIn each of the courses, learners will deploy their newly acquired advanced R language skills to manipulate complex datasets, write powerful functions, create a new R package, and develop new visualization tools for building custom data graphics. These projects will result in a portfolio of R code that can be reused and built upon for deployment in the real world.","This course provides a rigorous introduction to the R programming language, with a  particular focus on using R for software development in a data science setting. Whether you are part of a data science team or working individually within a community of developers, this course will give you the knowledge of R needed to make useful contributions in those settings. As the first course in the Specialization, the course provides the essential foundation of R needed for the following courses. We cover basic R concepts and language fundamentals, key concepts like tidy data and related ""tidyverse"" tools, processing and manipulation of complex and large datasets, handling textual data, and basic data science tasks. Upon completing this course, learners will have fluency at the R console and will be able to create tidy datasets from a wide range of possible data sources.%This course covers advanced topics in R programming that are necessary for developing powerful, robust, and reusable data science tools. Topics covered include functional programming in R, robust error handling, object oriented programming, profiling and benchmarking, debugging, and proper design of functions. Upon completing this course you will be able to identify and abstract common data analysis tasks and to encapsulate them in user-facing functions. Because every data science environment encounters unique data challenges, there is always a need to develop custom software specific to your organization’s mission. You will also be able to define new data types in R and to develop a universe of functionality specific to those data types to enable cleaner execution of data science tasks and stronger reusability within a team.%Writing good code for data science is only part of the job. In order to maximizing the usefulness and reusability of data science software, code must be organized and distributed in a manner that adheres to community-based standards and provides a good user experience. This course covers the primary means by which R software is organized and distributed to others. We cover R package development, writing good documentation and vignettes, writing robust software, cross-platform development, continuous integration tools, and distributing packages via CRAN and GitHub. Learners will produce R packages that satisfy the criteria for submission to CRAN.%The data science revolution has produced reams of new data from a wide variety of new sources. These new datasets are being used to answer new questions in way never before conceived. Visualization remains one of the most powerful ways draw conclusions from data, but the influx of new data types requires the development of new visualization techniques and building blocks. This course provides you with the skills for creating those new visualization building blocks. We focus on the ggplot2 framework and describe how to use and extend the system to suit the specific needs of your organization or team. Upon completing this course, learners will be able to build the tools needed to visualize a wide variety of data types and will have the fundamentals needed to address new data types as they come about.%R Programming Capstone"
"13","software_development","User Interface Design Specialization","About This SpecializationIn this Specialization, you will learn industry-standard theory and methods for developing successful user interfaces (UIs). Upon completing this Specialization, you will have fluency with the user research, prototyping and evaluation techniques necessary for creating intuitive interfaces that facilitate good user experiences. You will also have demonstrated this fluency through an in-depth Capstone Project that can be shown to prospective employers in the fast-growing field of UI design.

Concepts and techniques covered include structured approaches for helping you understand your user base and their needs (e.g. contextual inquiry and design psychology), widely-employed prototyping and design methods (e.g. low-fidelity and paper prototyping), and robust techniques for helping you evaluate your design choices (e.g. heuristic evaluation and user studies). By the end of the Specialization, you will be comfortable applying these concepts and techniques to design an interface for a wide variety of users from around the world.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","In this course, you will gain an understanding of the critical importance of user interface design. You will also learn industry-standard methods for how to approach the design of a user interface and key theories and frameworks that underlie the design of most interfaces you use today.

Through a series of case studies on commercial systems - many of which you likely use on a regular basis - we will illustrate the benefits of good design. We will also demonstrate how the costs of bad design can often be severe (in user experience, money, and even human lives).

You will then gain a high-level understanding of the user-interface design process. You will be introduced to common design scenarios - e.g. improving on existing designs and starting a new design from scratch - and the general design processes that tend to be used for each scenario.

Finally, we will begin introducing the large body of existing knowledge on design by providing overviews of core user interface design theories and concepts. This key foundational information will help you avoid “reinventing the wheel” when you are designing your interfaces in this specialization.%In this course you will learn and practice techniques of user research and early UI design exploration.  First, you will learn and practice several techniques for user research, including in-person research and survey and log-analysis techniques.  Then, you will learn to analyze and deliver user research in forms that support UI design, including personas, use cases, tasks, and scenarios.  Finally, you will learn and practice ideation techniques that start from user research and broadly generate potential design ideas.%In this course you will learn how to design and prototype user interfaces to address the users and tasks identified in user research.  Through a series of lectures and exercises, you will learn and practice paper- and other low-fidelity prototyping techniques; you will learn and apply principles from graphic design, including design patterns; you will learn to write a design rationale; and you will learn how to design for specific populations and situations, including principles and practices of accessible design.%In this course you will learn and practice several techniques for user interface evaluation.  First we start with techniques that can be applied alone or in a design team, including action analysis, walkthroughs, and heuristic evaluation.  Then we move on to user testing, including learning from a series of usability tests carried out in a real usability lab, and techniques to carry out your own tests even without a lab.  Finally, we wrap up the discussion of evaluation--and of UI Design in the specialization as a whole--by looking at the question of how to set and measure usability goals, and in turn, when a design is usable enough to release it.%This Capstone Course for the UI Design Specialization is a group design project in which you will combine and demonstrate the user research, design/prototyping, and evaluation skills you've learned by designing the solution to one of a set of selected projects."
"14","software_development","Data Engineering on Google Cloud Platform Specialization","About This SpecializationThis five-course accelerated specialization is designed for data professionals who are responsible for designing, building, analyzing, and optimizing big data solutions. Through a combination of video lectures, quizzes, and hands-on labs, you'll learn how to carry out serverless data analysis and productionize machine learning models. This specialization is designed to give participants a robust hands-on experience and is primarily lab-focused.

Learn how to deliver business value with Big Data and Machine Learning Solutions on Google Cloud Platform. To get up to speed quickly, follow the courses in this specialization.

This specialization is unique in that you'll actually get to work within the Google Cloud Platform production environment, develop external applications, and achieve an end-of-specialization certificate.

Note for Google Cloud customers and partners: This specialization is the on-demand equivalent to the CPB100 and CPB210 instructor-led training classes. CPB100 is listed as Google Cloud Platform Big Data and Machine Learning Fundamentals and Data Engineering on Google Cloud Platform has been divided into four courses: 1) Leveraging Unstructured Data on Dataproc on Google Cloud Platform, 2) Serverless Data Analysis with Google BigQuery and Cloud Dataflow, 3) Serverless Machine Learning with Tensorflow on Google Cloud Platform, and 4) Building Resilient Streaming Systems on Google Cloud Platform.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.Projects OverviewThis specialization incorporates hands-on labs. You will need a Google account (a Gmail account will work just fine) and will be required to sign up for a Google Cloud Platform free trial account. Your free trial is limited to 12 months or $300 worth in credits, whichever is reached first. For this reason, our specialization is designed to be completed within four weeks.These hands on components will let you apply the skills you learn in the video lectures. Projects will incorporate topics such as Google BigQuery, which are used and configured within the Codelabs. You can expect to gain practical hands-on experience with the concepts explained throughout the modules.","This 1-week accelerated on-demand course introduces participants to the Big Data and Machine Learning capabilities of Google Cloud Platform (GCP). It provides a quick overview of the Google Cloud Platform and a deeper dive of the data processing capabilities.

At the end of this course, participants will be able to:
• Identify the purpose and value of the key Big Data and Machine Learning products in the Google Cloud Platform
• Use CloudSQL and Cloud Dataproc to migrate existing MySQL and Hadoop/Pig/Spark/Hive workloads to Google Cloud Platform
• Employ BigQuery and Cloud Datalab to carry out interactive data analysis
• Choose between Cloud SQL, BigTable and Datastore
• Train and use a neural network using TensorFlow
• Choose between different data processing products on the Google Cloud Platform

Before enrolling in this course, participants should have roughly one (1) year of experience with one or more of the following:
• A common query language such as SQL
• Extract, transform, load activities
• Data modeling
• Machine learning and/or statistics
• Programming in Python

Google Account Notes:
• You'll need a Google/Gmail account and a credit card or bank account to sign up for the Google Cloud Platform free trial (Google is currently blocked in China).
• There is a known issue with certain EU countries where individuals are not able to sign up, but you may sign up as ""business"" status and intend to see a potential economic benefit from the trial. More details at: https://support.google.com/cloud/answer/6090602
• More Google Cloud Platform free trial FAQs are available at: https://cloud.google.com/free-trial/%This 1-week, accelerated course builds upon previous courses in the Data Engineering on Google Cloud Platform specialization. Through a combination of video lectures, demonstrations, and hands-on labs, you'll learn how to create and manage computing clusters to run Hadoop, Spark, Pig and/or Hive jobs on Google Cloud Platform.  You will also learn how to access various cloud storage options from their compute clusters and integrate Google’s machine learning capabilities into their analytics programs.  

In the hands-on labs, you will create and manage Dataproc Clusters using the Web Console and the CLI, and use cluster to run Spark and Pig jobs. You will then create iPython notebooks that integrate with BigQuery and storage and utilize Spark. Finally, you integrate the machine learning APIs into your data analysis.

Pre-requisites
• Google Cloud Platform Big Data & Machine Learning Fundamentals (or equivalent experience)
• Some knowledge of Python%This 1-week, accelerated on-demand course builds upon Google Cloud Platform Big Data and Machine Learning Fundamentals. Through a combination of instructor-led presentations, demonstrations, and hands-on labs, students learn how to carry out no-ops data warehousing, analysis and pipeline processing.

Prerequisites:
• Google Cloud Platform Big Data and Machine Learning Fundamentals
• Experience using a SQL-like query language to analyze data
• Knowledge of either Python or Java

Notes:
• You'll need a Google/Gmail account and a credit card or bank account to sign up for the Google Cloud Platform free trial (Google is currently blocked in China).
• There is a known issue with certain EU countries where individuals are not able to sign up, but you may sign up as ""business"" status and intend to see a potential economic benefit from the trial. More details at: https://support.google.com/cloud/answer/6090602
• More Google Cloud Platform free trial FAQs are available at: https://cloud.google.com/free-trial/%This one-week accelerated on-demand course provides participants a a hands-on introduction to designing and building machine learning models on Google Cloud Platform. Through a combination of presentations, demos, and hand-on labs, participants will learn machine learning (ML) and TensorFlow concepts, and develop hands-on skills in developing, evaluating, and productionizing ML models.

OBJECTIVES

This course teaches participants the following skills:

  ● Identify use cases for machine learning

  ● Build an ML model using TensorFlow

  ● Build scalable, deployable ML models using Cloud ML

  ● Know the importance of preprocessing and combining features

  ● Incorporate advanced ML concepts into their models

  ● Productionize trained ML models


PREREQUISITES

To get the most of out of this course, participants should have:

  ● Completed Google Cloud Fundamentals- Big Data and Machine Learning course OR have equivalent experience

  ● Basic proficiency with common query language such as SQL

  ● Experience with data modeling, extract, transform, load activities

  ● Developing applications using a common programming language such Python

  ● Familiarity with Machine Learning and/or statistics

Notes:
• You'll need a Google/Gmail account and a credit card or bank account to sign up for the Google Cloud Platform free trial (Google is currently blocked in China).
• There is a known issue with certain EU countries where individuals are not able to sign up, but you may sign up as ""business"" status and intend to see a potential economic benefit from the trial. More details at: https://support.google.com/cloud/answer/6090602
• More Google Cloud Platform free trial FAQs are available at: https://cloud.google.com/free-trial/%This 1-week, accelerated on-demand course builds upon Google Cloud Platform Big Data and Machine Learning Fundamentals. Through a combination of video lectures, demonstrations, and hands-on labs, you'll learn how to build streaming data pipelines using Google Cloud Pub/Sub and Dataflow to enable real-time decision making. You will also learn how to build dashboards to render tailored output for various stakeholder audience.

Prerequisites:
• Google Cloud Platform Big Data and Machine Learning Fundamentals (or equivalent experience)
• Some knowledge of Java

Objectives:
• Understand use-cases for real-time streaming analytics
• Use Google Cloud PubSub asynchronous messaging service to manage data events
• Write streaming pipelines and run transformations where necessary
• Get familiar with both sides of a streaming pipeline: production and consumption
• Interoperate Dataflow, BigQuery and Cloud Pub/Sub for real-time streaming and analysis"
"15","software_development","Internet of Things Specialization","About This SpecializationThis Specialization covers the development of Internet of Things (IoT) products and services—including devices for sensing, actuation, processing, and communication—to help you develop skills and experiences you can employ in designing novel systems. The Specialization has theory and lab sections. In the lab sections you will learn hands-on IoT concepts such as sensing, actuation and communication. In the final Capstone Project, developed in partnership with Qualcomm, you’ll apply the skills you learned on a project of your choice using the DragonBoard 410c platform.Created by:Industry Partners:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","It is hard to imagine life without your Smartphone – you have come to rely on it so much – for your work; to stay in touch with family and friends; to capture and share those special moments; to find your way around in a new neighborhood. Did you ever wonder how and when all this happened? Or how and when GPS sensors came to be in your cell phone?

In this course, we will explore the convergence of multiple disciplines leading to todays’ Smartphones.  You will learn about the birth and evolution of Telephony Networks, Broadcast Networks (TV and Radio) and Consumer Electronics.  We will discuss the impact of Internet, (multimedia) content, smartphones and apps on everyday lives. We will then look at how this emerging platform called the Internet of Things – wherein billions and trillions of devices communicating with each other and “the cloud” – could enable unprecedented, innovative products and services.   Take this course if you want to understand what great new advances in mobile-enabled products will be coming our way!

Learning Goals: This course provides a core grounding in how science and technology have developed to enable the Internet of Things – in a way appropriate for any learner.  For those interested in developing further hands-on expertise in designing and developing for the Internet of Things, this course will provide a context to the discoveries and converging technologies that will springboard the next round of innovations.  After completing this course, you will be able to:

1.	Compare how the telephone system works (that is, peer-to-peer networks) with how media delivery works (that is, broadcast/multicast networks).
2.	Explain the tradeoffs between circuit switched networks (that is, dedicated resources) and packet switched networks (that is, shared resources).
3.	Tell interesting stories about key innovations that transformed the communications, entertainment and consumer electronics industries.
4.	Explain how email, YouTube, SMS, etc. work.
5.	Find resources for those wishing to do more of a “deep-dive” into the above topics.%Do you want to develop skills to prototype mobile-enabled products using state-of-the-art technologies? In this course you will build a hardware and software development environment to guide your journey through the Internet of Things specialization courses. We will use the DragonBoard™ 410c single board computer (SBC). 

This is the first in a series of courses where you will learn both the theory and get the hands-on development practice needed to prototype Internet of Things products.  This course is suitable for a broad range of learners. 
 
This course is for you if:
•  You want to develop hands-on experience with mobile technologies and the Internet
•  You want to pivot your career towards the design and development of Internet of Things enabled products
•  You are an entrepreneur, innovator or member of a DIY community 

Learning Goals: 
After completing this course, you will be able to:
1.  Configure at least one integrated development environment (IDE) for developing software.
2.  Make use of git, adb and fastboot to flash multiple OS and repair bricked boards.
3.  Install Android 5.1 (Lollipop) and Linux based on Ubuntu.
4.  Create, compile and run a Hello World program.
5.  Describe the DragonBoard™ 410c peripherals, I/O expansion capabilities, Compute (CPU and Graphics) capabilities, and Connectivity capabilities.%Have you wondered how information from physical devices in the real world gets communicated to Smartphone processors?  Do you want to make informed design decisions about sampling frequencies and bit-width requirements for various kinds of sensors? Do you want to gain expertise to affect the real world with actuators such as stepper motors, LEDs and generate notifications?

In this course, you will learn to interface common sensors and actuators to the DragonBoard™ 410c hardware. You will then develop software to acquire sensory data, process the data and actuate stepper motors, LEDs, etc. for use in mobile-enabled products. Along the way, you’ll learn to apply both analog-to-digital and digital-to-analog conversion concepts. 

Learning Goals: After completing this course, you will be able to:

1.	Estimate sampling frequency and bit-width required for different sensors.
2.	Program GPIOs (general purpose input/output pins) to enable communication between the DragonBoard 410c and common sensors.
3.	Write data acquisition code for sensors such as passive and active infrared (IR) sensors, microphones, cameras, GPS, accelerometers, ultrasonic sensors, etc.
4.	Write applications that process sensor data and take specific actions, such as stepper motors, LED matrices for digital signage and gaming, etc.%Have you wondered how “Things” talk to each other and the cloud? Do you understand the alternatives for conveying latency-sensitive real time data versus reliable signaling data? Building on the skills from the Sensing and Actuation course, we will explore protocols to exchange information between processors. 

In this course, you will learn how VoIP systems like Skype work and implement your own app for voice calls and text messages.  You will start by using the Session Initiation Protocol (SIP) for session management. Next, you will learn how voice codecs such as Adaptive Multi Rate (AMR) are used in 3G networks and use them for voice traffic in your app. 

Learning Goals: After completing this course, you will be able to:

1.	Implement session initiation, management and termination on your DragonBoard™ 410c using SIP.
2.	Discover other users and exchange device capabilities.
3.	Compare and contrast narrowband and wideband codecs and experience the voice quality differences between them.
4.	Implement and demonstrate VoIP calls using the DragonBoard 410c.%Content is an eminent example of the features that contributed to the success of wireless Internet. Mobile platforms such as the Snapdragon™ processor have special hardware and software capabilities to make acquisition, processing and rendering of multimedia content efficient and cost-effective. 

In this course, you will learn the principles of video and audio codecs used for media content in iTunes, Google Play, YouTube, Netflix, etc.  You will learn the file formats and codec settings for optimizing quality and media bandwidth and apply them in developing a basic media player application. 

Learning Goals: After completing this course, you will be able to:

1.	Explain the tradeoffs between media quality and bandwidth for content delivery. 
2.	Extract and display metadata from media files.
3.	Implement and demonstrate a simple media player application using DragonBoard™ 410c.%In the Capstone project for the Internet of Things specialization, you will design and build your own system that uses at least 2 sensors, at least 1 communication protocol and at least 1 actuator. You will have a chance to revisit and apply what you have learned in our courses to achieve a robust, practical and/or fun-filled project. 

We absolutely encourage you to design whatever you can think up!  This is your chance to be creative or to explore an idea that you have had.  But if you don’t have your own idea, we provide the description of a surveillance system, for you to build.  We will participate in the Capstone with you by building a surveillance system that features an off-grid solar powered workstation that will serve as a hub to multiple surveillance sensors. 

You will be able to demonstrate the knowledge and skills you have gained in this course through delivery of industry-appropriate documents such as System Design documents and Unit Test reports.  Additionally, you will be asked to describe and show case your project as a short video presentation – appropriate for demonstrating your knowledge and technical communication skills. 

Learning Goals: After completing this Capstone, you will be able to:

1.	Design systems using mobile platforms. You will gain experience in documenting and presenting designs.
2.	Develop systems that interface multiple sensors and actuators to the DragonBoard™ 410c system and develop the necessary software to create a fully functional system.
3.	Specify unit tests and system tests, run tests and prepare Test Reports as are commonly done by those working in this industry.
4.	Gain experience (and feedback!) in making technical presentations."
"16","software_development","Google Cloud Platform for Systems Operations Professionals Specialization","About This SpecializationThis four-course accelerated specialization introduces you to the implementation of application environments and public cloud infrastructure using Google Cloud Platform (GCP). Through a combination of video lectures, quizzes, and hands-on labs, you'll learn how to deploy cloud infrastructure components such as networks, systems, and applications. This specialization is designed to give participants a robust hands-on experience and is primarily lab-focused.

This specialization is intended for Systems Operations professionals and Cloud Architects using Google Cloud Platform to design, create, or migrate application environments and infrastructure.

This specialization is unique in that you'll actually get to work within the Google Cloud Platform production environment, develop external applications, and achieve an end-of-specialization certificate.

Note: This specialization is the online equivalent to the CP100A and CPO200 instructor-led training series. CP100A is listed as Google Cloud Platform Fundamentals and CPO200 has been divided into three courses: 1) Computing, Storage and Security with Google Cloud Platform, 2) Configuration Management on Google Cloud Platform, and 3) Designing Highly Scalable Web Apps on Google Cloud Platform.Created by:4 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.Projects OverviewThis specialization incorporates hands-on labs. You will need a Google account (a Gmail account will work just fine) and will be required to sign up for a Google Cloud Platform free trial account. Your free trial is limited to 12 months or $300 worth in credits, whichever is reached first. For this reason, our specialization is designed to be completed within four weeks.These hands on components will let you apply the skills you learn in the video lectures. Projects will incorporate topics such as Google Compute which are used within the Codelabs. You can expect to get hands-on experience with the concepts explained throughout the modules.",">> Learners interested in Google Cloud Platform: A brand-new Specialization with cloud-infrastructure content by Google Cloud is now available! The new Architecting with Google Cloud Platform Specialization has updated, improved content  that will help you if you are preparing for the Google Certified Professional - Cloud Architect exam. Head to https://www.coursera.org/specializations/gcp-architecture to explore the updated content.

The first course in the original Specialization, GCP Fundamentals, will remain as a standalone course offering a broad introduction to GCP. Head to https://www.coursera.org/learn/gcp-fundamentals/home/welcome if you would like to take this course.  

This course covers the fundamentals of Google Cloud Platform.  

This course introduces you to important concepts and terminology for working with Google Cloud Platform (GCP). You learn about, and compare, many of the computing and storage services available in Google Cloud Platform, including Google App Engine, Google Compute Engine, and Google Container Engine.

Notes:
• You'll need a Google/Gmail account and a credit card or bank account to sign up for the Google Cloud Platform free trial (Google is currently blocked in China).
• There is a known issue with certain EU countries where individuals are not able to sign up, but you may sign up as ""business"" status and intend to see a potential economic benefit from the trial. More details at: https://support.google.com/cloud/answer/6090602
• More Google Cloud Platform free trial FAQs are available at: https://cloud.google.com/free-trial/"
"17","software_development","Emerging Technologies: From Smartphones to IoT to Big Data Specialization","About This SpecializationThis Specialization covers the concepts of the most important information technologies that you have been using and will be using throughout your entire life! Topics covered include Smartphones, OS, Cloud Computing, Big Data, CDN, Wi-Fi, Bluetooth, Mobile Communication, LTE, LTE-Advanced, IoT, AR, IPv4, IPv6, TCP, UDP, and Internet operations. The Specialization concludes with a Capstone project that allows you to apply the skills you've learned throughout the courses.Created by:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","Smartphones are one of the most influential devices that we use in our everyday lives. Smartphones consist of the most advanced hardware and software technologies that exist in the world, all combined together into a miraculous single easy-to-use portable system.

These lectures focus on the specifications, hardware modules, and OS (Operating System) iOS & Android that enable smartphones to perform various features and functionalities. Since there are so many smartphone types, in the lectures, three smartphones were selected and compared. The lecture covers the specifications of the Samsung Galaxy S6 edge, LG G4, and the iPhone 6 plus, which are among the most popular recently released smartphones in the world!

With this new knowledge on Cellular Networks, Wi-Fi, Bluetooth, Platform, OS (Operating System), Chipsets, CPU (Central Processing Unit), GPU (Graphics Processing Unit), Display, Location & Navigation system, and new Wireless Charging systems, you will be able to analyze, design, and plan new smartphones for the future.%You have most likely heard about Clouds and Big Data before, and already know how significantly important they are and will be in the future.

Cloud Computing enables us to easily use software as well as processing platforms and computing infrastructure (that are not equipped on our computers and smartphones) from any location through Internet services. Big Data provides us with new intelligence from massive data sets, which can help in situation/condition/status analysis and decision making. In addition, CDN is the best technology to provide information/contents to Internet users in the quickest and most efficient way. Therefore, the information/software/database/contents from Clouds and Big Data centers can be very effectively supported by CDNs. This is why these lectures are combined together in this course.%Every information service is connected through the Internet. If your work is any bit related to information, there is no excuse, you have to know what the Internet is and how it works! The relation of information and the Internet is equivalent to the blood and blood vessels of our body, which we have been using and will be using every day of our lives.

This course will enlighten your understanding of what the Internet is and how it works. IP (Internet Protocol) IPv4 and IPv6 keep the Internet alive by enabling remote computers to communicate through various inter-connected networks through “inter-networking” technology, which is where the name “Internet” came from. TCP and UDP are used by the end devices (e.g., computers, smartphones, servers, clouds) that are communicating to connect applications/services across the Internet. The details of IPv4, IPv6, TCP, UDP, and Internet operations are covered in this course.%What is the Internet of Things? What is augmented reality? This course deals with the new emerging technologies of IoT (Internet of Things) and AR (Augmented Reality).

IoT is a new emerging technology domain which will be used to connect all objects through the Internet for remote sensing and control. IoT uses a combination of WSN (Wireless Sensor Network), M2M (Machine to Machine), robotics, wireless networking, Internet technologies, and Smart Devices.

AR is the most effective technology in providing real-time and real-world view information to users, where advancements in Smart Devices are expected to trigger various new AR services.

Currently, IoT and AR technologies already exist and available services can be found. However, there is so much more to come in IoT and AR technologies, which is why it is so important to understand what can be provided through these technologies and how these technologies work.%This course covers the services and specifications of the most popular wireless communication technologies used around the world. 

The most popular wireless communication technologies are mobile communication, WLAN (Wireless Local Area Network), and WPAN (Wireless Personal Area Network), which are all included in smartphones. Among WLAN types Wi-Fi is most popular, and among WPAN types Bluetooth is most popular. Therefore, the lectures in this course cover Wi-Fi and Bluetooth specifications.

In addition, the evolution of mobile communication technologies is explained starting from the 1st generation (1G) all the way to the most advanced 4th generation (4G) systems. In addition, further details on the state-of-the-art LTE (Long Term Evolution) and LTE-Advanced 4G mobile communication technologies are presented.%Upon completion of this series of courses, you will have the opportunity to take part in a capstone project."
"18","software_development","Full Stack Web and Multiplatform Mobile App Development Specialization","About This SpecializationLearn front-end and hybrid mobile development, with server-side support, for implementing a multi-platform solution.

The first two courses in this Specialization cover front-end frameworks: Bootstrap 4 and Angular. You’ll also learn to create hybrid mobile applications, using the Ionic framework, Cordova and NativeScript. On the server side, you’ll learn to implement NoSQL databases using MongoDB, work within a Node.js environment and Express framework, and communicate to the client side through a RESTful API. Learners enrolling in this Specialization are expected to have prior working knowledge of HTML, CSS and JavaScript.

Ideally learners should complete the courses in the specified sequence. It is strongly recommended that the Angular course be completed before proceeding with the Ionic and Cordova and/or the NativeScript course.Created by:5 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.Projects OverviewLearners will work on hands-on exercises, culminating in development of a full-fledged application at the end of each course. Each course also includes a mini-Capstone Project as part of the Honors Track where you’ll apply your skills to build a fully functional project.","This course will give you an overview of client-side web UI frameworks, in particular Bootstrap 4. You will learn about grids and responsive design, Bootstrap CSS and JavaScript components. You will learn about CSS preprocessors, Less and Sass. You will also learn the basics of Node.js and NPM and task runners like Grunt and Gulp.
At the end of this course, you will be able to a)Set up, design and style a web page using Bootstrap 4 and its components, b) Create a responsive web page design, and c) Make use of web tools to setup and manage web sites.
This course also includes an honors track that enables you to work on your own project developing a website using Bootstrap 4.
Students enrolling in this course should have prior good working knowledge of HTML, CSS and JavaScript.%This course concentrates mainly on Javascript based front-end frameworks, and in particular the Angular framework (Currently Ver. 4.x). This course will use Typescript for developing Angular application. Typescript features will be introduced in the context of Angular as part of the exercises. You will also get an introduction to the use of Angular Material and Angular Flex-Layout for responsive UI design. You will be introduced to various aspects of Angular including components, directives and services. You will learn about data binding, Angular router and its use for developing single-page applications. You will also learn about designing both template-driven forms and reactive forms. A quick introduction to Observables, reactive programming and RxJS in the context of Angular is included. You will then learn about Angular support for client-server communication and the use of REST API on the server side. You will use Restangular for communicating with a server supporting the REST API. A quick tour through Angular animation support and Angular testing rounds off the course. You must have either completed the previous course in the specialization on Bootstrap 4, or have a working knowledge of front end web-UI frameworks to be able to navigate this course. Also a good working knowledge of JavaScript, especially ES 5 is strongly recommended.

At the end of this course you will:

- Be familiar with client-side Javascript frameworks and the Angular framework
- Be able to implement single page applications in Angular
- Be able to use various Angular features including directives, components and services
- Be able to implement a functional front-end web application using Angular
- Be able to use Angular Material and Angular Flex-Layout for designing responsive Angular applications
- Be able to use Observables and RxJS in the context of Angular applications%This course focuses on developing multiplatform mobile applications using the Web technologies (HTML5, CSS and Javascript). In particular we make use of the Cordova hybrid application framework to develop and target multiple mobile platforms with a single codebase. We make use of the Ionic framework (Ionic Ver 3.x), one of the most popular mobile application frameworks, that is built with mobile-optimized HTML5 and CSS based components and Angular. You will learn about UI development with Ionic and then using Cordova's modules to access the native mobile platform's capabilities from Javascript. You should have already completed the Bootstrap 4 and the Angular courses in this specialization before proceeding with this course.

At the end of this course you will be able to (a) Build mobile applications targeting multiple platforms with a single codebase, (b) Leverage your HTML5, CSS, Javascript and Angular skills, and (c) Use various features of the Ionic framework to build hybrid mobile applications%This course focuses on developing truly cross-platform, native iOS and Android apps using NativeScript (Ver 3.x). The framework uses Angular, TypeScript or modern JavaScript to get truly native UI and performance while sharing skills and code with the web. You will learn about UI development with NativeScript UI and layout support and access the native mobile platform's capabilities from Javascript. You should have already completed the Bootstrap 4 and the Angular courses in this specialization before proceeding with this course.

At the end of this course you will be able to (a) Build mobile applications targeting multiple platforms with a single codebase, (b) Leverage your Angular, TypeScript and Javascript skills, and (c) Use various features of the Ionic framework to build truly cross-platform mobile applications"
"19","software_development","Cloud Computing Specialization","About This SpecializationThe Cloud Computing Specialization takes you on a tour through cloud computing systems. We start in in the middle layer with Cloud Computing Concepts covering core distributed systems concepts used inside clouds, move to the upper layer of Cloud Applications and finally to the lower layer of Cloud Networking. We conclude with a project that allows you to apply the skills you've learned throughout the courses.

The first four courses in this Specialization form the lecture component of courses in our online Master of Computer Science Degree in Data Science. You can apply to the degree program either before or after you begin the Specialization.Created by:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","Cloud computing systems today, whether open-source or used inside companies, are built using a common set of core techniques, algorithms, and design philosophies—all centered around distributed systems. Learn about such fundamental distributed computing ""concepts"" for cloud computing.

Some of these concepts include: Clouds, MapReduce, key-value stores, Classical precursors, Widely-used algorithms, Classical algorithms, Scalability, Trending areas, And more!

Understand how these techniques work inside today’s most widely-used cloud computing systems. Get your hands dirty using these concepts with provided homework exercises. In the programming assignment, implement some of these concepts in template assignments provided in C++ programming language.

You will also watch interviews with leading managers and researchers, from both industry and academia.%Cloud computing systems today, whether open-source or used inside companies, are built using a common set of core techniques, algorithms, and design philosophies—all centered around distributed systems. Learn about such fundamental distributed computing ""concepts"" for cloud computing.

Some of these concepts include: Clouds, MapReduce, key-value stores, Classical precursors, Widely-used algorithms, Classical algorithms, Scalability, Trending areas, And more!

Understand how these techniques work inside today’s most widely-used cloud computing systems. Get your hands dirty using these concepts with provided homework exercises. In the programming assignment, implement some of these concepts in template assignments provided in C++ programming language.

You will also watch interviews with leading managers and researchers, from both industry and academia.

This course builds on the material covered in the Cloud Computing Concepts, Part 1 course.%Welcome to the Cloud Computing Applications course, the first part of a two-course series designed to give you a comprehensive view on the world of Cloud Computing and Big Data! 

In this first course we cover a multitude of technologies that comprise the modern concept of cloud computing. Cloud computing is an information technology revolution that has just started to impact many enterprise computing systems in major ways, and it will change the face of computing in the years to come.

We start the first week by introducing some major concepts in cloud computing, the economics foundations of it and we introduce the concept of big data. We also cover the concept of software defined architectures, and how virtualization results in cloud infrastructure and how cloud service providers organize their offerings. In week two, we cover virtualization and containers with deeper focus, including lectures on Docker, JVM and Kubernates. We finish up week two by comparing the infrastructure as a service offering by the big three: Amazon, Google and Microsoft. 
Week three moves to higher level of cloud offering, including platform as a service, mobile backend as a service and even serverless architectures. We also talk about some of the cloud middleware technologies that are fundamental to cloud based applications such as RPC and REST, JSON and load balancing. Week three also covers metal as a service (MaaS), where physical machines are provisioned in a cloud environment. 
Week four introduces higher level cloud services with special focus on cloud storage services. We introduce Hive, HDFS and Ceph as pure Big Data Storage and file systems, and move on to cloud object storage systems, virtual hard drives and virtual archival storage options. As discussion on Dropbox cloud solution wraps up week 4 and the course.%Welcome to the Cloud Computing Applications course, the second part of a two-course series designed to give you a comprehensive view on the world of Cloud Computing and Big Data!

In this second course we continue Cloud Computing Applications by exploring how the Cloud opens up data analytics of huge volumes of data that are static or streamed at high velocity and represent an enormous variety of information. Cloud applications and data analytics represent a disruptive change in the ways that society is informed by, and uses information. We start the first week by introducing some major systems for data analysis including Spark and the major frameworks and distributions of analytics applications including Hortonworks, Cloudera, and MapR. By the middle of week one we introduce the HDFS distributed and robust file system that is used in many applications like Hadoop and finish week one by exploring the powerful MapReduce programming model and how distributed operating systems like YARN and Mesos support a flexible and scalable environment for Big Data analytics. In week two, our course introduces large scale data storage and the difficulties and problems of consensus in enormous stores that use quantities of processors, memories and disks. We discuss eventual consistency, ACID, and BASE and the consensus algorithms used in data centers including Paxos and Zookeeper. Our course presents Distributed Key-Value Stores and in memory databases like Redis used in data centers for performance. Next we present NOSQL Databases. We visit HBase, the scalable, low latency database that supports database operations in applications that use Hadoop. Then again we show how Spark SQL can program SQL queries on huge data. We finish up week two with a presentation on Distributed Publish/Subscribe systems using Kafka, a distributed log messaging system that is finding wide use in connecting Big Data and streaming applications together to form complex systems. Week three moves to fast data real-time streaming and introduces Storm technology that is used widely in industries such as Yahoo. We continue with Spark Streaming, Lambda and Kappa architectures, and a presentation of the Streaming Ecosystem. Week four focuses on Graph Processing, Machine Learning, and Deep Learning. We introduce the ideas of graph processing and present Pregel, Giraph, and Spark GraphX. Then we move to machine learning with examples from Mahout and Spark. Kmeans, Naive Bayes, and fpm are given as examples. Spark ML and Mllib continue the theme of programmability and application construction. The last topic we cover in week four introduces Deep Learning technologies including Theano, Tensor Flow, CNTK, MXnet, and Caffe on Spark.%In the cloud networking course, we will see what the network needs to do to enable cloud computing. We will explore current practice by talking to leading industry experts, as well as looking into interesting new research that might shape the cloud network’s future.

This course will allow us to explore in-depth the challenges for cloud networking—how do we build a network infrastructure that provides the agility to deploy virtual networks on a shared infrastructure, that enables both efficient transfer of big data and low latency communication, and that enables applications to be federated across countries and continents? Examining how these objectives are met will set the stage for the rest of the course.

This course places an emphasis on both operations and design rationale—i.e., how things work and why they were designed this way. We're excited to start the course with you and take a look inside what has become the critical communications infrastructure for many applications today.%Note: You should complete all the other courses in this Specialization before beginning this course.

This six-week long Project course of the Cloud Computing Specialization will allow you to apply the learned theories and techniques for cloud computing from the previous courses in the Specialization, including Cloud Computing Concepts, Part 1, Cloud Computing Concepts, Part 2, Cloud Computing Applications, Part 1, Cloud Computing Concepts, Part 2, and Cloud Networking."
"20","software_development","Data Mining  Specialization","About This SpecializationThe Data Mining Specialization teaches data mining techniques for both structured data which conform to a clearly defined schema, and unstructured data which exist in the form of natural language text. Specific course topics include pattern discovery, clustering, text retrieval, text mining and analytics, and data visualization. The Capstone project task is to solve real-world data mining challenges using a restaurant review data set from Yelp.

Courses 2 - 5 of this Specialization form the lecture component of courses in the online Master of Computer Science Degree in Data Science. You can apply to the degree program either before or after you begin the Specialization.Created by:6 coursesFollow the suggested order or choose your own.ProjectsDesigned to help you practice and apply the skills you learn.CertificatesHighlight your new skills on your resume or LinkedIn.","Learn the general concepts of data mining along with basic methodologies and applications. Then dive into one subfield in data mining: pattern discovery. Learn in-depth concepts, methods, and applications of pattern discovery in data mining. We will also introduce methods for pattern-based classification and some interesting applications of pattern discovery. This course provides you the opportunity to learn skills and content to practice and engage in scalable pattern discovery methods on massive transactional data, discuss pattern evaluation measures, and study methods for mining diverse kinds of patterns, sequential patterns, and sub-graph patterns.%Recent years have seen a dramatic growth of natural language text data, including web pages, news articles, scientific literature, emails, enterprise documents, and social media such as blog articles, forum posts, product reviews, and tweets. Text data are unique in that they are usually generated directly by humans rather than a computer system or sensors, and are thus especially valuable for discovering knowledge about people’s opinions and preferences, in addition to many other kinds of knowledge that we encode in text. 

This course will cover search engine technologies, which play an important role in any data mining applications involving text data for two reasons. First, while the raw data may be large for any particular problem, it is often a relatively small subset of the data that are relevant, and a search engine is an essential tool for quickly discovering a small subset of relevant text data in a large text collection. Second, search engines are needed to help analysts interpret any patterns discovered in the data by allowing them to examine the relevant original text data to make sense of any discovered pattern. You will learn the basic concepts, principles, and the major techniques in text retrieval, which is the underlying science of search engines.%This course will cover the major techniques for mining and analyzing text data to discover interesting patterns, extract useful knowledge, and support decision making, with an emphasis on statistical approaches that can be generally applied to arbitrary text data in any natural language with no or minimum human effort. 

Detailed analysis of text data requires understanding of natural language text, which is known to be a difficult task for computers. However, a number of statistical approaches have been shown to work well for the ""shallow"" but robust analysis of text data for pattern finding and knowledge discovery. You will learn the basic concepts, principles, and major algorithms in text mining and their potential applications.%Learn the general concepts of data mining along with basic methodologies and applications. Then dive into one subfield in data mining: pattern discovery. Learn in-depth concepts, methods, and applications of pattern discovery in data mining. We will also introduce methods for data-driven phrase mining and some interesting applications of pattern discovery. This course provides you the opportunity to learn skills and content to practice and engage in scalable pattern discovery methods on massive transactional data, discuss pattern evaluation measures, and study methods for mining diverse kinds of patterns, sequential patterns, and sub-graph patterns.%Discover the basic concepts of cluster analysis, and then study a set of typical clustering methodologies, algorithms, and applications. This includes partitioning methods such as k-means, hierarchical methods such as BIRCH, and density-based methods such as DBSCAN/OPTICS. Moreover, learn methods for clustering validation and evaluation of clustering quality. Finally, see examples of cluster analysis in applications.%Note: You should complete all the other courses in this Specialization before beginning this course.

This six-week long Project course of the Data Mining Specialization will allow you to apply the learned algorithms and techniques for data mining from the previous courses in the Specialization, including Pattern Discovery, Clustering, Text Retrieval, Text Mining, and Visualization, to solve interesting real-world data mining challenges. Specifically, you will work on a restaurant review data set from Yelp and use all the knowledge and skills you’ve learned from the previous courses to mine this data set to discover interesting and useful knowledge. The design of the Project emphasizes: 1) simulating the workflow of a data miner in a real job setting; 2) integrating different mining techniques covered in multiple individual courses; 3) experimenting with different ways to solve a problem to deepen your understanding of techniques; and 4) allowing you to propose and explore your own ideas creatively. 

The goal of the Project is to analyze and mine a large Yelp review data set to discover useful knowledge to help people make decisions in dining. The project will include the following outputs: 

1. Opinion visualization: explore and visualize the review content to understand what people have said in those reviews.
2. Cuisine map construction: mine the data set to understand the landscape of different types of cuisines and their similarities.
3. Discovery of popular dishes for a cuisine: mine the data set to discover the common/popular dishes of a particular cuisine.
4. Recommendation of restaurants to help people decide where to dine: mine the data set to rank restaurants for a specific dish and predict the hygiene condition of a restaurant.

From the perspective of users, a cuisine map can help them understand what cuisines are there and see the big picture of all kinds of cuisines and their relations. Once they decide what cuisine to try, they would be interested in knowing what the popular dishes of that cuisine are and decide what dishes to have. Finally, they will need to choose a restaurant. Thus, recommending restaurants based on a particular dish would be useful. Moreover, predicting the hygiene condition of a restaurant would also be helpful. 

By working on these tasks, you will gain experience with a typical workflow in data mining that includes data preprocessing, data exploration, data analysis, improvement of analysis methods, and presentation of results. You will have an opportunity to combine multiple algorithms from different courses to complete a relatively complicated mining task and experiment with different ways to solve a problem to understand the best way to solve it. We will suggest specific approaches, but you are highly encouraged to explore your own ideas since open exploration is, by design, a goal of the Project. 

You are required to submit a brief report for each of the tasks for peer grading. A final consolidated report is also required, which will be peer-graded."
"21","software_development","Algorithms, Part I","About this course: This course covers the essential information that every serious programmer needs to know about algorithms and data structures, with emphasis on applications and scientific performance analysis of Java implementations. Part I covers elementary data structures, sorting, and searching algorithms. Part II focuses on graph- and string-processing algorithms.","Welcome to Algorithms, Part I. %We illustrate our basic approach to developing and analyzing algorithms by considering the dynamic connectivity problem. We introduce the union−find data type and consider several implementations (quick find, quick union, weighted quick union, and weighted qui... More%The basis of our approach for analyzing the performance of algorithms is the scientific method. We begin by performing computational experiments to measure the running times of our programs. We use these measurements to develop hypotheses about performance. Ne... More%We consider two fundamental data types for storing collections of objects: the stack and the queue. We implement each using either a singly-linked list or a resizing array. We introduce two advanced Java features—generics and iterators—that simplify client cod... More%We introduce the sorting problem and Java's Comparable interface. We study two elementary sorting methods (selection sort and insertion sort) and a variation of one of them (shellsort). We also consider two algorithms for uniformly shuffling an array. We concl... More%We study the mergesort algorithm and show that it guarantees to sort any array of n items with at most n lg n compares. We also consider a nonrecursive, bottom-up version. We prove that any compare-based sorting algorithm must make at least  n lg n compares in... More%We introduce and implement the randomized quicksort algorithm and analyze its performance. We also consider randomized quickselect, a quicksort variant which finds the kth smallest item in linear time. Finally, we consider 3-way quicksort, a variant of quickso... More%We introduce the priority queue data type and an efficient implementation using the binary heap data structure. This implementation also leads to an efficient sorting algorithm known as heapsort. We conclude with an applications of priority queues where we sim... More%We define an API for symbol tables (also known as associative arrays, maps, or dictionaries) and describe two elementary implementations using a sorted array (binary search) and an unordered list (sequential search). When the keys are Comparable, we define an ... More%In this lecture, our goal is to develop a symbol table with guaranteed logarithmic performance for search and insert (and many other operations). We begin with 2−3 trees, which are easy to analyze but hard to implement. Next, we consider red−black binary searc... More%We start with 1d and 2d range searching, where the goal is to find all points in a given 1d or 2d interval. To accomplish this, we consider kd-trees, a natural generalization of BSTs when the keys are points in the plane (or higher dimensions). We also conside... More%We begin by describing the desirable properties of hash function and how to implement them in Java, including a fundamental tenet known as the uniform hashing assumption that underlies the potential success of a hashing application. Then, we consider two strat... More%We consider various applications of symbol tables including sets, dictionary clients, indexing clients, and sparse vectors. "
"22","software_development","Programming for Everybody (Getting Started with Python)","About this course: This course aims to teach everyone the basics of programming computers using Python. We cover the basics of how one constructs a program from a series of simple instructions in Python.  The course has no pre-requisites and avoids all but the simplest mathematics. Anyone with moderate computer experience should be able to master the materials in this course. This course will cover Chapters 1-5 of the textbook “Python for Informatics”.   This course is equivalent to the first half of the 11-week ""Programming for Everybody (Python)"" course.  Once a student completes this course, they will be ready to take more advanced programming courses. This course covers Python 3.","These are the course-wide materials as well as the first part of Chapter One where we explore what it means to write programs.  We finish Chapter One and have the quiz and first assignment in the third week of the class. Throughout the course you may want to c... More%In this module you will set things up so you can write Python programs.  Not all activities in this module are required for this class so please read the ""Using Python in this Class"" material for details. %In the first chapter we try to cover the ""big picture"" of programming so you get a ""table of contents"" of the rest of the book.   Don't worry if not everything makes perfect sense the first time you hear it.   This chapter is quite broad and you would benefit ... More%In this chapter we cover how a program uses the computer's memory to store, retrieve and calculate information. %In this section we move from sequential code that simply runs one line of code after another to conditional code where some steps are skipped.  It is a very simple concept - but it is how computer software makes ""choices"". %This is a relatively short chapter.   We will learn about what functions are and how we can use them.   The programs in the first chapters of the book are not large enough to require us to develop functions, but as the book moves into more and more complex pro... More%Loops and iteration complete our four basic programming patterns.  Loops are the way we tell Python to do something over and over.   Loops are the way we build programs that stay with a problem until the problem is solved. "
"23","software_development","Introduction to Data Science in Python","About this course: This course will introduce the learner to the basics of the python programming environment, including how to download and install python, expected fundamental python programming techniques, and how to find help with python programming questions. The course will also introduce data manipulation and cleaning techniques using the popular python pandas data science library and introduce the abstraction of the DataFrame as the central data structure for data analysis. The course will end with a statistics primer, showing how various statistical measures can be applied to pandas DataFrames. By the end of the course, students will be able to take tabular data, clean it,  manipulate it, and run basic inferential statistical analyses.

This course should be taken before any of the other Applied Data Science with Python courses:  Applied Plotting, Charting & Data Representation in Python, Applied Machine Learning in Python, Applied Text Mining in Python, Applied Social Network Analysis in Python.","In this week you'll get an introduction to the field of data science, review common Python functionality and features which data scientists use, and be introduced to the Coursera Jupyter Notebook for the lectures. All of the course information on grading, prer... More%In this week of the course you'll learn the fundamentals of one of the most important toolkits Python has for data cleaning and processing -- pandas. You'll learn how to read in data into DataFrame structures, how to query these structures, and the details abo... More%In this week you'll deepen your understanding of the python pandas library by learning how to merge DataFrames, generate summary tables, group data into logical pieces, and manipulate dates. We'll also refresh your understanding of scales of data, and discuss ... More%In this week of the course you'll be introduced to a variety of statistical techniques such a distributions, sampling and t-tests. The majority of the week will be dedicated to your course project, where you'll engage in a real-world data cleaning activity and... More"
"24","software_development","Introduction to Programming with MATLAB","About this course: This course teaches computer programming to those with little to no previous experience. It uses the programming system and language called MATLAB to do so because it is easy to learn, versatile and very useful for engineers and other professionals. MATLAB is a special-purpose language that is an excellent choice for writing moderate-size programs that solve problems involving the manipulation of numbers. The design of the language makes it possible to write a powerful program in a few lines. The problems may be relatively complex, while the MATLAB programs that solve them are relatively simple: relative, that is, to the equivalent program written in a general-purpose language, such as C++ or Java. As a result, MATLAB is being used in a wide variety of domains from the natural sciences, through all disciplines of engineering, to finance, and beyond, and it is heavily used in industry. Hence, a solid background in MATLAB is an indispensable skill in today’s job market.

Nevertheless, this course is not a MATLAB tutorial. It is an introductory programming course that uses MATLAB to illustrate general concepts in computer science and programming. Students who successfully complete this course will become familiar with general concepts in computer science, gain an understanding of the general concepts of programming, and obtain a solid foundation in the use of MATLAB.

Students taking the course will get a MATLAB Online license free of charge for the duration of the course. The students are encouraged to consult the eBook that this course is based on. More information about these resources can be found on the Resources menu on the right."," %We will learn how to start MATLAB and will familiarize ourselves with its user interface. We will learn how to use MATLAB as a sophisticated calculator. We will learn about syntax and semantics. We will see ways in which MATLAB provides help. Finally, we will ... More%The basic unit with which we work in MATLAB is the matrix. We solve problems by manipulating matrices, and operators are the primary means by which we manipulate them. We will learn how to define matrices, extract parts of them and combine them to form new mat... More%Functions let us break up complex problems into smaller, more manageable parts. We will learn how functions let us create reusable software components that can be applied in many different programs. We will learn how the environment inside a function is separa... More%MATLAB has useful built-in functions and we will explore many of them in this section. We will learn about polymorphism and how MATLAB exploits it to change a function's behavior on the basis of the number and type of its inputs. Because random numbers play an... More%Selection is the means by which MATLAB makes decisions about the order in which it executes its statements. We will learn how to use the if-statement, which is the most important method of selection. We will learn how to use relational operators and logical op... More%Loops give computers their power. We will learn how to use both of MATLAB's loop constructs: the for-loop and the while-loop. We will learn how the break-statement works, and we will use nested loops. We will learn how to make loops more efficient. We will lea... More%Computers operate on bits, but humans think in terms of numbers, words, and other types of data. Like any good language, MATLAB organizes bits into convenient data types. We will study those types in this section. We will learn that there are ten types of numb... More%Files are named areas in permanent memory for storing data that can be used as input or output to MATLAB and to other programs. We will be introduced to MATLAB’s most important methods for reading and writing files. We will learn how to create, read from, and ... More"
"25","software_development","Learn to Program: The Fundamentals","About this course: Behind every mouse click and touch-screen tap, there is a computer program that makes things happen. This course introduces the fundamental building blocks of programming and teaches you how to write fun and useful programs using the Python language.","This module gives an overview of the course, the editor we will use to write programs, and an introduction to fundamental concepts in Python including variables, mathematical expressions, and functions. %This module introduces strings (a Python data type used to represent text), and a process to follow when creating a function. %This module introduces Booleans (logical values True and False), how to convert between types, how to use Boolean expressions in if statements to selectively run code, and the concept of a Python module. %This module introduces one way to repeat code (using a for loop), how to manipulate strings, and how to use a debugger to watch a program execute step by step. %This module introduces another way to repeat code (using a while loop), how to properly document your code to help other programmers understand it, Python's list data type, and the concept of mutation. %This module introduces how to use a for loop over the indexes of a list, how to nest lists, and how to read a write files. %This module introduces tuples (an immutable version of lists), and Python's dictionary type. "
"26","software_development","Build Your First Android App (Project-Centered Course)","About this course: What you’ll achieve:

In this project-centered course*, you’ll design, build, and distribute your own unique application for the Android mobile platform. We’ll provide you with a set of customizable building blocks that you can assemble to create many different types of apps, and that will help you become familiar with many important specificities of Android development. When you complete the project, in addition to having a personalized app that you can use and share, you’ll have the skills and background you need to move on to more advanced coursework in Android development. 

 What you’ll need to get started:

This project-centered course is designed for learners who have some prior experience programming in Java, such as an introductory college course or Coursera’s Java Programming Specialization (https://www.coursera.org/specializations/java-programming).

You will need a computer with a stable Internet connection, but you will not need an Android phone - we’ll use free software that you can use to emulate a phone on your computer. We'll use Android Studio as IDE; it is compatible with most computer and operating systems. You can find detailed system requirements here: https://developer.android.com/sdk/index.html#Requirements.

*About Project-Centered Courses: Project-centered courses are designed to help you complete a personally meaningful real-world project, with your instructor and a community of learners with similar goals providing guidance and suggestions along the way. By actively applying new concepts as you learn, you’ll master the course content more efficiently; you’ll also get a head start on using the skills you gain to make positive changes in your life and career. When you complete the course, you’ll have a finished project that you’ll be proud to use and share. 

Time: 10 hours of study, 10 hours of active project work","This module presents our pedagogic approach and demonstrates the kind of applications you will be able to build at the end of the course. %In this module you will design your personalized app from a user's perspective. We will show you elements you can combine in your design, and how to  document it to get feedback from prospective users or to organize your thoughts. If you get stuck on the quiz ... More%This module guides you in the development of an Android application using the Android Studio Integrated Development Environment (IDE). First it points you to the right place to install the Android Studio IDE and the Android Software Development Kit (SDK). Next... More%In this module you associate for the first time a graphical user interface with an activity controlling it, resulting in a first interactive application. We will re-use this same schema next week when developing the 9 apps presented in week 2 (and so will your... More%This module spans 2 weeks. This week, we walk you step by step in the development of 5 of the basic building blocks. %In this second part of the module, we develop the remaining 4 basic building blocks. All you have to do after that is to combine them to transform your idea of application into executable code! "
"27","software_development","Python Data Structures","About this course: This course will introduce the core data structures of the Python programming language. We will move past the basics of procedural programming and explore how we can use the Python built-in data structures such as lists, dictionaries, and tuples to perform increasingly complex data analysis. This course will cover Chapters 6-10 of the textbook “Python for Informatics”.  This course is equivalent to the second half of the 11-week ""Programming for Everybody (Python)"" course. This course covers Python 3.","In this class, we pick up where we left off in the previous class, starting in Chapter 6 of the textbook and covering Strings and moving into data structures.   The second week of this class is dedicated to getting Python installed if you want to actually run ... More%In this module you will set things up so you can write Python programs.  We do not require installation of Python for this class.  You can write and test Python programs in the browser using the ""Python Code Playground"" in this lesson.  Please read the ""Using ... More%Up to now, we have been working with data that is read from the user or data in constants.   But real programs process much larger amounts of data by reading and writing files on the secondary storage on your computer.   In this chapter we start to write our f... More%As we want to solve more complex problems in Python, we need more powerful variables.  Up to now we have been using simple variables to store numbers or strings where we have a single value in a variable.  Starting with lists we will store many values in a sin... More%The Python dictionary is one of its most powerful data structures.  Instead of representing values in a linear list, dictionaries store data as key / value pairs.  Using key / value pairs gives us a simple in-memory ""database"" in a single Python variable. %Tuples are our third and final basic Python data structure.  Tuples are a simple version of lists.  We often use tuples in conjunction with dictionaries to accomplish multi-step tasks like sorting or looping through all of the data in a dictionary. %To celebrate your making it to the halfway point in our Python for Everybody Specialization, we welcome you to attend our online graduation ceremony.  It is not very long, and it features a Commencement speaker and very short commencement speech. "
"28","software_development","Introduction to Logic","About this course: This course is an introduction to Logic from a computational perspective. It shows how to encode information in the form of logical sentences; it shows how to reason with information in this form; and it provides an overview of logic technology and its applications - in mathematics, science, engineering, business, law, and so forth."," % % % % % % %The description goes here % % %The description goes here %The description goes here % "
"29","software_development","Functional Programming Principles in Scala","About this course: Functional programming is becoming increasingly widespread in industry. This trend is driven by the adoption of Scala as the main programming language for many applications. Scala fuses functional and object-oriented programming in a practical package. It interoperates seamlessly with both Java and Javascript. Scala is the implementation language of many important frameworks, including Apache Spark, Kafka, and Akka. It provides the core infrastructure for sites such as Twitter, Tumblr and also Coursera.

In this course you will discover the elements of the functional programming style and learn how to apply them usefully in your daily programming tasks. You will also develop a solid foundation for reasoning about functional programs, by touching upon proofs of invariants and the tracing of execution symbolically.

The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series programming projects as homework assignments.

Learning Outcomes. By the end of this course you will be able to:

 - understand the principles of functional programming,
 - write purely functional programs, using recursion,
   pattern matching, and higher-order functions,
 - combine functional programming with objects and classes,
 - design immutable data structures,
 - reason about properties of functions,
 - understand generic types for functional programs

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line.","Get up and running with Scala on your computer. Complete an example assignment to familiarize yourself with our unique way of submitting assignments. In this week, we'll learn the difference between functional imperative programming. We step through the basics... More%This week, we'll learn about functions as first-class values, and higher order functions. We'll also learn about Scala's syntax and how it's formally defined. Finally, we'll learn about methods, classes, and data abstraction through the design of a data struct... More%This week, we'll cover traits, and we'll learn how to organize classes into hierarchies. We'll cover the hierarchy of standard Scala types, and see how to organize classes and traits into packages. Finally, we'll touch upon the different sorts of polymorphism ... More%This week we'll learn about the relationship between functions and objects in Scala; functions *are* objects! We'll zoom in on Scala's type system, covering subtyping and generics, and moving on to more advanced aspects of Scala's type system like variance. Fi... More%This week we dive into Lists, the most commonly-used data structure in Scala. %After a deep-dive into Lists, this week we'll explore other data structures; vectors, maps, ranges, arrays, and more. We'll dive into Scala's powerful and flexible for-comprehensions for querying data. "
"30","software_development","Python Programming: A Concise Introduction","About this course: The goal of the course is to introduce students to Python Version 3.x programming using hands on instruction. It will show how to install Python and use the Spyder IDE (Integrated Development Environment) for writing and debugging programs. The approach will be to present an example followed by a small exercise where the learner tries something similar to solidify a concept.  At the end of each module there will be an exercise where the student is required to write simple programs and submit them for grading.  It is intended for students with little or no programming background, although students with such a background should be able to move forward at their preferred pace.

The course is four modules long and is designed to be completed in four weeks.","In this module we introduce writing functions in Python using the convenient Spyder development environment.  The lesson begins with instructions on installing the popular Anaconda distribution of Python, which includes Spyder. It continues by showing how to u... More%Lists, datatypes, libraries, the random library. %So far, we have one collection data type, the list. In this module we take up two more: the tuple and the data dictionary.  After that we introduce reading and writing text files and give some illustrative examples. Finally, we take up reading and writing Comm... More%In this lesson, we  take up a variety of topics and give an example using much of what we've covered in the course. First, we show how functions can return values. Then we show how to build lists of various types and how to sort these lists. After that we use ... More"
"31","software_development","Using Python to Access Web Data","About this course: This course will show how one can treat the Internet as a source of data.  We will scrape, parse, and read web data as well as access data using web APIs.  We will work with HTML, XML, and JSON data formats in Python.  This course will cover Chapters 11-13 of the textbook “Python for Informatics”. To succeed in this course, you should be familiar with the material covered in Chapters 1-10 of the textbook and the first two courses in this specialization.  These topics include variables and expressions, conditional execution (loops, branching, and try/except), functions, Python data structures (strings, lists, dictionaries, and tuples), and manipulating files.  This course covers Python 3.","In this section you will install Python and a text editor.  In previous classes in the specialization this was an optional assignment, but in this class it is the first requirement to get started.  From this point forward we will stop using the browser-based P... More%Regular expressions are a very specialized language that allow us to succinctly search strings and extract data from strings.   Regular expressions are a language unto themselves.  It is not essential to know how to use regular expressions, but they can be qui... More%In this section we learn about the protocols that web browsers use to retrieve documents and web applications use to interact with Application Program Interfaces (APIs). %In this section we learn to use Python to retrieve data from web sites and APIs over the Internet. %In this section, we learn how to retrieve and parse XML (eXtensible Markup Language) data. %In this module, we work with Application Program Interfaces / Web Services using the JavaScript Object Notation (JSON) data format. "
"32","software_development","Google Cloud Platform Fundamentals: Core Infrastructure","About this course: <<< ATTENTION >>> Learners interested in Google Cloud Platform: A brand-new Specialization with cloud-infrastructure content by Google Cloud is now available! The new Architecting with Google Cloud Platform Specialization has updated, improved content  that will help you if you are preparing for the Google Certified Professional - Cloud Architect exam. Head to https://www.coursera.org/specializations/gcp-architecture to explore the updated content.

The first course in the original Specialization, GCP Fundamentals, will remain as a standalone course offering a broad introduction to GCP. Head to https://www.coursera.org/learn/gcp-fundamentals/home/welcome if you would like to take this course.  

This course covers the fundamentals of Google Cloud Platform.  

This course introduces you to important concepts and terminology for working with Google Cloud Platform (GCP). You learn about, and compare, many of the computing and storage services available in Google Cloud Platform, including Google App Engine, Google Compute Engine, and Google Container Engine.

Notes:
• You'll need a Google/Gmail account and a credit card or bank account to sign up for the Google Cloud Platform free trial (Google is currently blocked in China).
• There is a known issue with certain EU countries where individuals are not able to sign up, but you may sign up as ""business"" status and intend to see a potential economic benefit from the trial. More details at: https://support.google.com/cloud/answer/6090602
• More Google Cloud Platform free trial FAQs are available at: https://cloud.google.com/free-trial/"," % % % % % % % % % % % % % % % "
"33","software_development","An Introduction to Interactive Programming in Python (Part 1)","About this course: This two-part course is designed to help students with very little or no computing background learn the basics of building simple interactive applications. Our language of choice, Python, is an easy-to learn, high-level computer language that is used in many of the computational courses offered on Coursera. To make learning Python easy, we have developed a new browser-based programming environment that makes developing interactive applications in Python simple. These applications will involve windows whose contents are graphical and respond to buttons, the keyboard and the mouse.

In part 1 of this course, we will introduce the basic elements of programming (such as expressions, conditionals, and functions) and then use these elements to create simple interactive applications such as a digital stopwatch.  Part 1 of this class will culminate in building a version of the classic arcade game ""Pong"".","Understand the structure of this class, explore Python as a calculator %Learn the basic constructs of Python programming, create a program that plays a variant of Rock-Paper-Scissors %Learn the basics of event-driven programming, understand difference between local and global variables, create an interactive program that plays a simple guessing game %Create a canvas in Python, learn how to draw on the canvas, create a digital stopwatch %Learn the basics of lists in Python, model moving objects in Python, recreate the classic arcade game ""Pong"" "
"34","software_development","C++ For C Programmers, Part A","About this course: This course is for experienced C programmers who want to program in C++. The examples and exercises require a basic understanding of algorithms and object-oriented software.","How to convert an existing C program to C++. Use of type safe Input/Output. 
Avoiding the preprocessor. %Review of Dijkstra's shortest path algorithm. C++ Functions and Generics. C++ classes and OO. 
Point as an example. %Point: Default constructor and initializing syntax. Conversion Constructors. Copy Constructor. List and dynamic memory allocation. Deep Copy.  %Prim’s and Kruskal’s algorithms. Use of basic Container Classes. Tripod-Container, Iterator, Algorithm. %Practice and final. "
"35","software_development","Algorithmic Toolbox","About this course: The course covers basic algorithmic techniques and ideas for computational problems arising frequently in practical applications: sorting and searching, divide and conquer, greedy algorithms, dynamic programming. We will learn a lot of theory: how to sort data and how it helps for searching; how to break a large problem into pieces and solve them recursively; when it makes sense to proceed greedily; how dynamic programming is used in genomic studies. You will practice solving computational problems, designing new algorithms, and implementing solutions efficiently (so that they run in less than a second).","Welcome to the first module of Data Structures and Algorithms! Here we will provide an overview of where algorithms and data structures are used (hint: everywhere) and walk you through a few sample programming challenges. The programming challenges represent a... More%In this module you will learn that programs based on efficient algorithms can solve the same problem billions of times faster than programs based on naïve algorithms. You will learn how to estimate the running time and memory of an algorithm without even imple... More%In this module you will learn about seemingly naïve yet powerful class of algorithms called greedy algorithms. After you will learn the key idea behind the greedy algorithms, you may feel that they represent the algorithmic Swiss army knife that can be applied... More%In this module you will learn about a powerful algorithmic technique called Divide and Conquer. Based on this technique, you will see how to search huge databases millions of times faster than using naïve linear search. You will even learn that the standard wa... More%In this final module of the course you will learn about the powerful algorithmic technique for solving many optimization problems called Dynamic Programming. It turned out that dynamic programming can solve many problems that evade all attempts to solve them u... More"
"36","software_development","Algorithms, Part II","About this course: This course covers the essential information that every serious programmer needs to know about algorithms and data structures, with emphasis on applications and scientific performance analysis of Java implementations. Part I covers elementary data structures, sorting, and searching algorithms. Part II focuses on graph- and string-processing algorithms.",NA
"37","software_development","Using Databases with Python","About this course: This course will introduce students to the basics of the Structured Query Language (SQL) as well as basic database design for storing data as part of a multi-step data gathering, analysis, and processing effort.  The course will use SQLite3 as its database.  We will also build web crawlers and multi-step data gathering and visualization processes.  We will use the D3.js library to do basic data visualization.  This course will cover Chapters 14-15 of the book “Python for Informatics”. To succeed in this course, you should be familiar with the material covered in Chapters 1-13 of the textbook and the first three courses in this specialization. This course covers Python 3.","To start this class out we cover the basics of Object Oriented Python. We won't be writing our own objects, but since many of the things we use like BeautifulSoup, strings, dictionaries, database connections all use Object Oriented (OO) patterns we should at l... More%We learn the four core CRUD operations (Create, Read, Update, and Delete) to manage data stored in a database. %In this section we learn about how data is stored across multiple tables in a database and how rows are linked (i.e., we establish relationships) in the database. %In this section we explore how to model situations like students enrolling in courses where each course has many students and each student is enrolled in many courses. %In this section, we put it all together, retrieve and process some data and then use the Google Maps API to visualize our data. "
"38","software_development","Object Oriented Programming in Java","About this course: Welcome to our course on Object Oriented Programming in Java using data visualization. People come to this course with many different goals -- and we are really excited to work with all of you! Some of you want to be professional software developers, others want to improve your programming skills to implement that cool personal project that you’ve been thinking about, while others of you might not yet know why you’re here and are trying to figure out what this course is all about.

This is an intermediate Java course. We recommend this course to learners who have previous experience in software development or a background in computer science.  Our goal is that by the end of this course each and every one of you feels empowered to create a Java program that’s more advanced than any you have created in the past and that is personally interesting to you. In achieving this goal you will also learn the fundamentals of Object Oriented Programming, how to leverage the power of existing libraries, how to build graphical user interfaces, and how to use some core algorithms for searching and sorting data. And this course is project-based, so we’ll dive right into the project immediately!

We are excited to be offering a unique course structure, designed to support learners of different backgrounds in succeeding at their own pace. The first module explains how this will work and if this course is right for you. We also recommend taking a few minutes to explore the course site. A good place to start is the navigation bar on the left. Click Course Content to see what material we’ll cover each week, as well preview the assignments you’ll need to complete to pass the course. Click Discussions to see forums where you can discuss the course material with fellow students taking the class. Be sure to introduce yourself to everyone in the Meet and Greet forum.

This course should take about 6 weeks to complete. You can check out the recommended course schedule below to see a quick overview of the lessons and assignments you’ll complete each week.

We’re excited you’re here learning with us. Let’s get started!","Welcome to the first week of our course.  In this week, we'll get started by introducing ourselves and the Google engineers who will be making appearances throughout the course.  We'll also give you of the unique video series we provide and help you understand... More%We hope you’re excited about the project that we're starting to build -- we sure are!  In this second part of this week, we'll walk you through setting up your system and working through your first assignment so you'll be having fun with it in no time. Before ... More%Now that you have the tools to write and trace object oriented code, let’s get back to developing the project! In this first (real) part of the project, you will create an interactive graphical map that will display geospatial data. This is a highly interactiv... More%Now that you’re in full swing with the project, let’s take a closer look at some concepts that you have already been using in your code.  Specifically, the keyword “extends”.  What exactly does it mean that your program “extends PApplet”? To answer this questi... More%You’ve reached an exciting point in the project - in this week you’ll add interactivity to your map!  You’ll be learning how to design event-driven programs, using a new and powerful programming paradigm.  Your map will now respond to mouse hovers and clicks. ... More%You've come a long way in this course, and you've got a great project to show for it. In this last module we'll shift gears a bit to talk about some very exciting and fundamental algorithms for finding and sorting data in an array.  Searching and sorting algor... More"
"39","software_development","Code Yourself! An Introduction to Programming","About this course: Have you ever wished you knew how to program, but had no idea where to start from? This course will teach you how to program in Scratch, an easy to use visual programming language. More importantly, it will introduce you to the fundamental principles of computing and it will help you think like a software engineer.","In this unit you’ll create your very first computer program! You’ll be introduced to basic programming concepts and you’ll familiarise yourself with Scratch.  %In this unit you’ll keep working with control structures, you’ll find out how to use events in your programs and how to incorporate visual and sound effects in Scratch. You’ll also start thinking about the requirements and the design of your program. 
 %In this unit you’ll have a go at modifying and extending existing games to create new versions. You’ll also learn about software engineering practices for testing and documenting your programs.  %In this unit you’ll be introduced to procedures and cloning in Scratch, and you’ll apply these ideas to reuse your code.  %In this unit you’ll follow all the steps of software development to create a fun computer game. You’ll also learn about message broadcasting and concurrency.  "
"40","software_development","Biology Meets Programming: Bioinformatics for Beginners","About this course: Are you interested in learning how to program (in Python) within a scientific setting?

This course will cover algorithms for solving various biological problems along with a handful of programming challenges helping you implement these algorithms in Python.  It offers a gently-paced introduction to our Bioinformatics Specialization (https://www.coursera.org/specializations/bioinformatics), preparing learners to take the first course in the Specialization, ""Finding Hidden Messages in DNA"" (https://www.coursera.org/learn/dna-analysis).

Each of the four weeks in the course will consist of two required components.  First, an interactive textbook provides Python programming challenges that arise from real biological problems.  If you haven't programmed in Python before, not to worry! We provide ""Just-in-Time"" exercises from the Codecademy Python track (https://www.codecademy.com/learn/python). And each page in our interactive textbook has its own discussion forum, where you can interact with other learners. Second, each week will culminate in a summary quiz.

Lecture videos are also provided that accompany the material, but these videos are optional.","Where in the Genome Does Replication Begin? (Part 1) %Where in the Genome Does Replication Begin? (Part 2) %Which DNA Patterns Play the Role of Molecular Clocks? (Part 1) %Which DNA Patterns Play the Role of Molecular Clocks? (Part 2) "
"41","software_development","用Python玩转数据 Data Processing Using Python","About this course: 本课程 (Please click https://www.coursera.org/learn/python-data-processing for English version) 主要面向非计算机专业学生，从Python基本语法开始，到Python中如何从本地和网络上进行数据获取，如何表示数据，再到如何对数据进行基础和高级的统计分析及可视化，到最后如何设计一个简单的GUI界面来表示和处理数据，层层推进。
整个课程以Yahoo财经数据为基础，通过构建一个个喜闻乐见的案例，让大家可以以更直观的方式领略Python的简洁、优雅和健壮，同时探讨Python除了在商业领域之外在文学、社会学和新闻等人文社科类领域以及在数学和生物等理工类领域同样拥有便捷高效的数据处理能力，并可以触类旁通将其灵活应用于各专业中。
This course is mainly for non-computer majors. It starts with the basic syntax of Python, to how to acquire data in Python locally and from network, to how to present data, then to how to conduct basic and advanced statistic analysis and visualization of data, and finally to how to design a simple GUI to present and process data, advancing level by level. 
This course, as a whole, based on Yahoo Finance data and through establishment of popular cases one after another, enables learners to more vividly feel the simplicity, elegance and robustness of Python. Also, it discusses the fast, convenient and efficient data processing capacity of Python in humanities and social sciences fields like literature, sociology and journalism and science and engineering fields like mathematics and biology, in addition to business fields. Similarly, it may also be flexibly applied into other fields.","欢迎你学习《用Python玩转数据》( (Please click https://www.coursera.org/learn/python-data-processing for English version))这门课程，本课程用非计算机专业的小伙伴们能听得懂的方式来讲述如何利用Python这种简单易学的程序设计语言方便快捷地获取数据、表示数据、分析数据和展示数据，通过多个案例让大家轻松愉快地学会用Python玩转各领域数据。相信《用Python玩转数据》是一门可以让你不再害怕数据处理的计算机程序设计课，大壮... More%小伙伴们，欢迎来到Module 01""Python基础""的学习！ 先带大家领略一下Python简单易学和优雅健壮的特性，less is more，Python的设计者绝对深谙此道。本模块学完以后，大家可以掌握Python的基本语言结构、数据类型、基本运算、条件和循环、函数和模块等内容，用它们就可以写一些有用的程序了！Hi, boys and girls, welcome to learn Module 01 “Basics of Python”! I’ll first guide you to have a gli... More%欢迎进入“数据获取与表示”的学习！学完本模块，大家将会掌握Python在本地数据和网络数据获取的方式，会使用Python中基础但功能十分强大的数据结构序列、字符串、列表、元组快速有效地进行数据表示以及做简单的数据处理。Welcome to learn Module 02 “Data Acquisition and Presentation”! After learning this module, you can master the modes of acquiring local data and networ... More%欢迎来到”强大的数据结构和Python扩展库”！现在有没有觉得自己离可以用Python玩转数据又进了一步，学完本模块，大家将会掌握Python中高级的数据结构字典和集合，在某些应用中使用它们会非常方便，特别的，大家还会领略到Python最著名使用最广泛的科学计算包SciPy中ndarray、Series和DataFrame这些简洁高效的数据结构的魅力。Welcome to learn Module 03 “Powerful Data Structures and Python Extension Libraries... More%欢迎小伙伴们来到""Python数据统计和可视化""模块的学习！本模块将从数据处理的整个过程展现Python在数据处理和分析上独特的优势，将用很多耳熟能详喜闻乐见的案例让大家领略并掌握方法和特点，学完本模块，你可以从一堆数据中快速有效地挖掘出你想要的或者你期待的又或者是未知的结果，也可以将这些数据用各类图像来表示。另外，Python中各种第三方包的数据统计方式就如开了外挂一样强大到让你咋舌，但却是普通人也可以理解并拥有的。Welcome to learn Module 04 “Python Data Statistic... More%""面向对象和图形用户界面""欢迎你！本模块将会带大家去理解什么是面向对象，图形用户界面与面向对象的关系，这部分内容只要求理解概念，将来可以在用各种新函数时更自如更简单地上手，不要求写程序。另外图形用户界面的基本框架、常用的组建和布局管理也是大家需要掌握的部分，学完它们你会发现图形用户界面开发其实并非遥不可及。本模块有彩蛋哟~~~Welcome to Module 05 “Object Orientation and Graphical User Interface”! In this module, I will g... More"
"42","software_development","Beginning Game Programming with C#","About this course: The Beginning Game Programming with C# course is all about learning how to develop video games using the C# programming language. Why use C# instead of C++, Java, ActionScript, or some other programming language you may have heard of? First, using C# lets us use the open-source MonoGame framework, which help us quickly develop games for Windows, Android, iOS, Mac OS X, and others. Second, the Unity game engine is very popular with indie game developers, and C# is one of the programming languages you can use in the Unity environment. And finally, C# is a really good language for learning how to program.

That learning how to program comment is important because this course doesn't assume you have any previous programming experience. Don't worry if you've never written code before; we'll start at the very beginning and work our way up to building a small, complete game by the end of the course. Throughout the course you'll learn core programming concepts that apply to lots of programming languages, including C#, and you'll also learn how to apply those concepts when you develop games: drawing all the entities in the game world, updating the game world based on user input and simple physics, playing music and sound effects in your games, and so on.

Computer programming is really fun in general, and programming games is even better!

Caution: Beginning (assuming no prior programming knowledge) is not the same as easy (not hard to do). Learning to program IS hard to do, especially since this course is essentially a freshman-level college course. Meeting the course challenges while you master the material will be rewarding to you, but doing that will require hard work and maybe even a few expletives along the way.","Learn about the course structure, the course programming environment, and Dr. T; Learn how to write a C# program; Learn how we use data types, variables, and constants to store data in our programs; Complete and submit Programming Assignment 1 %Learn some foundational Object-Oriented concepts; Learn the basics of MonoGame/XNA; Complete and submit Programming Assignment 2; Complete and submit Peer Review of Programming Assignment 1 %Learn about using C# strings; Learn how we make decisions in our code; Complete and submit Programming Assignment 3; Complete and submit Peer Review of Programming Assignment 2 %Reflect on previous course material with no new material this week; Complete and submit Project Increment 1; Complete and submit Peer Review of Programming Assignment 3 %Learn how to use mice and controllers for input; Learn how to store larger amounts of data; Complete and submit Programming Assignment 4; Complete and submit Peer Review of Project Increment 1 %Reflect on previous course material with no new material this week; Complete and submit Project Increment 2; Complete and submit Peer Review of Programming Assignment 4 %Learn how to do things multiple times; Complete and submit Programming Assignment 5; Complete and submit Peer Review of Project Increment 2 %Reflect on previous course material with no new material this week; Complete and submit Project Increment 3; Complete and submit Peer Review of Programming Assignment 5 %Learn how to design and implement classes; Complete and submit Programming Assignment 6; Complete and submit Peer Review of Project Increment 3 %Reflect on previous course material with no new material this week; Complete and submit Project Increment 4; Complete and submit Peer Review of Programming Assignment 6 %Learn how to play music and sound effects in MonoGame/XNA; Learn how to process keyboard input and display text in MonoGame/XNA; Complete and submit Project Increment 5; Complete and submit Peer Review of Project Increment 4 %The description goes here "
"43","software_development","A developer's guide to the Internet of Things (IoT)","About this course: >>> By enrolling in this course you agree to the End User License Agreement as set out in the FAQ.  Once enrolled you can access the license in the Resources area <<<

The Internet of Things (IoT) is an area of rapid growth and opportunity. Technical innovations in networks, sensors and applications, coupled with the advent of 'smart machines' have resulted in a huge diversity of devices generating all kinds of structured and unstructured data that needs to be processed somewhere.  Collecting and understanding that data, combining it with other sources of information and putting it to good  use can be achieved by using connectivity, analytical and cognitive services now available on the cloud, allowing development and deployment of solutions to be achieved faster and more efficiently than ever before.

This course is an entry level introduction to developing and deploying solutions for the Internet of Things. It will focus on capturing data from a trusted device and sending the data to a cloud platform where it can be exploited by the many services available. You will explore all the steps required to create a basic IoT solution using a popular device, the Raspberry Pi, and a trial version of the cloud-based IBM Watson IoT Platform. 

What you will learn: 
Quickly create applications that leverage connectivity and analytics as part of an integrated IoT platform.  Use Node-RED, an open-source visual application development environment, on both the device and the cloud.  Create a basic IoT solution by leveraging pre-built blocks of code that abstracts and speeds the development process. Use APIs to access the platform and explore the different connectivity options for various devices, gateways and applications. Explore options to ensure your solution makes best use of the captured data. 
 
What technology is required to complete the course?  
The programming assignments require you to have a Raspberry Pi device - any model of Raspberry Pi with a 40 pin header. The course also uses the SenseHAT extension board, whilst it is preferable to have a SenseHat there is a simulator provided if you can't get a SenseHAT.  

You will need internet connectivity to download software, connect to the platform, develop and deploy your IoT solution.

Your Rasberry Pi will need the latest Rasbian Jessie OS. This OS will be on a Micro SD Card. The recommended size of the SD card is 8GB but 4GB will do. Note that the learner kit comes with a preconfigured SD card.

In order to setup the Micro SD card, you will need a computer with either a windows, apple or Linux OS. Since most computer do not have a micro SD port, you will need a Micro SD adapter or USB Micro SD card adapter. Your computer will also be used when working on the platform.

To work on your Raspberry Pi, you will need an HDMI monitor or TV to work as the display for the Raspberry Pi (DVI monitor will also work). To connect the monitor to the Raspberry Pi you will need an HDMI cable (or a DVI to HDMI cable).
Your Raspberry Pi needs a way to connect to the internet; either an Ethernet cable for connecting to the Router, or a USB WiFi dongle if you have wireless connectivity. Note that the Raspberry Pi 3 includes built-in WiFi
A USB Keyboard and mouse.

Your Raspberry Pi will also needs a 5V micro USB power supply i(This may be a phone charger for example)
There is an IoT Learner kit available from element14 which includes the Raspberry Pi, a pre-flashed SD card, a case and power supply : https://www.element14.com/community/docs/DOC-82034/l/element14-iot-learner-kit 

What prerequisite skills are required ?
This is an entry level course, but does assume you have basic programming skills. The assignments set use both Python and JavaScript programming languages, so some basic skill in these languages is required. No previous experience with IBM Bluemix or the IBM Watson IoT Platform is required.

What additional resources do I need for this course? 
The Server side code for the assignments will use the IBM Bluemix cloud platform, so you will need to sign up for a free account on that platform.

When your 30-day trial expires, you can enter a credit card to keep using Bluemix. Bluemix has a set amount of free resources available to users who have registered with their credit card. If you stay within these free resources limits you will not incur any charges. This is a good idea if you are planning to take longer than 30 days to complete the course, or if you have an existing trial account that that is about to expire and you need longer time on the platform to complete the course.","Welcome to the course.  This learning module introduces you to course and the instructors.  The module outlines the content covered on the course and gives an introduction to the Internet of Things.  It also discusses the requirements needed to complete the co... More%An Internet of Things solution usually requires a back-end server to receive and process data coming from sensors.  Cloud platforms allow new solutions to be created and deployed very rapidly without having to worry about how to host the application.  This ser... More%This unit looks at how to add a device to your solution.  Creating an application on a Raspberry Pi and establishing secure, trusted communication between your cloud application and devices %Up to now the course has used the NodeRED rapid application development environment.  This unit looks at how to program for the Internet of Things platform using more traditional programming environments "
"44","software_development","Programming Languages, Part A","About this course: This course is an introduction to the basic concepts of programming languages, with a strong emphasis on functional programming. The course uses the languages ML, Racket, and Ruby as vehicles for teaching the concepts, but the real intent is to teach enough about how any language “fits together” to make you more effective programming in any language -- and in learning new ones.

This course is neither particularly theoretical nor just about programming specifics -- it will give you a framework for understanding how to use language constructs effectively and how to design correct and elegant programs. By using different languages, you will learn to think more deeply than in terms of the particular syntax of one language. The emphasis on functional programming is essential for learning how to write robust, reusable, composable, and elegant programs. Indeed, many of the most important ideas in modern languages have their roots in functional programming. Get ready to learn a fresh and beautiful way to look at software and how to have fun building it.

The course assumes some prior experience with programming, as described in more detail in the first module.

The course is divided into three Coursera courses: Part A, Part B, and Part C.  As explained in more detail in the first module of Part A, the overall course is a substantial amount of challenging material, so the three-part format provides two intermediate milestones and opportunities for a pause before continuing.  The three parts are designed to be completed in order and set up to motivate you to continue through to the end of Part C.  The three parts are not quite equal in length: Part A is almost as substantial as Part B and Part C combined.

Week 1 of Part A has a more detailed list of topics for all three parts of the course, but it is expected that most course participants will not (yet!) know what all these topics mean.","Welcome! Start here!  Learn about this course and how it's organized. %This module contains two things: (1) The information for the [unusual] software you need to install for Programming Languages Part A. (2) An optional ""fake"" homework that you can turn in for auto-grading and peer assessment to get used to the mechanics of assi... More%It's time to dive in!  Start with a careful reading of the ""Section 1 Welcome Message"" and go from there. %This section is a particularly rewarding one where a lot of ideas come together to reveal a surprisingly elegant underlying structure in ML.  As usual, start with the welcome reading, dive into the material, and leave plenty of time to approach the programming... More%This section is all about higher-order functions -- the feature that gives functional programming much of its expressiveness and elegance -- and its name!  As usual, the first reading below introduces you to the section, but it will make more sense once you di... More%We finish Part A of the course with this module.  As explained in more detail in the welcome message, we discuss type inference, ML's module system, and the fundamental idea in computing of two computations being equivalent.  There is no programming assignment... More"
"45","software_development","Java Programming: Solving Problems with Software","About this course: Learn to code in Java and improve your programming and problem-solving skills. You will learn to design algorithms as well as develop and debug programs. Using custom open-source classes, you will write programs that access and transform images, websites, and other types of data. At the end of the course you will build a program that determines the popularity of different baby names in the US over time by analyzing comma separated value (CSV) files. 

After completing this course you will be able to:
1. Edit, compile, and run a Java program;
2. Use conditionals and loops in a Java program;
3. Use Java API documentation in writing programs. 
4. Debug a Java program using the scientific method;
5. Write a Java method to solve a specific problem;
6. Develop a set of test cases as part of developing a program;
7. Create a class with multiple methods that work together to solve a problem; and
8. Use divide-and-conquer design techniques for a program that uses multiple methods.","Welcome to “Java Programming: Solving Problems with Software”! We are excited that you are starting our course to learn how to write programs in Java, one of the most popular programming languages in the world. In this introductory module, you will get to meet... More%In this module, you will learn to design and run your first Java programs, including one program that prints “Hello!” in various countries’ languages and another where you will copy and edit many files by converting color images to grayscale. To accomplish the... More%This module begins with a short presentation from Raluca Gordân, an assistant professor in Duke University’s Center for Genomic and Computational Biology, about an important problem genomics scientists encounter regularly: how to identify genes in a strand of ... More%A common format for storing tabular data (any data organized into columns and rows) is in comma separated values (CSV) files. In this module, you will learn how to analyze and manipulate data from multiple CSV data files using a powerful open-source software p... More%This module wraps up the course with a mini project that ties together the different practices, skills, and libraries you have gained across the course! Using data on the popularity of different baby names in the United States from the past several decades, yo... More"
"46","software_development","Programming Mobile Applications for Android Handheld Systems: Part 1","About this course: This course introduces you to the design and implementation of Android applications for mobile devices. You will develop an app from scratch, assuming a basic knowledge of Java, and learn how to set up Android Studio, work with various Activities and create simple user interfaces to make your apps run smoothly.","  %  % %  % "
"47","software_development","Server-side Development with NodeJS","About this course: This course deals with all things server-side. We base the entire course around the NodeJS platform. We start with a brief overview of the Web protocols: HTTP and HTTPS. We examine NodeJS and NodeJS modules: Express for building web servers. On the database side, we review basic CRUD operations, NoSQL databases, in particular MongoDB and Mongoose for accessing MongoDB from NodeJS. We examine the REST concepts and building a RESTful API. We touch upon authentication and security. Finally we review backend as a service (BaaS) approaches, including mobile BaaS, both open-source and commercial BaaS services.

At the end of this course, you will be able to:

- Demonstrate an understanding of server-side concepts, CRUD and REST
- Build and configure a backend server using NodeJS framework
- Build a RESTful API for the front-end to access backend services","In this module you will be introduced to Node, Node modules and the Node HTTP server. You will learn about the Express framework and how to set up a REST API using Express. %This module looks in detail at data storage with MongoDB, the popular NoSQL database. You will learn first about Express generator for scaffolding an Express application. Then you will learn about MongoDB. You will learn how to interact with MongoDB from a Nod... More%This module is dedicated to user authentication. We first develop a full-fledged REST API server with Express, Mongo and Mongoose. Thereafter we examine basic authentication and session-based authentication briefly. We then develop token-based authentication w... More%In this module we learn about Mongoose population, a way of cross-referencing documents and populating the documents from other documents. We then review secure communication using HTTPS. We look at Backend as a Service (BaaS) and take a brief look at Loopback... More"
"48","software_development","Database Management Essentials","About this course: Database Management Essentials provides the foundation you need for a career in database development, data warehousing, or business intelligence, as well as for the entire Data Warehousing for Business Intelligence specialization. In this course, you will create relational databases, write SQL statements to extract information to satisfy business reporting requests, create entity relationship diagrams (ERDs) to design databases, and analyze table designs for excessive redundancy. As you develop these skills, you will use either Oracle or MySQL to execute SQL statements and a database diagramming tool such as the ER Assistant to create ERDs. We’ve designed this course to ensure a common foundation for specialization learners. Everyone taking the course can jump right in with writing SQL statements in Oracle or MySQL.","Module 1 provides the context for Database Management Essentials. When you’re done, you’ll understand the objectives for the course and know what topics and assignments to expect. Keeping these course objectives in mind will help you succeed throughout the cou... More%We’ll launch into an exploration of databases and database technology and their impact on organizations in Module 2. We’ll investigate database characteristics, database technology features, including non-procedural access, two key processing environments, and... More%Now that you have the informational context for database features and environments, you’ll start building! In this module, you’ll learn relational data model terminology, integrity rules, and the CREATE TABLE statement. You’ll apply what you’ve learned in prac... More%This module is all about acquiring query formulation skills. Now that you know the relational data model and have basic skills with the CREATE TABLE statement, we can cover basic syntax of the SQL SELECT statement and the join operator for combining tables. SE... More%Now that you can identify and use the SELECT statement and the join operator, you’ll extend your problem solving skills in this module so you can gain confidence on more complex queries. You will work on retrieval problems with multiple tables and grouping. In... More%Module 6 represents another shift in your learning. In previous modules, you’ve created and populated tables and developed query formulation skills using the SQL SELECT statement. Now you’ll start to develop skills that allow you to create a database design to... More%Module 7 builds on your knowledge of database development using basic ERD symbols and relationship variations. We’ll be practicing precise usage of ERD notation and basic problem solving skills. You will learn about diagram rules and work problems to help you ... More%In Module 8, you’ll use your ERD notation skills and your ability to avoid diagram errors to develop ERDs that satisfy specific business data requirements. You will learn and practice powerful problem-solving skills as you analyze narrative statements and tran... More%Now that you have practiced data modeling techniques, you’ll get to wrestle with narrative problem analyses and transformations for generating alternative database designs in Module 9. At the end of this module, you’ll learn guidelines for documentation and de... More%Modules 6 to 9 covered conceptual data modeling, emphasizing precise usage of ERD notation, analysis of narrative problems, and generation of alternative designs. Modules 10 and 11 cover logical database design, the next step in the database development proces... More%Module 11 covers normalization, the second part of the logical database design process. Normalization provides tools to remove unwanted redundancy in a table design. You’ll discover the motivation for normalization, constraints to reason about unwanted redunda... More"
"49","software_development","Introduction to the Internet of Things and Embedded Systems","About this course: The explosive growth of the “Internet of Things” is changing our world and the rapid drop in price for typical IoT components is allowing people to innovate new designs and products at home. In this first class in the specialization you will learn the importance of IoT in society, the current components of typical IoT devices and trends for the future. IoT design considerations, constraints and interfacing between the physical world and your device will also be covered. You will also learn how to make design trade-offs between hardware and software. We'll also cover key components of networking to ensure that students understand how to connect their device to the Internet. Please note that this course does not include discussion forums.

Upon completing this course, you will be able to:
1.       Define the term “Internet of Things”
2.       State the technological trends which have led to IoT
3.       Describe the impact of IoT on society
4.       Define what an embedded system is in terms of its interface
5.       Enumerate and describe the components of an embedded system
6.       Describe the interactions of embedded systems with the physical world
7.       Name the core hardware components most commonly used in IoT devices
8.       Describe the interaction between software and hardware in an IoT device
9.       Describe the role of an operating system to support software in an IoT device
10.     Explain the use of networking and basic networking hardware
11.     Describe the structure of the Internet
12.     Describe the meaning of a “network protocol”
13.     Explain MANETs and their relation to IoT","The Internet of Things (IoT) is a popular buzzword right now, but unlike many fads which have come and gone, the Internet of Things describes an important trend which is having lasting effects on society at large. The term itself, “Internet of Things”, is used... More%In Module 1, we introduced the concept of the Internet of Things at a high level, defining the term and outlining its implications. In this module we explore some of the details involved in the design and implementation of IoT devices. Unlike traditional compu... More%IoT devices are implemented using both hardware and software components. Dedicated hardware components are used to implement the interface with the physical world, and to perform tasks which are more computationally complex. Microcontrollers are used to execut... More%An important aspect of the Internet of Things is that devices are networked in some way, and often connected to the Internet. Networking enables devices to communicate with other IoT devices and larger cloud-based servers. IoT devices can often be thought of a... More"
"50","software_development","Cloud Computing Applications, Part 1: Cloud Systems and Infrastructure","About this course: Welcome to the Cloud Computing Applications course, the first part of a two-course series designed to give you a comprehensive view on the world of Cloud Computing and Big Data! 

In this first course we cover a multitude of technologies that comprise the modern concept of cloud computing. Cloud computing is an information technology revolution that has just started to impact many enterprise computing systems in major ways, and it will change the face of computing in the years to come.

We start the first week by introducing some major concepts in cloud computing, the economics foundations of it and we introduce the concept of big data. We also cover the concept of software defined architectures, and how virtualization results in cloud infrastructure and how cloud service providers organize their offerings. In week two, we cover virtualization and containers with deeper focus, including lectures on Docker, JVM and Kubernates. We finish up week two by comparing the infrastructure as a service offering by the big three: Amazon, Google and Microsoft. 
Week three moves to higher level of cloud offering, including platform as a service, mobile backend as a service and even serverless architectures. We also talk about some of the cloud middleware technologies that are fundamental to cloud based applications such as RPC and REST, JSON and load balancing. Week three also covers metal as a service (MaaS), where physical machines are provisioned in a cloud environment. 
Week four introduces higher level cloud services with special focus on cloud storage services. We introduce Hive, HDFS and Ceph as pure Big Data Storage and file systems, and move on to cloud object storage systems, virtual hard drives and virtual archival storage options. As discussion on Dropbox cloud solution wraps up week 4 and the course.","You will become familiar with the course, your classmates, and our learning environment. The orientation will also help you obtain the technical skills required for the course. %Welcome to the first module of the course! In this module, we will introduce the concept of cloud computing and the economical foundations that make cloud computing make sense. We then introduce some fundamental concepts including software defined architecture... More%Welcome to the second module! Here, we cover virtualization and containers with deeper focus, including lectures on Docker, JVM and Kubernates. We finish up week two by comparing the infrastructure as a service offering by the big three: Amazon, Google and Mic... More%Welcome to the third module, where we introduce Metal as a Service (provision real hardware in the cloud), Platform as a Service (provide a platform to run user code on) and Web Middleware as the glue technology that empowers cloud computing.  %Welcome to the last and final module of the cloud computing course! So far we have covered various methods of running certain computations on the cloud. Now it's time to focus on data storage in the clouds. In this module, we introduce big data and cloud file ... More%You will find out where to go next after completing this course and be able to share any thoughts you have on this course experience. "
"51","software_development","Capstone: Retrieving, Processing, and Visualizing Data with Python","About this course: In the capstone, students will build a series of applications to retrieve, process and visualize data using Python.   The projects will involve all the elements of the specialization.  In the first part of the capstone, students will do some visualizations to become familiar with the technologies in use and then will pursue their own project to visualize some other data that they have or can find.  Chapters 15 and 16 from the book “Python for Informatics” will serve as the backbone for the capstone. This course covers Python 3.","Congratulations to everyone for making it this far. Before you begin, please view the Introduction video and read the Capstone Overview. The Course Resources section contains additional course-wide material that you may want to refer to in future weeks. %This week we will download and run a simple version of the Google PageRank Algorithm and practice spidering some content. The assignment is peer-graded, and the first of three required assignments in the course. This a continuation of the material covered in C... More%The optional Capstone project is your opportunity to select, process, and visualize the data of your choice, and receive feedback from your peers.  The project is not graded, and can be as simple or complex as you like. This week's assignment is to identify a ... More%In our second required assignment, we will retrieve and process email data from the Sakai open source project. Video lectures will walk you through the process of retrieving, cleaning up, and modeling the data. %The task for this week is to make a discussion thread post that reflects the progress you have made to date in retrieving and cleaning up your data source so can perform your analysis.  Feedback from other students is encouraged to help you refine the process. %In the final required assignment, we will do two visualizations of the email data you have retrieved and processed: a word cloud to visualize the frequency distribution and a timeline to show how the data is changing over time. %This week you will discuss the analysis of your data to the class. While many of the projects will result in a visualization of the data, any other results of analyzing the data are equally valued, so use whatever form of analysis and display is most appropria... More"
"52","software_development","Introduction to Game Development","About this course: If you love games and want to learn how to make them, then this course will start you down that path. Making games is a creative and technical art form. In this course you will familiarize yourself with the tools and practices of game development. You will get started developing your own videogames using the industry standard game development tools, including the Unity3D game engine and C#. At the end of the course you will have completed three hands-on projects and will be able to leverage an array of game development techniques to create your own basic games. This course is for individuals interested in becoming a game designer, game artist, or game programmer.","The only thing more fun than playing games is making them. You can make games. All it takes is some time, a willingness to learn and a passion to create. You don't need to be a ""coder"" to make games. Part of the beauty of games is that they take a variety of s... More%One of the reasons we use Unity3D is its visual editor which makes creating interactive games accessible to both creative and technical individuals. In this module, you will create your first Unity3D project from start to finish. Using a variety of graphical a... More%Unity3D is a powerful tool for creating games. In this module, you will create your first actual game from start to finish, called Roller Madness.  This ball rolling game will introduce you to the concepts of physics, health and damage, pickups, enemies, spawn... More%Now, don't get scared, but games need code. Code is the canvas upon which game systems are painted. However, that doesn't mean you need to be a C# ninja. In this module, you will start to learn the ins-and-outs of programming C# in Unity. You will apply this k... More"
"53","software_development","Software Defined Networking","About this course: In this course, you will learn about software defined networking and how it is changing the way communications networks are managed, maintained, and secured.",NA
"54","software_development","Introduction to Embedded Systems Software and Development Environments","About this course: Introduction to Embedded Systems Software and Development Environments is the first course of the upcoming Embedded Software Essentials Specialization. This course is focused on giving you real world coding experience and hands on project work with ARM based Microcontrollers. You will learn how to implement software configuration management and develop embedded software applications. Course assignments include creating a build system using the GNU Toolchain GCC, using Git version control, and developing software in Linux on a Virtual Machine. The course concludes with a project where you will create your own build system and firmware that can manipulate memory.

Later courses of the Specialization will use hardware tools to program and debug microcontrollers with bare-metal firmware. Using a Texas Instruments MSP432 Development Kit, you will configure a variety of peripherals, write numerous programs, and see your work execute on your own embedded platform!","Module 1 will introduce the learner to the components of your embedded system software development process. This module will be a quick overview for many topics with detailed analysis to follow in later modules and courses. We start with defining the hardware ... More%Module 2 will introduce the learner to the software development build system. Most software engineers are very knowledgeable about their build system as we need them to translate our high-level software languages to our architecture specific implementations. T... More%Module 3 will begin to introduce important embedded concepts like the memory systems in their design. Learners will understand how the software to hardware mapping occurs for their designs including differentiating between your program code and your program da... More%During this week you are to going to combine what you have learned in modules 1-3 to write some memory manipulation software, incorporate into your build system and then run some test functions. At the end of the assignment you will perform a detailed code rev... More"
"55","software_development","Embedded Hardware and Operating Systems","About this course: This course is intended for the Bachelor and Master's students, who like practical programming and making IoTs applications!

In this course we will talk about two components of a cyber physical system, namely hardware and operating systems. 


After completing this course, you will have the knowledge of both hardware components and operating systems. You are able to plan and use embedded operating systems in resource-constraint devices for Internet-of-Things (cyber physical system) applications. In addition, you can use Cooja simulation for designing and simulating wireless sensor network applications.

We have 4 modules, each with a graded quiz in the end and finally we have one peer reviewed programming assignment
In case you have no experience with C programming, please check you a practical course like:
https://www.coursera.org/learn/arduino-platform. 

The course is actually quite fun at the end when you are playing around with Cooja simulation for IoTs applications. So you can create and simulate your own design for sensor network applications. A lot of features and examples of Contiki and Cooja can be explored via assignments. There are some optional assignments of wireless sensor network applications for students who want to explore more about embedded OS in IoTs applications.
    
- Marco Ramirez /University of Turku
- Igor Tcarenko/ University of Turku
- Nguyen Gia Tuan /University of Turku

Check out our whole curriculum: http://iot4health.utu.fi/","This week will start from the basic information about Embedded Systems.
Specifically you will learn (1) what are Embedded Systems and where they are applied 
as well as (2) the main characteristics and challenges of Embedded Systems. (3)You will discover
how E... More%This week we will go into details of what Embedded Systems consist of. Specifically you learn about the main blocks of any Embedded System Processing Elements. We will show you what (1)Embedded Processor consists of, its main features. You will learn what (3)r... More%In this week, we start to have an overview of operating systems and embedded operating systems for IoTs. Primary functionalities of embedded operating systems are discussed. We learn how operating systems works such as how memory is managed, how tasks are sche... More%In this week, we start to explore Contiki Os in detailed. First we discuss about Contiki system and its kernel architecture. Furthermore, we explore how loadable programs are actually implemented in Contiki system. Second, we go thourgh services and libraries ... More"
"56","software_development","Learn to Program: Crafting Quality Code","About this course: Not all programs are created equal.  In this course, we'll focus on writing quality code that runs correctly and efficiently.  We'll design, code and validate our programs and learn how to compare programs that are addressing the same task."," % % % % "
"57","software_development","The Finite Element Method for Problems in Physics","About this course: This course is an introduction to the finite element method as applicable to a range of problems in physics and engineering sciences. The treatment is mathematical, but only for the purpose of clarifying the formulation. The emphasis is on coding up the formulations in a modern, open-source environment that can be expanded to other applications, subsequently.

The course includes about 45 hours of lectures covering the material I normally teach in an
introductory graduate class at University of Michigan. The treatment is mathematical, which is
natural for a topic whose roots lie deep in functional analysis and variational calculus. It is not
formal, however, because the main goal of these lectures is to turn the viewer into a
competent developer of finite element code. We do spend time in rudimentary functional
analysis, and variational calculus, but this is only to highlight the mathematical basis for the
methods, which in turn explains why they work so well. Much of the success of the Finite
Element Method as a computational framework lies in the rigor of its mathematical
foundation, and this needs to be appreciated, even if only in the elementary manner
presented here. A background in PDEs and, more importantly, linear algebra, is assumed,
although the viewer will find that we develop all the relevant ideas that are needed.

The development itself focuses on the classical forms of partial differential equations (PDEs):
elliptic, parabolic and hyperbolic. At each stage, however, we make numerous connections to
the physical phenomena represented by the PDEs. For clarity we begin with elliptic PDEs in
one dimension (linearized elasticity, steady state heat conduction and mass diffusion). We
then move on to three dimensional elliptic PDEs in scalar unknowns (heat conduction and
mass diffusion), before ending the treatment of elliptic PDEs with three dimensional problems
in vector unknowns (linearized elasticity). Parabolic PDEs in three dimensions come next
(unsteady heat conduction and mass diffusion), and the lectures end with hyperbolic PDEs in
three dimensions (linear elastodynamics). Interspersed among the lectures are responses to
questions that arose from a small group of graduate students and post-doctoral scholars who
followed the lectures live. At suitable points in the lectures, we interrupt the mathematical
development to lay out the code framework, which is entirely open source, and C++ based.

Books:
There are many books on finite element methods. This class does not have a required
textbook. However, we do recommend the following books for more detailed and broader
treatments than can be provided in any form of class:

The Finite Element Method: Linear Static and Dynamic Finite Element Analysis, T.J.R.
Hughes, Dover Publications, 2000.

The Finite Element Method: Its Basis and Fundamentals, O.C. Zienkiewicz, R.L. Taylor and
J.Z. Zhu, Butterworth-Heinemann, 2005.

A First Course in Finite Elements, J. Fish and T. Belytschko, Wiley, 2007.

Resources:
You can download the deal.ii library at dealii.org. The lectures include coding tutorials where
we list other resources that you can use if you are unable to install deal.ii on your own
computer. You will need cmake to run deal.ii. It is available at cmake.org.","This unit is an introduction to a simple one-dimensional problem that can be solved by the finite element method. %In this unit you will be introduced to the approximate, or finite-dimensional, weak form for the one-dimensional problem. %In this unit, you will write the finite-dimensional weak form in a matrix-vector form. You also will be introduced to coding in the deal.ii framework. %This unit develops further details on boundary conditions, higher-order basis functions, and numerical quadrature. You also will learn about the templates for the first coding assignment. %This unit outlines the mathematical analysis of the finite element method. %This unit develops an alternate derivation of the weak form, which is applicable to certain physical problems. %In this unit, we develop the finite element method for three-dimensional scalar problems, such as the heat conduction or mass diffusion problems. %In this unit, you will complete some details of the three-dimensional formulation that depend on the choice of basis functions, as well as be introduced to the second coding assignment. %In this unit, we take a detour to study the two-dimensional formulation for scalar problems, such as the steady state heat or diffusion equations. %This unit introduces the problem of three-dimensional, linearized elasticity at steady state, and also develops the finite element method for this problem. Aspects of the code templates are also examined. %In this unit, we study the unsteady heat conduction, or mass diffusion, problem, as well as its finite element formulation. %In this unit we study the problem of elastodynamics, and its finite element formulation. %This is a wrap-up, with suggestions for future study. "
"58","software_development","The Arduino Platform and C Programming","About this course: The Arduino is an open-source computer hardware/software platform for building digital devices and interactive objects that can sense and control the physical world around them. In this class you will learn how the Arduino platform works in terms of the physical board and libraries and the IDE (integrated development environment). You will also learn about shields, which are smaller boards that plug into the main Arduino board to perform other functions such as sensing light, heat, GPS tracking, or providing a user interface display. The course will also cover programming the Arduino using C code and accessing the pins on the board via the software to control external devices. Please note that this course does not include discussion forums.

Upon completing this course, you will be able to:
1.       Outline the composition of the Arduino development board
2.       Describe what it means to program the board's firmware
3.       Read board schematics
4.       Install Arduino IDE
5.       Describe what ""shields"" are and how they are used
6.       Specify the role of libraries in the use of shields
7.       Compile and run a program
8.       Name C Variables and Types
9.       Name common C operators
10.     Use conditionals and loops
11.     Explain functions, their definition and invocation
12.     Explain the implications of global variables
13.     Undertake the Arduino build process
14.     Describe the role of the tools behind the IDE
15.     Describe how to invoke functions in classes
16.     Explain the structure of an Arduino sketch
17.     Access the pins of the Arduino
18.     Differentiate between digital and analog pin
19.     Debug embedded software
20.     Explain the importance of controllability and observability in the debugging process
21.     Describe common debugging architectures for embedded systems
22.     Explain how the UART Serial communication protocol works
23.     Describe how the Arduino Serial library performs serial communication","This module provides an introduction to the Arduino environment which is composed of three things: the Arduino board, the Arduino IDE, and the Arduino-compatible shields together with their libraries. We first investigate the board, discussing all of its main ... More%This module covers the basics of the C programming language which will be used to write code for the Arduino. The course first covers basic syntax, variables, and types. Most of the basic C operators are presented. Conditional statements (if, switch) and loops... More%This module describes the composition of an Arduino program, or sketch, and the process by which it is compiled and uploaded. The Arduino IDE is a user interface for the software tools which actually compile and upload the program. We outline the use of these ... More%This module is an introduction on debugging embedded software on an Arduino. We discuss the basic debugging requirements: controllability and observability. The debugging environment available for an Arduino UNO is limited, so we describe how to use the UART c... More"
"59","software_development","Parallel programming","About this course: With every smartphone and computer now boasting multiple processors, the use of functional ideas to facilitate parallel programming is becoming increasingly widespread. In this course, you'll learn the fundamentals of parallel programming, from task parallelism to data parallelism. In particular, you'll see how many familiar ideas from functional programming map perfectly to to the data parallel paradigm. We'll start the nuts and bolts how to effectively parallelize familiar collections operations, and we'll build up to parallel collections, a production-ready data parallel collections library available in the Scala standard library. Throughout, we'll apply these concepts through several hands-on examples that analyze real-world data, such as popular algorithms like k-means clustering.

Learning Outcomes. By the end of this course you will be able to:

- reason about task and data parallel programs,
- express common algorithms in a functional style and solve them in parallel,
- competently microbenchmark parallel code,
- write programs that effectively use parallel collections to achieve performance

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Functional Program Design in Scala: https://www.coursera.org/learn/progfun2.","We motivate parallel programming and introduce the basic constructs for building parallel programs on JVM and Scala. Examples such as array norm and Monte Carlo computations illustrate these concepts. We show how to estimate work and depth of parallel programs... More%We continue with examples of parallel algorithms by presenting a parallel merge sort. We then explain how operations such as map, reduce, and scan can be computed in parallel. We present associativity as the key condition enabling parallel implementation of re... More%We show how data parallel operations enable the development of elegant data-parallel code in Scala. We give an overview of the parallel collections hierarchy, including the traits of splitters and combiners that complement iterators and builders from the seque... More%We give a glimpse of the internals of data structures for parallel computing, which helps us understand what is happening under the hood of parallel collections. "
"60","software_development","Build a Modern Computer from First Principles: Nand to Tetris Part II (project-centered course)","About this course: In this project-centered course you will build a modern software hierarchy, designed to enable the translation and execution of object-based, high-level languages on a bare-bone computer hardware platform. In particular, you will implement a virtual machine and a compiler for a simple, Java-like programming language, and you will develop a basic operating system that closes gaps between the high-level language and the underlying hardware platform. In the process, you will gain a deep, hands-on understanding of numerous topics in applied computer science, e.g. stack processing, parsing, code generation, and classical algorithms and data structures for memory management, vector graphics, input-output handling, and various other topics that lie at the very core of every modern computer system.

This is a self-contained course: all the knowledge necessary to succeed in the course and build the various systems will be given as part of the learning experience. The only prerequisite is knowledge of programming at the level acquired in introduction to computer science courses. All the software tools and materials that are necessary to complete the course will be supplied freely after you enrol in the course.

This course is accompanied by the textbook ""The Elements of Computing Systems"" (Nisan and Schocken, MIT Press). While not required for taking the course, the book provides a convenient coverage of all the course topics. The book is available in either hardcopy or ebook form, and MIT Press is offering a 30% discount off the cover price by using the discount code MNTT30 at https://mitpress.mit.edu/books/elements-computing-systems. 

The course consists of six modules, each comprising a series of video lectures, and a project. You will need about 2-3 hours to watch each module's lectures, and about 15 hours to complete each one of the six projects. The course can be completed in six weeks, but you are welcome to take it at your own pace. You can watch a TED talk about this course by Googling ""nand2tetris TED talk"". 

*About Project-Centered Courses: Project-centered courses are designed to help you complete a personally meaningful real-world project, with your instructor and a community of learners with similar goals providing guidance and suggestions along the way. By actively applying new concepts as you learn, you’ll master the course content more efficiently; you’ll also get a head start on using the skills you gain to make positive changes in your life and career. When you complete the course, you’ll have a finished project that you’ll be proud to use and share."," % % % % % % % % "
"61","software_development","Data Processing Using Python","About this course: This course (The English copy of ""用Python玩转数据"" <https://www.coursera.org/learn/hipython/home/welcome>)  is mainly for non-computer majors. It starts with the basic syntax of Python, to how to acquire data in Python locally and from network, to how to present data, then to how to conduct basic and advanced statistic analysis and visualization of data, and finally to how to design a simple GUI to present and process data, advancing level by level. 
This course, as a whole, based on Yahoo Finance data and through establishment of popular cases one after another, enables learners to more vividly feel the simplicity, elegance and robustness of Python. Also, it discusses the fast, convenient and efficient data processing capacity of Python in humanities and social sciences fields like literature, sociology and journalism and science and engineering fields like mathematics and biology, in addition to business fields. Similarly, it may also be flexibly applied into other fields.","Hi, guys, welcome to learn “Data Processing Using Python”(The English version of ""用Python玩转数据"", url is https://www.coursera.org/learn/hipython/home/welcome)!In this course, I tell in a manner that enables non-computer majors to understand how to utilize this s... More%Hi, guys, welcome to learn Module 01 “Basics of Python”! I’ll first guide you to have a glimpse of its simplicity for learning as well as elegance and robustness. Less is more: the author of Python must know this idea well. After learning this module, you can ... More%Welcome to learn Module 02 “Data Acquisition and Presentation”! After learning this module, you can master the modes of acquiring local data and network data in Python and use the basic and yet very powerful data structure sequence, string, list and tuple in P... More%Welcome to learn Module 03 “Powerful Data Structures and Python Extension Libraries”! Have you felt you are closer to using Python to process data? After learning this module, you can master the intermediate-level and advanced uses of Python: data structure di... More%Welcome to learn Module 04 “Python Data Statistics and Visualization”! In this module, I will show you, over the entire process of data processing, the unique advantages of Python in data processing and analysis, and use many cases familiar to and loved by us ... More%Welcome to Module 05 “Object Orientation and Graphical User Interface”! In this module, I will guide you to understand what object orientation is and the relationship between graphical user interface and object orientation. Learners are only required to unders... More"
"62","software_development","Image and Video Processing: From Mars to Hollywood with a Stop at the Hospital","About this course: In this course, you will learn the science behind how digital images and video are made, altered, stored, and used. We will look at the vast world of digital imaging, from how computers and digital cameras form images to how digital special effects are used in Hollywood movies to how the Mars Rover was able to send photographs across millions of miles of space.
 
The course starts by looking at how the human visual system works and then teaches you about the engineering, mathematics, and computer science that makes digital images work. You will learn the basic algorithms used for adjusting images, explore JPEG and MPEG standards for encoding and compressing video images, and go on to learn about image segmentation, noise removal and filtering. Finally, we will end with image processing techniques used in medicine.
 
This course consists of 7 basic modules and 2 bonus (non-graded) modules. There are optional MATLAB exercises; learners will have access to MATLAB Online for the course duration. Each module is independent, so you can follow your interests.","Learn what is image and video processing. Learn the very basic concepts of human perception needed for understanding image processing. Learn simple tools in signal processing needed to understand following units.   %JPEG and MPEG are the most successful algorithms in the area, widely used by everybody in a daily basis, and the goal of this unit is to understand how they work. Also to understand why these techniques are important and why they are enabling technologies. Als... More%Some of the most basic tools in image processing, like median filtering and histogram equalization, are still among the most powerful. We will describe these and provide a modern interpretation of these basic tools. Students will then become familiar with simp... More%The goal of this unit is to complement Unit 3 by adding prior information about the sources of degradation. Students will learn that if we know about the degradation process, we can do better. The objective of this unit is to complete the training with basic a... More%Not all parts of the image are the same, and students will learn the basic techniques to partition an image, from simple threshold to more advanced graph cuts and active contours. This is the first unit where student will learn about image analysis and image i... More%This is all optional material. It will help the students that are more mathematically oriented and want to better understand the math behind next unit's lectures. But you will be able to handle without it.The quiz is therefore practice only.This is the first “... More%Students will get involved with a very exciting topic, since image and video inpainting is one of the most used tools in the movie industry. They will learn the problem, and also how they can approach it from multiple directions. This will also help to illustr... More%Here the goal is to present one of the most modern tools in image and video processing, and students will learn something that is today at the top of active research. This will also help to illustrate the use of linear algebra and optimization in image and vid... More%This is a bonus unit. Enjoy it. Image processing has been very successful in medical imaging, and we will use examples from HIV and brain research to illustrate the importance of image processing in solving societal problems. We will describe the basic tools i... More"
"63","software_development","Functional Program Design in Scala","About this course: In this course you will learn how to apply the functional programming style in the design of larger applications. You'll get to know important new functional programming concepts, from lazy evaluation to structuring your libraries using monads. We'll work on larger and more involved examples, from state space exploration to random testing to discrete circuit simulators. You’ll also learn some best practices on how to write good Scala code in the real world.

Several parts of this course deal with the question how functional programming interacts with mutable state. We will explore the consequences of combining functions and state. We will also look at purely functional alternatives to mutable state, using infinite data structures or functional reactive programming.

Learning Outcomes. By the end of this course you will be able to:

 - recognize and apply design principles of functional programs,
 - design functional libraries and their APIs,
 - competently combine functions and state in one program,
 - understand reasoning techniques for programs that combine 
   functions and state,
 - write simple functional reactive applications.

Recommended background: You should have at least one year programming experience. Proficiency with Java or C# is ideal, but experience with other languages such as C/C++, Python, Javascript or Ruby is also sufficient. You should have some familiarity using the command line. This course is intended to be taken after Functional Programming Principles in Scala: https://www.coursera.org/learn/progfun1.","We'll start by revisiting some concepts that we have learned from Principles of Functional Programming in Scala; collections, pattern matching, and functions. We'll then touch on for-comprehensions, a powerful way in Scala to traverse a list, process it, and r... More%This week we'll revisit performance issues caused by combinatorial search, and we'll discover an important concept in functional programming that can these issues: laziness. We'll also learn a little bit about proofs on trees; in particular, we'll see how to e... More%This week, we'll learn about state and side-effects. Through a rich example, we'll learn programming patterns for managing state in larger programs. We'll also learn about for-loops and while-loops in Scala. %This week we'll learn a number of important programming patterns via examples, starting with the observer pattern, and then going on to functional reactive programming. We'll learn how latency can be modeled as an effect, and how latency can be handled with Sc... More"
"64","software_development","The R Programming Environment","About this course: This course provides a rigorous introduction to the R programming language, with a  particular focus on using R for software development in a data science setting. Whether you are part of a data science team or working individually within a community of developers, this course will give you the knowledge of R needed to make useful contributions in those settings. As the first course in the Specialization, the course provides the essential foundation of R needed for the following courses. We cover basic R concepts and language fundamentals, key concepts like tidy data and related ""tidyverse"" tools, processing and manipulation of complex and large datasets, handling textual data, and basic data science tasks. Upon completing this course, learners will have fluency at the R console and will be able to create tidy datasets from a wide range of possible data sources.","In this module, you'll learn the basics of R, including syntax, some tidy data principles and processes, and how to read data into R.   %During this module, you'll learn to summarize, filter, merge, and otherwise manipulate data in R, including working through the challenges of dates and times.  %During this module, you'll learn to use R tools and packages to deal with text and regular expressions. You'll also learn how to manage and get the most from your computer's physical memory when working in R.  %In this final module, you'll learn how to overcome the challenges of working with large datasets both in memory and out as well as how to diagnose problems and find help. "
"65","software_development","Interactive Computer Graphics","About this course: Computer graphics can be a powerful tool for supporting visual problem solving, and interactivity plays a central role in harnessing the users' creativity. This course will introduce various interactive tools developed in computer graphics research field with their design rationales and algorithms. Examples include enhancements to graphical user interfaces, authoring tools for 2D drawings and 3D animations, and interactive computer-aided design systems. Rich live demonstrations and course assignments will give you insights and skills to design and implement such tools for your own problems.","Graphical user interfaces turn computer control problem into visual problem solving. The lectures of this module introduce five attempts to enhance current GUI operations such as scrolling interfaces, management of desktop icons, pointing on a large display, d... More%In this module we will dive deep into the world of 2D. We will discuss techniques for authoring 2D drawings and animations. Specifically, we will introduce interactive diagram beautification, pen-and-ink texture synthesis, shape manipulation, and dynamic illus... More%In this module, we rise up from 2D plane to 3D space, and discuss 3D geometric modeling methods. Topics introduced are; suggestive interface for architectural models, a sketch-based modeling system for freeform shapes, a curve-based shape control method, a flo... More%Starting from this module, we are shifting our attention towards simulating/crafting real objects and movements, which usually require intricate systems to deal with. As for this module, we will introduce clothing manipulation techniques, layer operations for ... More%In this module, we will discuss systems for supporting personal fabrication. In particular, we will introduce systems for designing plush toys, beadworks, chairs, and softly folded objects. In addition, interactive packing method is presented. %Nowadays, computers are indispensable for designing products; computers mediate the interaction between designers and products. But in most cases, designing and testing processes are separated, so that designers will not foresee the consequences of their desig... More%Computer-operated appliances, such as robotic cleaners, are gradually spreading to general households in recent years. These emerging technologies have opened the door to the new research area, i.e. research on the interactions between ordinary people and robo... More"
"66","software_development","Master of Computer Science - Data Science Applicant Community","About this course: With a full tuition under $20K, the University of Illinois Master of Computer Science - Data Science (MCS-DS) is the most affordable gateway to one of the most lucrative and fastest growing careers of the new millennium. The MCS-DS builds expertise in four core areas of computer science: data visualization, machine learning, data mining and cloud computing, in addition to building valuable skill sets in statistics and information science with courses taught in collaboration with the University’s Statistics Department and ISchool (ranked #1 among Library and Information Studies Schools.) 

The purpose of this community is to provide you with resources and support during the application process for the MCS-DS. You can post questions, discuss with fellow students who are also considering applying, and read about latest updates of the program. Admission officers from the University of Illinois will also be active in the forums and answer questions. 

If you have any questions/feedback please post them in the forums!","Welcome to the applicant forums for the Master of Computer Science in Data Science! Please find below helpful information on the program and the application process. If you have more questions you are very welcome to post them in the Discussion Forums.  "
"67","software_development","The Raspberry Pi Platform and Python Programming for the Raspberry Pi","About this course: The Raspberry Pi is a small, affordable single-board computer that you will use to design and develop fun and practical IoT devices while learning programming and computer hardware. In addition, you will learn how to set up up the Raspberry Pi environment, get a Linux operating system running, and write and execute some basic Python code on the Raspberry Pi. You will also learn how to use Python-based IDE (integrated development environments) for the Raspberry Pi and how to trace and debug Python code on the device. Please note that this course does not include discussion forums.","This module describes the basic functionality the Raspberry Pi B+ board. I'll describe how to set up the board, configure it, and use it. An important point differentiating Raspberry Pi from the Arduino platform which we have talked about previously is that Ra... More%The Raspberry Pi is typically installed with a Linux-based operating system, so we present the basics of Linux and its use. We describe some of the main features including navigating the file system and managing processes. We describe the text-based user inter... More%We present the basics of the Python programming language to prepare you for programming on the Raspberry Pi. Many languages can be used but Python is the most convenient for the Raspberry Pi because convenient APIs are provided for basic operations such as con... More%In this module we describe how to communicate with devices through the pins of the Raspberry Pi. We examine the RPi.GPIO library which provides Python functions used to access the pins. We discuss how to set up the pins, apply digital voltages, and generate Pu... More"
"68","software_development","Getting Started: Agile Meets Design Thinking","About this course: Despite everyone's good intentions, hard work and solid ideas, too many projects end up creating unneeded, unusable, and unsellable products. But it doesn't have to be this way. Agile and design thinking offer a different--and effective--approach to product development, one that results in valuable solutions to meaningful problems. In this course, you’ll learn how to determine what's valuable to a user early in the process--to frontload value--by focusing your team on testable narratives about the user and creating a strong shared perspective. 

We’ll show you how to:
- Explain key concepts and practices from the agile product development methodology
- Create a strong shared perspective and drive to value using personas and problem scenarios
- Diagnose what software to develop and why using a set of agile user stories and prototypes
- Facilitate narrative collaboration with user stories and prototypes 
- Allow for early testing and validation by analyzing and deciding on story backlogs

As a  Project Management Institute (PMI®) Registered Education Provider, the University of Virginia Darden School of Business has been approved by PMI to issue 25 professional development units (PDUs) for this course, which focuses on core competencies recognized by PMI. (Provider #2122) 

This course is supported by the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.","The practices that deliver excellent product are well understood, but rarely seen. In this module, we’ll identify what’s hard about creating excellent products and how agile can help. We'll begin with a discussion of the Agile Manifesto, introduce key agile te... More%The best way to avoid building something nobody wants is to start with somebody in mind. That ""somebody"" is a persona. Personas and problem scenarios tie development to the end user and help you drive toward a valuable solution. In this module, you’ll learn to... More%Creating software that meets users' need begins with understanding that user--and user stories are a tool that helps teams understand the end-user perspective.The agile user story is the focal point for just about everything that follows. This is where we diag... More%Now that you've ""discovered"" your user, you'll write your user story--and you'll make it great by layering in details. In this module, you'll learn to create detailed, specific user stories to anchor your project. %First, use this week to finish up your User Story Assignment and complete peer reviews.Then, if you're interested in IT, let's talk process. What? Process? While you’ve learned that the agile manifesto explicitly reacted to primary/excessive use of tools and p... More"
"69","software_development","Fundamentals of Computer Architecture","About this course: This course introduces several topics for the learners about the fundamentals of computer architecture. After completing this course, the students will have the basic knowledge of:
•	Computer Performance and Benchmarks
•	Summarizing Performance
•	Amdahl’s law
•	Introduction to Embedded Systems

Learning Outcome:
•	After completing this course, the learners will have the tools to evaluated different computer architectures as well as the software executing on them.
•	The learners of this course will have knowledge about modern microprocessors and the design techniques used to increase their performance.

Skills Gained:
•	Basic skills to evacuate the performance of computer systems","This week we first present a definition of computer architecture and the overall objectives of this specialization. Then we will learn how to measure and summarize performance, and about Amdahl's famous law. Finally we will give an introduction to embedded sys... More%The set of instructions supported by a processor is called its Instruction Set Architecture (ISA). This week we will learn the MIPS64 ISA, which will be used for code examples throughout this specialization. We will also learn some basic code optimizations tha... More%This week we will learn about pipelining, which is a technique that overlaps the execution of several instructions. Pipelining is a key implementation technique to make CPUs fast. Using the canonical 5-stage pipeline for illustration, we will learn about pipel... More%This week we extend the canonical 5-stage pipeline with multicycle operations; operations that require multiple cycles to execute. Thereafter we learn how instructions can be scheduled in order to reduce the number of pipeline stalls. %To bridge the gap between processor speed and memory speed, modern processors employ caches. Caches are high-speed memories that contain recently used code and data. This week we will learn the basics of caches (how they are organized, how data is found in the... More"
"70","software_development","Control of Mobile Robots","About this course: Control of Mobile Robots is a course that focuses on the application of modern control theory to the problem of making robots move around in safe and effective ways. The structure of this class is somewhat unusual since it involves many moving parts - to do robotics right, one has to go from basic theory all the way to an actual robot moving around in the real world, which is the challenge we have set out to address through the different pieces in the course."," %The description goes here % % % % % "
"71","software_development","Digital Product Management: Modern Fundamentals","About this course: Not so long ago, the job of product manager was about assessing market data, creating requirements, and managing the hand-off to sales/marketing. Maybe you’d talk to a customer somewhere in there and they’d tell you what features they wanted. But companies that manage product that way are dying.

Being a product person today is a new game, and product managers are at the center of it. Today, particularly if your product is mostly digital, you might update it several times a day. Massive troves of data are available for making decisions and, at the same time, deep insights into customer motivation and experience are more important than ever. The job of the modern product manager is to charter a direction and create a successful working environment for all the actors involved in product success.  It’s not a simple job or an easy job, but it is a meaningful job where you’ll be learning all the time. 

This course will help you along your learning journey and prepare you with the skills and perspective you need to:

Create the actionable focus to successfully manage your product (week 1)
Focus your work using modern product management methods (week 2)
Manage new products and explore new product ideas (week 3)
Manage and amplify existing products (week 4)

This course is ideal for current product or general  managers interested in today's modern product management methods.

This course was developed with the generous support of the Batten Institute at UVA’s Darden School of Business. The Batten Institute’s mission is to improve the world through entrepreneurship and innovation: www.batteninstitute.org.","As a product manager, you and your team will always have more ideas and more requests than you can possibly manage. Making matters still more complicated, part of your job is to develop and then ‘sell’ a particular view of what should happen with your product ... More%You’ve probably heard that the days of ‘build it and they will come’ are over. But what exactly should you be doing instead? There’s no shortage of material out there on how to be innovative--but you only have so much time. This week we’ll step through the met... More%Something on the order of 9 out of 10 new products fail. Those sound like daunting odds, but through disciplined exploration an effective PM knows how to make even the improbable probable. This week we’ll show you how to apply your understanding of modern PM m... More%If you want a product that does more than make a big splash, you’ll need to apply what you’ve learned here every week, every sprint to keep that product fresh and relevant. It’s not hard to let a great product get sidetracked and become irrelevant to its users... More"
"72","software_development","Algorithms on Graphs","About this course: If you have ever used a navigation service to find optimal route and estimate time to destination, you've used algorithms on graphs. Graphs arise in various real-world situations as there are road networks, computer networks and, most recently, social networks! If you're looking for the fastest time to get to work, cheapest way to connect set of computers into a network or efficient algorithm to automatically find communities and opinion leaders in Facebook, you're going to work with graphs and algorithms on graphs.

In this course, you will first learn what a graph is and what are some of the most important properties. Then you'll learn several ways to traverse graphs and how you can do useful things while traversing the graph in some order. We will then talk about shortest paths algorithms — from the basic ones to those which open door for 1000000 times faster algorithms used in Google Maps and other navigational services. You will use these algorithms if you choose to work on our Fast Shortest Routes industrial capstone project. We will finish with minimum spanning trees which are used to plan road, telephone and computer networks and also find applications in clustering and approximate algorithms.","Graphs arise in various real-world situations as there are road networks, computer networks and, most recently, social networks! If you're looking for the fastest time to get to work, cheapest way to connect set of computers into a network or efficient algorit... More%This week we continue to study graph decomposition algorithms, but now for directed graphs. %In this module you will study algorithms for finding Shortest Paths in Graphs. These algorithms have lots of applications. When you launch a navigation app on your smartphone like Google Maps or Yandex.Navi, it uses these algorithms to find you the fastest rou... More%This week we continue to study Shortest Paths in Graphs. You will learn Dijkstra's Algorithm which can be applied to find the shortest route home from work. You will also learn Bellman-Ford's algorithm which can unexpectedly be applied to choose the optimal wa... More%In this module, we study the minimum spanning tree problem. We will cover two elegant greedy algorithms for this problem: the first one is due to Kruskal and uses the disjoint sets data structure, the second one is due to Prim and uses the priority queue data ... More%In this module, you will learn Advanced Shortest Paths algorithms that work in practice 1000s (up to 25000) of times faster than the classical Dijkstra's algorithm on real-world road networks and social networks graphs. You will work on a Programming Project b... More"
"73","software_development","Java Programming: Arrays, Lists, and Structured Data","About this course: Build on the software engineering skills you learned in “Java Programming: Solving Problems with Software” by learning new data structures. Use these data structures to build more complex programs that use Java’s object-oriented features. At the end of the course you will write an encryption program and a program to break your encryption algorithm.

After completing this course, you will be able to:
1. Read and write data from/to files;
2. Solve problems involving data files;
3. Perform quantitative analyses of data (e.g., finding maximums, minimums, averages); 
4. Store and manipulate data in an array or ArrayList;
5. Combine multiple classes to solve larger problems;
6. Use iterables and collections (including maps) in Java.","Welcome to “Java Programming: Arrays, Lists, and Structured Data”! We are excited that you are starting our course to learn how to write programs in Java, one of the most popular programming languages in the world. In this introductory module, you will hear an... More%In this module, you will learn about the basics of cryptography, the science of keeping information private and secure. You will learn about simpler cryptographic systems, which were used from the Roman Empire through the early 1900s. You will learn how to imp... More%After completing this module, you will be able (1) to program a word frequency counter to analyze any input text file, (2) to select and substitute words from a list into a document template using both ArrayList and HashMap, (3) to create new lists to use in t... More%In this module, you will learn about how web server logs store information about visitors to a website, and you will write programs to access information like user IP address, date and time of access, and more. Using Java programs you write in this module, you... More%In this module, you will develop a program to break the Vigenère Cipher, a more complex version of the Caesar Cipher. You will improve your program in three stages: first decrypting messages where you know the language and key length, then adding the capabilit... More"
"74","software_development","Introduction to UI Design","About this course: In this course, you will gain an understanding of the critical importance of user interface design. You will also learn industry-standard methods for how to approach the design of a user interface and key theories and frameworks that underlie the design of most interfaces you use today.

Through a series of case studies on commercial systems - many of which you likely use on a regular basis - we will illustrate the benefits of good design. We will also demonstrate how the costs of bad design can often be severe (in user experience, money, and even human lives).

You will then gain a high-level understanding of the user-interface design process. You will be introduced to common design scenarios - e.g. improving on existing designs and starting a new design from scratch - and the general design processes that tend to be used for each scenario.

Finally, we will begin introducing the large body of existing knowledge on design by providing overviews of core user interface design theories and concepts. This key foundational information will help you avoid “reinventing the wheel” when you are designing your interfaces in this specialization."," % % % "
"75","software_development","Introduction to Software Product Management","About this course: This course highlights the importance and role of software product management. It also provides an overview of the specialization, as well as its goals, structure, and expectations. The course explains the value of process, requirements, planning, and monitoring in producing better software. 
 
Upon successful completion of this course, you will be able to:

 - Relate software product management to better software products
 - Recognize the role of a software product manager
 - Reflect on how Agile principles will improve your own projects","Are you ready to start? Our starting point will be the goal of software product management, and that is to build better software. We will delve into the role of ​the software product manager, where you will hear from software industry representatives. ​ This m... More%Welcome to the second half of Introduction to Software Product Management. In this module you will learn the philosophy, core values,​ and principles of Agile software development. ​The​ Agile philosophy has reshaped modern software development. ​ Challenge yo... More"
"76","software_development","Development of Real-Time Systems","About this course: This course is intended for the Master's student and computer engineer who likes practical programming and problem solving!
After completing this course, you will have the knowledge to plan and set-up a real-time system both on paper and in practice.

The course centers around the problem of achieving timing correctness in embedded systems, which means to guarantee that the system reacts within the real-time requirements.
Examples of such systems include airbags, emergency breaks, avionics, and also multi-media systems like video playback and QoS in web servers.

The course teaches how to plan real-time systems in theory using established mathematical proofs and how to implement them in practice by using the most common scheduling methods.
We also learn and how to program the system in the C language using the FreeRTOS real-time kernel.
Finally we have a look at the future of real-time systems namely multi-core real-time systems!

This course focus on the learn-by-doing approach with many examples and real-world programming assignments.
We have 5 modules, each with a gentle graded quiz in the end and one peer reviewed programming assignment.
In case you have no experience with C programming, please check you a practical course like:
https://www.coursera.org/learn/arduino-platform

The course is actually quite fun!
-Simon Holmbacka / Åbo Akademi University

Check out our whole curriculum: https://research.it.abo.fi/","Here is where it all starts! We will make a brave attempt to start your future career in real-time systems! This week starts by learning the basic building stones in real-time systems and the system parameters required to successfully construct a real-time sys... More%In this week we start to actually do some scheduling. We firstly have a look at the simplest type of scheduler – the clock driven scheduler. After this we deepen our learning with the fixed priority scheduler and the monotonic schedulers. We learn how the prio... More%In the previous week we learned the limitations of the total-utilization method and the Urm method. We start this week off by extending these tests to tasks with short response times. The new method is also, as usual, used in practice! We then focus on improvi... More%All things are easy and nice when not caring about non-periodic jobs. When including non-periodic jobs, the schedulers must take these into account to make a feasible schedule, which we learn this week. The problem is that a non-periodic job can arrive at any ... More%This week is what we all have been waiting for! We will deepen our learning of FreeRTOS, its kernel and the functionalities. We demonstrate the importance of predictable computer architectures for example when determining the context switch and factors influen... More"
"77","software_development","Audio Signal Processing for Music Applications","About this course: In this course you will learn about audio signal processing methodologies that are specific for music and of use in real applications. We focus on the spectral processing techniques of relevance for the description and transformation of sounds, developing the basic theoretical and practical knowledge with which to analyze, synthesize, transform and describe audio signals in the context of music applications.

The course is based on open software and content. The demonstrations and programming exercises are done using Python under Ubuntu, and the references and materials for the course come from open online repositories. We are also distributing with open licenses the software and materials developed for the course.","Introduction to the course, to the field of Audio Signal Processing, and to the basic mathematics needed to start the course. Introductory demonstrations to some of the software applications and tools to be used. Introduction to Python and to the sms-tools pac... More%The Discrete Fourier Transform equation; complex exponentials; scalar product in the DFT; DFT of complex sinusoids; DFT of real sinusoids; and inverse-DFT. Demonstrations on how to analyze a sound using the DFT; introduction to Freesound.org. Generating sinuso... More% Linearity, shift, symmetry, convolution; energy conservation and decibels; phase unwrapping; zero padding; Fast Fourier Transform and zero-phase windowing; and analysis/synthesis. Demonstration of the analysis of simple periodic signals and of complex sounds;... More%STFT equation; analysis window; FFT size and hop size; time-frequency compromise; inverse STFT. Demonstration of tools to compute the spectrogram of a sound and on how to analyze a sound using them. Implementation of the windowing of sounds using Python and pr... More%Sinusoidal model equation; sinewaves in a spectrum; sinewaves as spectral peaks; time-varying sinewaves in spectrogram; sinusoidal synthesis. Demonstration of the sinusoidal model interface of the sms-tools package and its use in the analysis and synthesis of ... More%Harmonic model equation; sinusoids-partials-harmonics; polyphonic-monophonic signals; harmonic detection; f0-detection in time and frequency domains. Demonstrations of pitch detection algorithm, of the harmonic model interface of the sms-tools package and of i... More%Stochastic signals; stochastic model; stochastic approximation of sounds; sinusoidal/harmonic plus residual model; residual subtraction; sinusoidal/harmonic plus stochastic model; stochastic model of residual. Demonstrations of the stochastic model, harmonic p... More%Filtering and morphing using the short-time Fourier transform; frequency and time scaling using the sinusoidal model; frequency transformations using the harmonic plus residual model; time scaling and morphing using the harmonic plus stochastic model. Demonstr... More%Extraction of audio features using spectral analysis methods; describing sounds, sound collections, music recordings and music collections. Clustering and classification of sounds. Demonstration of various plugins from SonicVisualiser to describe sound and mus... More%Audio signal processing beyond this course. Beyond audio signal processing. Review of the course topics. Where to learn more about the topics of this course. Presentation of MTG-UPF. Demonstration of Dunya, a web browser to explore several audio music collecti... More"
"78","software_development","Mastering the Software Engineering Interview","About this course: You’ve hit a major milestone as a computer scientist and are becoming a capable programmer. You now know how to solve problems, write algorithms, and analyze solutions; and you have a wealth of tools (like data structures) at your disposal.  You may now be ready for an internship or (possibly) an entry-level software engineering job.  But can you land the internship/job?  It depends in part on how well you can solve new technical problems and communicate during interviews.  How can you get better at this?  Practice!  

With the support of Google’s recruiting and engineering teams we’ve provided tips, examples, and practice opportunities in this course that may help you with a number of tech companies.  We’ll assist you to organize into teams to practice.  Lastly, we’ll give you basic job search advice, and tips for succeeding once you’re on the job.","Welcome to our course on effectively communicating your technical abilities.  This course focuses on landing a technical job and excelling in a technical role.  To succeed in job interviews, you’ll need to be able to confidently articulate your ability to solv... More%Now that you’ve gotten warmed up, it’s time to practice your coding skills.  One of the things you’ll almost certainly be asked to do during a technical phone interview is to code up a solution to a problem in a shared text document (e.g. Google doc) while you... More%This week, we’re going to focus on how to speak about your experiences working on projects and how to speak about the technical problems you’ve experienced and how you’ve solved those problems.  We’ll introduce the STAR (Situation, Task, Action, Results) model... More%As we saw in week 2, coding on the fly can be a difficult task!  In this final week of the course we’ll revisit the skill of live problem solving by looking at how to solve more challenging algorithmic problems (and write the code associated with the solution)... More"
"79","software_development","Java Programming: Principles of Software Design","About this course: Solve real world problems with Java using multiple classes. Learn how to create programming solutions that scale using Java interfaces. Recognize that software engineering is more than writing code - it also involves logical thinking and design. By the end of this course you will have written a program that analyzes and sorts earthquake data, and developed a predictive text generator.

After completing this course, you will be able to:
1. Use sorting appropriately in solving problems;
2. Develop classes that implement the Comparable interface;
3. Use timing data to analyze empirical performance;
4. Break problems into multiple classes, each with their own methods;
5. Determine if a class from the Java API can be used in solving a particular problem;
6. Implement programming solutions using multiple approaches and recognize tradeoffs;
7. Use object-oriented concepts including interfaces and abstract classes when developing programs;
8. Appropriately hide implementation decisions so they are not visible in public methods; and
9. Recognize the limitations of algorithms and Java programs in solving problems.
10. Recognize standard Java classes and idioms including exception-handling, static methods, java.net, and java.io packages.","Welcome to “Java Programming: Principles of Software Design”! We are excited that you are starting our course to learn how to write programs in Java, one of the most popular programming languages in the world. In this introductory module, you will hear an over... More%In this module, we will introduce a data set containing details about earthquakes around the world. You will learn how to pull this data into a program, search through the data, and filter the data based on desired criteria. By the end of this module, you will... More%In this module, you will continue using real earthquake data to explore several sorting algorithms. You will learn how to implement a selection sort and a bubble sort, then be introduced to a Java method Collections.sort, which sorts with much greater efficien... More%In this module, you will explore some of the underlying concepts of predictive text. The first lesson will introduce random character generation and then how to train the character selection based on an input text. The second lesson will extend this concept to... More%As you reach the end of this series, you may wish to extend your Java experience to tools beyond those provided here. This module will cover some of the Java basic information that is needed to program without BlueJ or the edu.duke library. After completing th... More"
"80","software_development","Front-End JavaScript Frameworks: Angular","About this course: This course concentrates mainly on Javascript based front-end frameworks, and in particular the Angular framework (Currently Ver. 4.x). This course will use Typescript for developing Angular application. Typescript features will be introduced in the context of Angular as part of the exercises. You will also get an introduction to the use of Angular Material and Angular Flex-Layout for responsive UI design. You will be introduced to various aspects of Angular including components, directives and services. You will learn about data binding, Angular router and its use for developing single-page applications. You will also learn about designing both template-driven forms and reactive forms. A quick introduction to Observables, reactive programming and RxJS in the context of Angular is included. You will then learn about Angular support for client-server communication and the use of REST API on the server side. You will use Restangular for communicating with a server supporting the REST API. A quick tour through Angular animation support and Angular testing rounds off the course. You must have either completed the previous course in the specialization on Bootstrap 4, or have a working knowledge of front end web-UI frameworks to be able to navigate this course. Also a good working knowledge of JavaScript, especially ES 5 is strongly recommended.

At the end of this course you will:

- Be familiar with client-side Javascript frameworks and the Angular framework
- Be able to implement single page applications in Angular
- Be able to use various Angular features including directives, components and services
- Be able to implement a functional front-end web application using Angular
- Be able to use Angular Material and Angular Flex-Layout for designing responsive Angular applications
- Be able to use Observables and RxJS in the context of Angular applications","In this module we get a quick introduction to front-end JavaScript frameworks, followed by an introduction to Angular. We will also learn about Angular components and their templates. %In this week, you learn about data binding in Angular. You will learn how to design basic services. You will learn about Angular router and its use in designing single page applications. You will also learn about single page applications and use Angular Router... More%In this module we study Angular support for forms and form validation. Both template-driven forms and reactive forms will be introduced. You will also learn about Promises. Then you will learn briefly about reactive programming, RxJs and its use in Angular. %In this module you will explore client-server communication using both Angular HTTP module and the REST API. You will get a brief introduction to animation support in Angular and create a custom attribute directive. You will also learn about testing, building ... More"
"81","software_development","Data Manipulation at Scale: Systems and Algorithms","About this course: Data analysis has replaced data acquisition as the bottleneck to evidence-based decision making --- we are drowning in it.  Extracting knowledge from large, heterogeneous, and noisy datasets requires not only powerful computing resources, but the programming abstractions to use them effectively.  The abstractions that emerged in the last decade blend ideas from parallel databases, distributed systems, and programming languages to create a new class of scalable data analytics platforms that form the foundation for data science at realistic scales.

In this course, you will learn the landscape of relevant systems, the principles on which they rely, their tradeoffs, and how to evaluate their utility against your requirements. You will learn how practical systems were derived from the frontier of research in computer science and what systems are coming on the horizon.   Cloud computing, SQL and NoSQL databases, MapReduce and the ecosystem it spawned, Spark and its contemporaries, and specialized systems for graphs and arrays will be covered.

You will also learn the history and context of data science, the skills, challenges, and methodologies the term implies, and how to structure a data science project.  At the end of this course, you will be able to:

Learning Goals: 
1. Describe common patterns, challenges, and approaches associated with data science projects, and what makes them different from projects in related fields.
2. Identify and use the programming models associated with scalable data manipulation, including relational algebra, mapreduce, and other data flow models.
3. Use database technology adapted for large-scale analytics, including the concepts driving parallel databases, parallel query processing, and in-database analytics
4. Evaluate key-value stores and NoSQL systems, describe their tradeoffs with comparable systems, the details of important examples in the space, and future trends.
5. “Think” in MapReduce to effectively write algorithms for systems including Hadoop and Spark.  You will understand their limitations, design details, their relationship to databases, and their associated ecosystem of algorithms, extensions, and languages.
write programs in Spark
6. Describe the landscape of specialized Big Data systems for graphs, arrays, and streams","Understand the terminology and recurring principles associated with data science, and understand the structure of data science projects and emerging methodologies to approach them.    Why does this emerging field exist?  How does it relate to other fields?  Ho... More%Relational Databases are the workhouse of large-scale data management.  Although originally motivated by problems in enterprise operations, they have proven remarkably capable for analytics as well.  But most importantly, the principles underlying relational d... More%The MapReduce programming model (as distinct from its implementations) was proposed as a simplifying abstraction for parallel manipulation of massive datasets, and remains an important concept to know when using and evaluating modern big data platforms.   %NoSQL systems are purely about scale rather than analytics, and are arguably less relevant for the practicing data scientist.  However, they occupy an important place in many practical big data platform architectures, and data scientists need to understand the... More%Graph-structured data are increasingly common in data science contexts due to their ubiquity in modeling the communication between entities: people (social networks), computers (Internet communication), cities and countries (transportation networks), or corpor... More"
"82","software_development","Software Processes and Agile Practices","About this course: This course delves into a variety of processes to structure software development. It also covers the foundations of core Agile practices, such as Extreme Programming and Scrum.

Upon successful completion of this course, you will be able to:

- Distinguish between different process models for organizing software production.
- Gauge the applicability of process models for a software development project.
- Apply the fundamentals of Agile software development and management practices.","Are you someone who likes to see the big-picture? Being a forward thinker who knows what’s coming next is an invaluable trait as a software product manager. This module will prepare you to become this asset for your team. A software process organizes developme... More%Ready to dive a little deeper? This module will familiarize you with a wide variety of software process models from throughout history. You will learn about basic software process models, like the Waterfall model and The Unified Process. These fundamental proc... More%Do you want to help developers reach their full potential? Do you want to impress clients by delivering a great product on-schedule and on-budget?  Then this module is the place for you! In this module, you will learn some Agile methodologies that are practice... More%Almost there! In this last module, we will dive into Lean Software Development and Kanban. Being the most complex tools which we will cover in this course makes them the “spike-driving machines” from our railroad-building analogy. Lean and Kanban are a cumulat... More"
"83","software_development","C++ For C Programmers, Part B","About this course: This course is for experienced C programmers who want to program in C++. The examples and exercises require a basic understanding of algorithms and object-oriented software.","This module looks at the architecture of the Standard Template Library. It is especially important to understand how iterators are used to access container to produce highly efficient generic algorithms.  The module also includes the important new style of fun... More%This module shows how Hex can be played as a game on a graph. This involves its representation as an undirected graph in C++. The module explores the inheritance logic and syntax of C++. A principal example is the base class student and a derived class grad_st... More%This module explains Min-Max and the Alpha-Beta algorithm for game playing. Its programming topics include C++ 11 Move semantics and a detailed example of referential garbage collection. %This module shows how to use Monte Carlo evaluation in complex games such as Hex and Go. This had led top championship level play in both these games. The module discusses C++ assertions and exceptions for error handling and the new C++ 11 feature static asser... More%This module contains three practice exams (which you can take as many times as you'd like) and the final exam, which is worth X% of your grade in this course.  "
"84","software_development","Cluster Analysis in Data Mining","About this course: Discover the basic concepts of cluster analysis, and then study a set of typical clustering methodologies, algorithms, and applications. This includes partitioning methods such as k-means, hierarchical methods such as BIRCH, and density-based methods such as DBSCAN/OPTICS. Moreover, learn methods for clustering validation and evaluation of clustering quality. Finally, see examples of cluster analysis in applications.","You will become familiar with the course, your classmates, and our learning environment. The orientation will also help you obtain the technical skills required for the course. % % % % %In the course conclusion, feel free to share any thoughts you have on this course experience. "
"85","software_development","An Introduction to Interactive Programming in Python (Part 2)","About this course: This two-part course is designed to help students with very little or no computing background learn the basics of building simple interactive applications. Our language of choice, Python, is an easy-to learn, high-level computer language that is used in many of the computational courses offered on Coursera. To make learning Python easy, we have developed a new browser-based programming environment that makes developing interactive applications in Python simple. These applications will involve windows whose contents are graphical and respond to buttons, the keyboard and the mouse.

In part 2 of this course, we will introduce more elements of programming (such as list, dictionaries, and loops) and then use these elements to create games such as Blackjack.  Part 1 of this class will culminate in building a version of the classic arcade game ""Asteroids"".  Upon completing this course, you will be able to write small, but interesting Python programs.  The next course in the specialization will begin to introduce a more principled approach to writing programs and solving computational problems that will allow you to write larger and more complex programs.","Read mouse input, learn about list methods and dictionaries, draw images %Learn the basics of object-oriented programming in Python using classes, work with tiled images %	Understand the math of acceleration and friction, work with sprites, add sound to your game %Learn about sets in Python, compute collisions between sprites, animate sprites "
"86","software_development","Advanced Data Structures in Java","About this course: How does Google Maps plan the best route for getting around town given current traffic conditions?  How does an internet router forward packets of network traffic to minimize delay?  How does an aid group allocate resources to its affiliated local partners?

To solve such problems, we first represent the key pieces of data in a complex data structure. In this course, you’ll learn about data structures, like graphs, that are fundamental for working with structured real world data.  You will develop, implement, and analyze algorithms for working with this data to solve real world problems.   In addition, as the programs you develop in this course become more complex, we’ll examine what makes for good code and class hierarchy design so that you can not only write correct code, but also share it with other people and maintain it in the future.

The backbone project in this course will be a route planning application.  You will apply the concepts from each Module directly to building an application that allows an autonomous agent (or a human driver!) to navigate its environment.  And as usual we have our different video series to help tie the content back to its importance in the real world and to provide tiered levels of support to meet your personal needs.","Welcome to the first week in the third course of our Intermediate Java Programming Specialization.  Once again start with introductions, and in particular introduce the unique structure of this course.  Also, if you're not sure if this course is right for you,... More%This week we'll start getting technical, introducing you to the central data structure in the course: Graphs.  You'll learn the basics and then have a chance to dive in a little deeper into the code, getting ready to start building that Google Maps-like applic... More%This week you'll get the backbone of your map search engine up and running.  In previous courses, including the previous courses in this specialization, you've probably been given most of the classes you needed to complete the assignments.  But learning how to... More%In the past two weeks, you've developed a strong understanding of how to design classes to represent a graph and how to use a graph to represent a map.  In this week, you'll add a key feature of map data to our graph representation -- distances -- by adding we... More%In this week, we'll go beyond the problem of finding a path between two points, and focus on problems requiring overall path planning.  For example, if you wanted to go on errands and visit 6 different locations before returning home, what is the optimal route... More%You made it to the last week of our course!  We're glad you're still with us.  As a reward, there's no new content to learn this week.  Instead you'll get the opportunity to extend your project in a direction of your own choosing.  We hope you've got some neat... More"
"87","software_development","Pattern Discovery in Data Mining","About this course: Learn the general concepts of data mining along with basic methodologies and applications. Then dive into one subfield in data mining: pattern discovery. Learn in-depth concepts, methods, and applications of pattern discovery in data mining. We will also introduce methods for data-driven phrase mining and some interesting applications of pattern discovery. This course provides you the opportunity to learn skills and content to practice and engage in scalable pattern discovery methods on massive transactional data, discuss pattern evaluation measures, and study methods for mining diverse kinds of patterns, sequential patterns, and sub-graph patterns.","The course orientation will get you familiar with the course, your instructor, your classmates, and our learning environment. %Module 1 consists of two lessons. Lesson 1 covers the general concepts of pattern discovery. This includes the basic concepts of frequent patterns, closed patterns, max-patterns, and association rules. Lesson 2 covers three major approaches for mining frequent... More%Module 2 covers two lessons: Lessons 3 and 4.  In Lesson 3, we discuss pattern evaluation and learn what kind of interesting measures should be used in pattern analysis. We show that the support-confidence framework is inadequate for pattern evaluation, and ev... More%Module 3 consists of two lessons: Lessons 5 and 6.   In Lesson 5, we discuss mining sequential patterns.   We will learn several popular and efficient sequential pattern mining methods, including an Apriori-based sequential pattern mining method, GSP; a vertic... More%Module 4 consists of two lessons: Lessons 7 and 8.   In Lesson 7, we study mining quality phrases from text data as the second kind of pattern mining application. We will mainly introduce two newer methods for phrase mining: ToPMine and SegPhrase, and show fre... More"
"88","software_development","Advanced R Programming","About this course: This course covers advanced topics in R programming that are necessary for developing powerful, robust, and reusable data science tools. Topics covered include functional programming in R, robust error handling, object oriented programming, profiling and benchmarking, debugging, and proper design of functions. Upon completing this course you will be able to identify and abstract common data analysis tasks and to encapsulate them in user-facing functions. Because every data science environment encounters unique data challenges, there is always a need to develop custom software specific to your organization’s mission. You will also be able to define new data types in R and to develop a universe of functionality specific to those data types to enable cleaner execution of data science tasks and stronger reusability within a team.","This course covers advanced topics in R programming that are necessary for developing powerful, robust, and reusable data science tools. Topics covered include functional programming in R, robust error handling, object oriented programming, profiling and bench... More%This module begins with control structures in R for controlling the logical flow of an R program. We then move on to functions, their role in R programming, and some guidelines for writing good functions. %Functional programming is a key aspect of R and is one of R's differentiating factors as a data analysis language. Understanding the concepts of functional programming will help you to become a better data science software developer. In addition, we cover erro... More%Debugging tools are useful for analyzing your code when it exhibits unexpected behavior. We go through the various debugging tools in R and how they can be used to identify problems in code. Profiling tools allow you to see where your code spends its time and ... More%Object oriented programming allows you to define custom data types or classes and a set of functions for handling that data type in a way that you define. R has a three different methods for implementing object oriented programming and we will cover them in th... More"
"89","software_development","Algorithmic Thinking (Part 1)","About this course: Experienced Computer Scientists analyze and solve computational problems at a level of abstraction that is beyond that of any particular programming language.  This two-part course builds on the principles that you learned in our Principles of Computing course and is designed to train students in the mathematical concepts and process of ""Algorithmic Thinking"", allowing them to build simpler, more efficient solutions to real-world computational problems.

In part 1 of this course, we will study the notion of algorithmic efficiency and consider its application to several problems from graph theory.  As the central part of the course, students will implement several important graph algorithms in Python and then use these algorithms to analyze two large real-world data sets.  The main focus of these tasks is to understand interaction between the algorithms and the structure of the data sets being analyzed by these algorithms.

Recommended Background - Students should be comfortable writing intermediate size  (300+ line) programs in Python and have a basic understanding of searching, sorting, and recursion. Students should also have a solid math background that includes algebra, pre-calculus and a familiarity with the math concepts covered in ""Principles of Computing"".","What is Algorithmic Thinking?, class structure, graphs, brute-force algorithms %Graph representations, plotting, analysis of citation graphs %Asymptotic analysis, ""big O"" notation, pseudocode, breadth-first search %Connected components, graph resilience, and analysis of computer networks "
"90","software_development","Software Architecture for the Internet of Things","About this course: This course will teach you how to design futureproof systems that meet the requirements of IoT systems: systems that are secure, interoperable, modifiable and scalable. Moreover, you'll learn to apply best-in-class software architecture methods to help you design complex IoT and other applications. Lastly, you'll come to understand the business impact of the technical decisions that you make as an IoT system architect.

You'll learn all about software architecture in the next 5 weeks! In the first week, you'll discover why having a well-designed architecture is important and which challenges you might come across while developing your architecture. By the end of the second week, you'll already be able to write your own requirements! In the third and fourth week, you will learn how to correctly write quality attributes and quality attribute scenarios for a specific case. In the last week, you'll learn to describe your own patterns and tactics and see how they're used in an Android framework.","This module will introduce you to the world of software architecture. We'll define what SA actually is, why it is important and talk about some of the challenges faced in modern Software Engineering. This course is also part of a Blended Master Programme in In... More%Creating good software starts with a solid understanding of the requirements that will have an influence on the software. In this module, we will discuss both functional and non-functional requirements, such as quality attributes, business requirements and con... More%Up till now, we have been talking about quality in an informal way. However, if you want to build systems that support the required qualities you will need a way to express those quality attributes and understand how you can achieve them. After this module you... More%In the fourth week, we will explain how architectural tactics can help you create a software architecture that achieves the predefined requirements. This is what needs to be done in step three of the ADD - remember? We'll start of by learning about the differe... More%In this last week, we will explain how architectural patterns can help you create a software architecture that achieves the predefined requirements. Patterns are closely related to tactics, as we saw last week. First, we'll look at different types of patterns.... More"
"91","software_development","Advanced Algorithms and Complexity","About this course: You've learned the basic algorithms now and are ready to step into the area of more complex problems and algorithms to solve them. Advanced algorithms build upon basic ones and use new ideas. We will start with networks flows which are used in more typical applications such as optimal matchings, finding disjoint paths and flight scheduling as well as more surprising ones like image segmentation in computer vision. We then proceed to linear programming with applications in optimizing budget allocation, portfolio optimization, finding the cheapest diet satisfying all requirements and many others. Next we discuss inherently hard problems for which no exact good solutions are known (and not likely to be found) and how to solve them in practice. We finish with a soft introduction to streaming algorithms that are heavily used in Big Data processing. Such algorithms are usually designed to be able to process huge datasets without being able even to store a dataset.","Network flows show up in many real world situations in which a good needs to be transported across a network with limited capacity. You can see it when shipping goods across highways and routing packets across the internet. In this unit, we will discuss the ma... More%Linear programming is a very powerful algorithmic tool. Essentially, a linear programming problem asks you to optimize a linear function of real variables constrained by some system of linear inequalities. This is an extremely versatile framework that immediat... More%Although many of the algorithms you've learned so far are applied in practice a lot, it turns out that the world is dominated by real-world problems without a known provably efficient algorithm. Many of these problems can be reduced to one of the classical pro... More%After the previous module you might be sad: you've just went through 5 courses in Algorithms only to learn that they are not suitable for most real-world problems. However, don't give up yet! People are creative, and they need to solve these problems anyway, s... More%In most previous lectures we were interested in designing algorithms with fast (e.g. small polynomial) runtime, and assumed that the algorithm has random access to its input, which is loaded into memory. In many modern applications in big data analysis, howeve... More"
"92","software_development","Applied Text Mining in Python","About this course: This course will introduce the learner to text mining and text manipulation basics. The course begins with an understanding of how text is handled by python, the structure of text both to the machine and to humans, and an overview of the nltk framework for manipulating text. The second week focuses on common manipulation needs, including regular expressions (searching for text), cleaning text, and preparing text for use by machine learning processes. The third week will apply basic natural language processing methods to text, and demonstrate how text classification is accomplished. The final week will explore more advanced methods for detecting the topics in documents and grouping them by similarity (topic modelling). 

This course should be taken after: Introduction to Data Science in Python, Applied Plotting, Charting & Data Representation in Python, and Applied Machine Learning in Python.",NA
"93","software_development","Client Needs and Software Requirements ","About this course: This course covers practical techniques to elicit and express software requirements from client interactions.  

Upon successful completion of this course, you will be able to:

 - Create clear requirements to drive effective software development
 - Visualize client needs using low-fidelity prototypes
 - Maximize the effectiveness of client interactions
 - Adapt to changing product requirements","Welcome to the first module! In this module, you will become familiar with software requirements and some issues surrounding them. You will learn what a software requirement is, including the different types of requirements. Then, you will learn how to deal wi... More%A major duty of a software product manager is eliciting and expressing requirements from your client. This module will walk you through the basics of client interactions and requirements elicitation and expression. You will learn how to create the best product... More%Explore the many ways in which software requirements can be represented. In this module, you will learn about the most popular means of expressing requirements in the industry today: the user story. You will learn how acceptance tests help to verify the storie... More%To this point, you have learned how to effectively elicit, express, and prioritize requirements. It’s now time to ensure clarity. This last module will explore the activity of analyzing requirements in greater detail. Analyzing creates clear, actionable, requi... More"
"94","software_development","Essential Cloud Infrastructure: Foundation","About this course: This 1-week, accelerated on-demand course introduces participants to the comprehensive and flexible infrastructure and platform services provided by Google Cloud Platform. Through a combination of video lectures, demos, and hands-on labs, participants explore and deploy solution elements, including infrastructure components such as networks, virtual machines and applications services. You will learn how to use the Google Cloud Platform through the console and Cloudshell. You'll also learn about the role of a cloud architect, approaches to infrastructure design, and virtual networking configuration with Cloud Virtual Networks (CVN), Projects, Networks, Subnetworks, IP addresses, Routes, and Firewall rules.

Prerequisites: 
To get the most out of this course, participants should have:
• Completed Google Cloud Platform Fundamentals (Core Infrastructure or AWS Professionals.) or have equivalent experience
• Basic proficiency with command-line tools and Linux operating system environments
• Systems Operations experience including deploying and managing applications, either on-premises or in a public cloud environment"," % % % "
"95","software_development","Principles of Game Design","About this course: You have a great idea for a game. Turning that idea into a reality isn't just about knowing the tools. In this course you will practice moving from game concept through design documentation, prototyping and testing. Numerous elements go into the overall process of game design. These range from topics such as idea generation, story, character, and game world development, game mechanics and level design, and user experience design. You will explore the process for designing meaningful experiences for your players. At the end of the course learners will have produced a game's high concept document, one page blueprint, a physical prototype, pitch and supporting design documentation to move from an idea in your head to a fleshed out design, ready for implementation.","Let's be honest, the process of game design is pretty ambiguous. It is about 90% awesome and 10% terror. As a game designer, you will create things that other people will actually (hopefully) play. Those players will have both positive and negative things to s... More%There's a significant difference between having an idea and beginning to turn that idea into something tangible. People often confuse the phrases ""flushing out"" and ""fleshing out"". Idea generation is about ""flushing out"" an idea. This module in the Principles ... More%Games aren't just about ideas, stories and worlds. They are also interactive systems that players experience. What does it mean to develop gameplay or game systems? This module introduces you to the process of designing gameplay experiences and then how those ... More%Prototyping is one of the most critical skills a game designer can cultivate. The ability to ""find the fun"" in gameplay design is critical to being a successful designer. In this module you will create a prototype of a game idea. This can then be put in front ... More"
"96","software_development","Hands-on Text Mining and Analytics","About this course: This course provides an unique opportunity for you to learn key components of text mining and analytics aided by the real world datasets and the text mining toolkit written in Java. Hands-on experience in core text mining techniques including text preprocessing, sentiment analysis, and topic modeling help learners be trained to be a competent data scientists. 

Empowered by bringing lecture notes together with lab sessions based on the y-TextMiner toolkit developed for the class, learners will be able to develop interesting text mining applications."," % % % % % "
"97","software_development","Functional Programming in Scala Capstone","About this course: In the final capstone project you will apply the skills you learned by building a large data-intensive application using real-world data.

You will implement a complete application processing several gigabytes of data. This application will show interactive visualizations of the evolution of temperatures over time all over the world.

The development of such an application will involve:
 — transforming data provided by weather stations into meaningful information like, for instance, the average temperature of each point of the globe over the last ten years ;
 — then, making images from this information by using spatial and linear interpolation techniques ;
 — finally, implementing how the user interface will react to users’ actions.","Get an overview of the project and all the information to get started. Transform data provided by weather stations into meaningful information. %Transform temperature data into images, using various interpolation techniques. %Generate images compatible with most Web-based mapping libraries. %Get more meaning from your data: compute temperature deviations compared to normals. %Generate images using bilinear interpolation. %Implement how the user interface will react to users’ actions "
"98","software_development","Agile Planning for Software Products","About this course: This course covers the techniques required to break down and map requirements into plans that will ultimately drive software production.

Upon successful completion of this course, you will be able to:

 - Create effective plans for software development
 - Map user requirements to developer tasks
 - Assess and plan for project risks
 - Apply velocity-driven planning techniques
 - Generate work estimates for software products","Welcome to the first module! In this module, you will be learning some basic principles that you will need for effective planning. You will start this module off with an introduction to planning. You will then learn about how planning, and the approach you tak... More%Welcome to module 2! Now that you’ve gotten your feet wet with general principles in project planning, let’s talk about some specific ways that you can use to implement those techniques. We’ll first discuss the concepts of story points and velocity, then move ... More%This module will be focusing on planning techniques at the iteration or sprint level. You will start by looking at various techniques for estimating task time. You will then look at task dependencies in more detail. This will come in handy when you learn two v... More%You’ve made it to the last module, congratulations! Here, we’re going to talk about what can cause projects to fail. We’ll start off by discussing common causes of failures, including anti-patterns. Then, you’ll learn how to assess risks, looking at their like... More"
"99","software_development","Architecting Smart IoT Devices","About this course: This course will teach you how to develop an embedded systems device. In order to reduce the time to market, many pre-made hardware and software components are available today. You'll discover all the available hardware and software components, such as processor families, operating systems, boards and networks. You'll also learn how to actually use and integrate these components.

At the end of the course you will be ready to start architecting and implementing your own embedded device! You'll learn how to debug and finetune your device and how to make it run on a low power supply.","What you'll learn and how you'll learn it! % % % % "
"100","software_development","Programming Languages, Part C","About this course: [As described below, this is Part C of a 3-part course.  Participants should complete Parts A and B first -- Part C ""dives right in"" and refers often to material from Part A and Part B.]

This course is an introduction to the basic concepts of programming languages, with a strong emphasis on functional programming. The course uses the languages ML, Racket, and Ruby as vehicles for teaching the concepts, but the real intent is to teach enough about how any language “fits together” to make you more effective programming in any language -- and in learning new ones.

This course is neither particularly theoretical nor just about programming specifics -- it will give you a framework for understanding how to use language constructs effectively and how to design correct and elegant programs. By using different languages, you will learn to think more deeply than in terms of the particular syntax of one language. The emphasis on functional programming is essential for learning how to write robust, reusable, composable, and elegant programs. Indeed, many of the most important ideas in modern languages have their roots in functional programming. Get ready to learn a fresh and beautiful way to look at software and how to have fun building it.

The course assumes some prior experience with programming, as described in more detail in the first module of Part A.  Part B assumes successful completion of Part A.

The course is divided into three Coursera courses: Part A, Part B, and Part C.  As explained in more detail in the first module of Part A, the overall course is a substantial amount of challenging material, so the three-part format provides two intermediate milestones and opportunities for a pause before continuing.  The three parts are designed to be completed in order and set up to motivate you to continue through to the end of Part C.  

Week 1 of Part A has a more detailed list of topics for all three parts of the course, but it is expected that most course participants will not (yet!) know what all these topics mean.","Welcome! Start here!  Learn about this course and how it's organized.  %Let's get started programming with Ruby, including learning about Ruby's variant of (almost) function closures and the ""inheritance and overriding"" that is the essence of object-oriented programming.  The welcome message has a few additional comments about ""wh... More%Welcome to the second week of Part C where we will focus on how functional programming and object-oriented programming encourage such ""exactly opposite"" decompositions of problems that they are ""more alike than you might realize"".  This is a key opportunity to... More%We have reached the last module of Programming Languages!  We first study subtyping, how it relates to static types for object-oriented programming, and how it relates to generics.  There is no assignment or quiz devoted only to this last ""new material"", but t... More"
